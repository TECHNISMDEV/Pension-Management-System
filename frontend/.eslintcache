[{"D:\\workspace\\pms\\frontend\\src\\index.js":"1","D:\\workspace\\pms\\frontend\\src\\App.js":"2","D:\\workspace\\pms\\frontend\\src\\reportWebVitals.js":"3","D:\\workspace\\pms\\frontend\\src\\redux\\store\\store.js":"4","D:\\workspace\\pms\\frontend\\src\\components\\Session\\logout.js":"5","D:\\workspace\\pms\\frontend\\src\\components\\Session\\login.js":"6","D:\\workspace\\pms\\frontend\\src\\components\\Common\\dashboard.js":"7","D:\\workspace\\pms\\frontend\\src\\redux\\reducer\\CombineReducer.js":"8","D:\\workspace\\pms\\frontend\\src\\components\\Common\\navbar.js":"9","D:\\workspace\\pms\\frontend\\src\\redux\\actions\\AuthActions.js":"10","D:\\workspace\\pms\\frontend\\src\\components\\Service\\service.js":"11","D:\\workspace\\pms\\frontend\\src\\redux\\actions\\UserBehaviourAction.js":"12","D:\\workspace\\pms\\frontend\\src\\components\\Home\\home.js":"13","D:\\workspace\\pms\\frontend\\src\\components\\Collections\\collections.js":"14","D:\\workspace\\pms\\frontend\\src\\components\\Members\\members.js":"15","D:\\workspace\\pms\\frontend\\src\\components\\Employer\\employer.js":"16","D:\\workspace\\pms\\frontend\\src\\components\\Returns\\return.js":"17","D:\\workspace\\pms\\frontend\\src\\redux\\reducer\\AuthReducer.js":"18","D:\\workspace\\pms\\frontend\\src\\redux\\reducer\\SRReducer.js":"19","D:\\workspace\\pms\\frontend\\src\\redux\\reducer\\UserBehaviourReducer.js":"20","D:\\workspace\\pms\\frontend\\src\\components\\Service\\member_register.js":"21","D:\\workspace\\pms\\frontend\\src\\components\\Service\\employer_register.js":"22","D:\\workspace\\pms\\frontend\\src\\components\\Home\\service_request.js":"23","D:\\workspace\\pms\\frontend\\src\\components\\Employer\\employer_registeration.js":"24","D:\\workspace\\pms\\frontend\\src\\components\\Members\\member_registration.js":"25","D:\\workspace\\pms\\frontend\\src\\redux\\actions\\types\\UserBehaviortypes.js":"26","D:\\workspace\\pms\\frontend\\src\\services\\AuthService.js":"27","D:\\workspace\\pms\\frontend\\src\\redux\\actions\\types\\Authtypes.js":"28","D:\\workspace\\pms\\frontend\\src\\redux\\actions\\types\\SR_types.js":"29","D:\\workspace\\pms\\frontend\\src\\utils\\commons.js":"30","D:\\workspace\\pms\\frontend\\src\\redux\\actions\\SRAction.js":"31","D:\\workspace\\pms\\frontend\\src\\components\\Employer\\activities.js":"32","D:\\workspace\\pms\\frontend\\src\\services\\SRService.js":"33","D:\\workspace\\pms_latest\\frontend\\src\\index.js":"34","D:\\workspace\\pms_latest\\frontend\\src\\reportWebVitals.js":"35","D:\\workspace\\pms_latest\\frontend\\src\\App.js":"36","D:\\workspace\\pms_latest\\frontend\\src\\redux\\store\\store.js":"37","D:\\workspace\\pms_latest\\frontend\\src\\components\\Session\\login.js":"38","D:\\workspace\\pms_latest\\frontend\\src\\components\\Session\\logout.js":"39","D:\\workspace\\pms_latest\\frontend\\src\\components\\Common\\dashboard.js":"40","D:\\workspace\\pms_latest\\frontend\\src\\redux\\reducer\\CombineReducer.js":"41","D:\\workspace\\pms_latest\\frontend\\src\\components\\Common\\navbar.js":"42","D:\\workspace\\pms_latest\\frontend\\src\\redux\\actions\\UserBehaviourAction.js":"43","D:\\workspace\\pms_latest\\frontend\\src\\redux\\actions\\AuthActions.js":"44","D:\\workspace\\pms_latest\\frontend\\src\\components\\Home\\home.js":"45","D:\\workspace\\pms_latest\\frontend\\src\\components\\Service\\service.js":"46","D:\\workspace\\pms_latest\\frontend\\src\\components\\Employer\\employer.js":"47","D:\\workspace\\pms_latest\\frontend\\src\\components\\Members\\members.js":"48","D:\\workspace\\pms_latest\\frontend\\src\\components\\Returns\\return.js":"49","D:\\workspace\\pms_latest\\frontend\\src\\components\\Collections\\collections.js":"50","D:\\workspace\\pms_latest\\frontend\\src\\redux\\reducer\\SRReducer.js":"51","D:\\workspace\\pms_latest\\frontend\\src\\redux\\reducer\\AuthReducer.js":"52","D:\\workspace\\pms_latest\\frontend\\src\\redux\\reducer\\UserBehaviourReducer.js":"53","D:\\workspace\\pms_latest\\frontend\\src\\components\\Service\\employer_register.js":"54","D:\\workspace\\pms_latest\\frontend\\src\\components\\Home\\service_request.js":"55","D:\\workspace\\pms_latest\\frontend\\src\\components\\Service\\member_register.js":"56","D:\\workspace\\pms_latest\\frontend\\src\\components\\Employer\\employer_registeration.js":"57","D:\\workspace\\pms_latest\\frontend\\src\\components\\Members\\member_registration.js":"58","D:\\workspace\\pms_latest\\frontend\\src\\redux\\actions\\types\\UserBehaviortypes.js":"59","D:\\workspace\\pms_latest\\frontend\\src\\redux\\actions\\types\\Authtypes.js":"60","D:\\workspace\\pms_latest\\frontend\\src\\redux\\actions\\types\\SR_types.js":"61","D:\\workspace\\pms_latest\\frontend\\src\\services\\AuthService.js":"62","D:\\workspace\\pms_latest\\frontend\\src\\utils\\commons.js":"63","D:\\workspace\\pms_latest\\frontend\\src\\redux\\actions\\SRAction.js":"64","D:\\workspace\\pms_latest\\frontend\\src\\components\\Employer\\activities.js":"65","D:\\workspace\\pms_latest\\frontend\\src\\services\\SRService.js":"66","D:\\workspace\\pms_latest\\frontend\\src\\components\\Employer\\employer_list.js":"67","D:\\workspace\\pms_latest\\frontend\\src\\components\\Employer\\employerFormView.js":"68","D:\\workspace\\pms_latest\\frontend\\src\\components\\Employer\\checklistUpload.js":"69","D:\\workspace\\pms_latest\\frontend\\src\\components\\Employer\\contacts.js":"70","D:\\workspace\\pms_latest\\frontend\\src\\components\\Employer\\address.js":"71","D:\\workspace\\pms_latest\\frontend\\src\\components\\Service\\serviceRegistration.js":"72","D:\\workspace\\pms_latest\\frontend\\src\\components\\Service\\formData\\serviceRegistrationForm.js":"73","D:\\workspace\\pms_latest\\frontend\\src\\components\\Returns\\returns.js":"74","D:\\workspace\\pms_latest\\frontend\\src\\components\\Members\\MemberRegistration.js":"75","D:\\workspace\\pms_latest\\frontend\\src\\components\\Service\\serviceMemberRegistration.js":"76"},{"size":700,"mtime":1654631646468,"results":"77","hashOfConfig":"78"},{"size":711,"mtime":1654631646416,"results":"79","hashOfConfig":"78"},{"size":375,"mtime":1654631646472,"results":"80","hashOfConfig":"78"},{"size":462,"mtime":1654631646472,"results":"81","hashOfConfig":"78"},{"size":1388,"mtime":1654631646468,"results":"82","hashOfConfig":"78"},{"size":4486,"mtime":1654631646468,"results":"83","hashOfConfig":"78"},{"size":10081,"mtime":1654631646462,"results":"84","hashOfConfig":"78"},{"size":337,"mtime":1654631646471,"results":"85","hashOfConfig":"78"},{"size":1674,"mtime":1654631646462,"results":"86","hashOfConfig":"78"},{"size":931,"mtime":1654631646469,"results":"87","hashOfConfig":"78"},{"size":743,"mtime":1654631646467,"results":"88","hashOfConfig":"78"},{"size":301,"mtime":1654631646470,"results":"89","hashOfConfig":"78"},{"size":1139,"mtime":1654631646465,"results":"90","hashOfConfig":"78"},{"size":30188,"mtime":1654631646462,"results":"91","hashOfConfig":"78"},{"size":729,"mtime":1654631646466,"results":"92","hashOfConfig":"78"},{"size":758,"mtime":1654631646463,"results":"93","hashOfConfig":"78"},{"size":8281,"mtime":1654631646466,"results":"94","hashOfConfig":"78"},{"size":828,"mtime":1654631646470,"results":"95","hashOfConfig":"78"},{"size":790,"mtime":1654631646471,"results":"96","hashOfConfig":"78"},{"size":439,"mtime":1654631646471,"results":"97","hashOfConfig":"78"},{"size":14246,"mtime":1654631646467,"results":"98","hashOfConfig":"78"},{"size":16273,"mtime":1654631646466,"results":"99","hashOfConfig":"78"},{"size":3052,"mtime":1654631646465,"results":"100","hashOfConfig":"78"},{"size":37373,"mtime":1654848093210,"results":"101","hashOfConfig":"78"},{"size":37060,"mtime":1654631646465,"results":"102","hashOfConfig":"78"},{"size":41,"mtime":1654631646470,"results":"103","hashOfConfig":"78"},{"size":722,"mtime":1654631646472,"results":"104","hashOfConfig":"78"},{"size":223,"mtime":1654631646470,"results":"105","hashOfConfig":"78"},{"size":179,"mtime":1654631646470,"results":"106","hashOfConfig":"78"},{"size":7961,"mtime":1654631646473,"results":"107","hashOfConfig":"78"},{"size":1415,"mtime":1654631646469,"results":"108","hashOfConfig":"78"},{"size":2219,"mtime":1654631646463,"results":"109","hashOfConfig":"78"},{"size":1120,"mtime":1654631646472,"results":"110","hashOfConfig":"78"},{"size":700,"mtime":1654631646468,"results":"111","hashOfConfig":"112"},{"size":375,"mtime":1654631646472,"results":"113","hashOfConfig":"112"},{"size":779,"mtime":1655743534129,"results":"114","hashOfConfig":"112"},{"size":462,"mtime":1654631646472,"results":"115","hashOfConfig":"112"},{"size":4715,"mtime":1655017227956,"results":"116","hashOfConfig":"112"},{"size":1388,"mtime":1654631646468,"results":"117","hashOfConfig":"112"},{"size":10178,"mtime":1663285935282,"results":"118","hashOfConfig":"112"},{"size":337,"mtime":1654631646471,"results":"119","hashOfConfig":"112"},{"size":6601,"mtime":1656535242544,"results":"120","hashOfConfig":"112"},{"size":301,"mtime":1654631646470,"results":"121","hashOfConfig":"112"},{"size":930,"mtime":1654965594442,"results":"122","hashOfConfig":"112"},{"size":1139,"mtime":1654631646465,"results":"123","hashOfConfig":"112"},{"size":1565,"mtime":1663287583980,"results":"124","hashOfConfig":"112"},{"size":699,"mtime":1655416993269,"results":"125","hashOfConfig":"112"},{"size":729,"mtime":1654631646466,"results":"126","hashOfConfig":"112"},{"size":8239,"mtime":1658618708415,"results":"127","hashOfConfig":"112"},{"size":36520,"mtime":1658781418185,"results":"128","hashOfConfig":"112"},{"size":790,"mtime":1654631646471,"results":"129","hashOfConfig":"112"},{"size":1045,"mtime":1654967362666,"results":"130","hashOfConfig":"112"},{"size":439,"mtime":1654631646471,"results":"131","hashOfConfig":"112"},{"size":21807,"mtime":1663284407782,"results":"132","hashOfConfig":"112"},{"size":5209,"mtime":1663284407781,"results":"133","hashOfConfig":"112"},{"size":14259,"mtime":1663285579489,"results":"134","hashOfConfig":"112"},{"size":36488,"mtime":1658898335652,"results":"135","hashOfConfig":"112"},{"size":37017,"mtime":1654872059306,"results":"136","hashOfConfig":"112"},{"size":41,"mtime":1654631646470,"results":"137","hashOfConfig":"112"},{"size":274,"mtime":1654965887530,"results":"138","hashOfConfig":"112"},{"size":179,"mtime":1654631646470,"results":"139","hashOfConfig":"112"},{"size":774,"mtime":1654965664234,"results":"140","hashOfConfig":"112"},{"size":23007,"mtime":1663561783103,"results":"141","hashOfConfig":"112"},{"size":1419,"mtime":1655410589349,"results":"142","hashOfConfig":"112"},{"size":2219,"mtime":1654871696279,"results":"143","hashOfConfig":"112"},{"size":1121,"mtime":1654871637603,"results":"144","hashOfConfig":"112"},{"size":7574,"mtime":1656798853190,"results":"145","hashOfConfig":"112"},{"size":19262,"mtime":1658865284415,"results":"146","hashOfConfig":"112"},{"size":2305,"mtime":1658607898837,"results":"147","hashOfConfig":"112"},{"size":8012,"mtime":1657049086299,"results":"148","hashOfConfig":"112"},{"size":10070,"mtime":1658601050422,"results":"149","hashOfConfig":"112"},{"size":6052,"mtime":1657048130217,"results":"150","hashOfConfig":"112"},{"size":2530,"mtime":1657048130214,"results":"151","hashOfConfig":"112"},{"size":10455,"mtime":1663564163737,"results":"152","hashOfConfig":"112"},{"size":20095,"mtime":1663565783943,"results":"153","hashOfConfig":"112"},{"size":15781,"mtime":1663564903783,"results":"154","hashOfConfig":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ce8rft",{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},"1p84rrp",{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"223"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"223"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"223"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"223"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"223"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"223"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"223"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"223"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"223"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"223"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"223"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"223"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"276","usedDeprecatedRules":"223"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"223"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":1,"source":"284","usedDeprecatedRules":"223"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"223"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"223"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"223"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"223"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"223"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"223"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"223"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"318","usedDeprecatedRules":"223"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"321","usedDeprecatedRules":"223"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"223"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"329","messages":"330","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"331","messages":"332","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"D:\\workspace\\pms\\frontend\\src\\index.js",[],"D:\\workspace\\pms\\frontend\\src\\App.js",["333"],"D:\\workspace\\pms\\frontend\\src\\reportWebVitals.js",[],"D:\\workspace\\pms\\frontend\\src\\redux\\store\\store.js",[],"D:\\workspace\\pms\\frontend\\src\\components\\Session\\logout.js",["334"],"D:\\workspace\\pms\\frontend\\src\\components\\Session\\login.js",[],"D:\\workspace\\pms\\frontend\\src\\components\\Common\\dashboard.js",["335","336"],"D:\\workspace\\pms\\frontend\\src\\redux\\reducer\\CombineReducer.js",[],"D:\\workspace\\pms\\frontend\\src\\components\\Common\\navbar.js",["337","338","339"],"D:\\workspace\\pms\\frontend\\src\\redux\\actions\\AuthActions.js",[],"D:\\workspace\\pms\\frontend\\src\\components\\Service\\service.js",["340","341"],"D:\\workspace\\pms\\frontend\\src\\redux\\actions\\UserBehaviourAction.js",[],"D:\\workspace\\pms\\frontend\\src\\components\\Home\\home.js",["342","343","344","345"],"D:\\workspace\\pms\\frontend\\src\\components\\Collections\\collections.js",["346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366"],"D:\\workspace\\pms\\frontend\\src\\components\\Members\\members.js",["367"],"D:\\workspace\\pms\\frontend\\src\\components\\Employer\\employer.js",["368"],"D:\\workspace\\pms\\frontend\\src\\components\\Returns\\return.js",["369","370","371","372"],"D:\\workspace\\pms\\frontend\\src\\redux\\reducer\\AuthReducer.js",["373"],"D:\\workspace\\pms\\frontend\\src\\redux\\reducer\\SRReducer.js",["374"],"D:\\workspace\\pms\\frontend\\src\\redux\\reducer\\UserBehaviourReducer.js",["375"],"D:\\workspace\\pms\\frontend\\src\\components\\Service\\member_register.js",["376","377","378"],"D:\\workspace\\pms\\frontend\\src\\components\\Service\\employer_register.js",["379","380"],"D:\\workspace\\pms\\frontend\\src\\components\\Home\\service_request.js",["381","382","383","384","385","386","387","388","389","390","391","392"],"D:\\workspace\\pms\\frontend\\src\\components\\Employer\\employer_registeration.js",["393","394","395","396","397","398","399","400","401"],"D:\\workspace\\pms\\frontend\\src\\components\\Members\\member_registration.js",["402","403","404","405","406","407"],"D:\\workspace\\pms\\frontend\\src\\redux\\actions\\types\\UserBehaviortypes.js",[],"D:\\workspace\\pms\\frontend\\src\\services\\AuthService.js",["408"],"D:\\workspace\\pms\\frontend\\src\\redux\\actions\\types\\Authtypes.js",[],"D:\\workspace\\pms\\frontend\\src\\redux\\actions\\types\\SR_types.js",[],"D:\\workspace\\pms\\frontend\\src\\utils\\commons.js",["409"],"D:\\workspace\\pms\\frontend\\src\\redux\\actions\\SRAction.js",["410"],"D:\\workspace\\pms\\frontend\\src\\components\\Employer\\activities.js",["411","412","413","414"],"D:\\workspace\\pms\\frontend\\src\\services\\SRService.js",["415","416","417","418","419"],"D:\\workspace\\pms_latest\\frontend\\src\\index.js",[],["420","421"],"D:\\workspace\\pms_latest\\frontend\\src\\reportWebVitals.js",[],"D:\\workspace\\pms_latest\\frontend\\src\\App.js",["422"],"\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Link, Route, Switch,Redirect } from \"react-router-dom\";\r\nimport Login from \"./components/Session/login\";\r\nimport Logout from \"./components/Session/logout\";\r\nimport Dashboard from \"./components/Common/dashboard\";\r\n\r\n\r\n\r\nfunction App(props) {\r\n  return (\r\n    \r\n      <Router forceRefresh={true}>\r\n        <Switch>\r\n       \r\n        <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Redirect exact from=\"/dashboard\" to=\"/dashboard/home\" />\r\n          <Route exact path=\"/dashboard/:page?/:id?\" render={props => <Dashboard {...props}/>} />\r\n          <Redirect from='/' to='/dashboard' />\r\n        </Switch>\r\n\r\n      </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App","D:\\workspace\\pms_latest\\frontend\\src\\redux\\store\\store.js",[],"D:\\workspace\\pms_latest\\frontend\\src\\components\\Session\\login.js",["423","424","425","426","427"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch, useStore } from \"react-redux\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport '../../asset/css/login.css';\r\nimport logo from '../../asset/img/logo.png';\r\nimport { login_action } from \"../../redux/actions/AuthActions\";\r\nimport { LOGIN_INPROGRESS } from '../../redux/actions/types/Authtypes';\r\nimport Store from '../../redux/store/store';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nfunction Login() {\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { isLoggedIn } = useSelector(state => state.AuthReducer);\r\n    const { isLoading } = Store.subscribe(() => {\r\n\r\n    })\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value;\r\n        setUsername(username);\r\n    };\r\n\r\n    const onChangePassword = (e) => {\r\n        const password = e.target.value;\r\n        setPassword(password);\r\n    };\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type: LOGIN_INPROGRESS\r\n        })\r\n        dispatch(login_action(username, password));\r\n    }\r\n\r\n\r\n    if (isLoggedIn) {\r\n        console.log(\"login success\", isLoggedIn);\r\n        return <Redirect to={\"/dashboard\"} />\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container-fluid login-bg-frame\">\r\n            <div className=\"row text-center\">\r\n\r\n                <div className=\"col-sm\">\r\n                    <div className=\"login_frame card  top-50 start-50 translate-middle shadow p-5 mt-5 bg-white rounded\">\r\n\r\n                        <div className=\"card-body\">\r\n                            <div className=\"login-logo-frame\">\r\n                                <img className=\"login-logo\" src={logo} alt=\"logo\" />\r\n                            </div>\r\n\r\n                            <div className=\"row pt-5\">\r\n                                <div className=\"col-sm\">\r\n                                    <div class=\"form-group text-nowrap\">\r\n                                        <label for=\"formGroupExampleInput\" class=\"form-label px-2 fs-5  w-25\">Username</label>\r\n                                        <div className=\"input-group mb-3 \">\r\n\r\n                                            <input type=\"text\" className=\"form-control mx-3 w-50 rounded-pill\" id=\"formGroupExampleInput\" aria-label=\"Sizing example input\" onChange={onChangeUsername} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm\">\r\n                                    <div class=\"form-group text-nowrap\">\r\n                                        <label for=\"formGroupExampleInput1\" class=\"form-label px-2 fs-5  w-25\">Password</label>\r\n                                        <div className=\"input-group mb-3\">\r\n\r\n                                            <input type=\"password\" className=\"form-control mx-3 w-50 rounded-pill\" id=\"formGroupExampleInput1\" aria-label=\"Sizing example input\" onChange={onChangePassword} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm text-center\">\r\n\r\n                                    <div className=\"p-3 pb-5\">\r\n                                        <button className=\"btn btn-danger rounded-pill\" style={{ width: \"200px\" }} variant=\"contained\" color=\"secondary\" onClick={handleLogin} disabled={Store.getState().AuthReducer.isLoading}>{Store.getState().AuthReducer.isLoading?<CircularProgress size={20}/>:\"Sign in\"}</button>\r\n                                    </div>\r\n                                    <div className=\"float-start p-3\">\r\n                                        <Link className=\"nav-link\" to={\"login\"}>Forgot Password?</Link>\r\n                                    </div>\r\n                                    <div className=\" float-end p-3\">\r\n                                        <Link className=\"nav-link\" to={\"login\"}>To Register?</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","D:\\workspace\\pms_latest\\frontend\\src\\components\\Session\\logout.js",["428"],"\r\nimport {React,useEffect} from \"react\";\r\nimport '../../asset/css/login.css';\r\nimport {useDispatch} from \"react-redux\"\r\nimport { logout } from \"../../redux/actions/AuthActions\";\r\nimport { Link } from \"react-router-dom\"\r\nimport {useSelector} from \"react-redux\"\r\n\r\nfunction Logout() {\r\n\r\n    const { isLoggedIn } = useSelector(state => state.AuthReducer);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if(isLoggedIn){\r\n        dispatch(logout());\r\n        }\r\n        return () => {\r\n            console.log(\"session logged out\")\r\n        }\r\n    }, [])\r\n\r\n    \r\n    return (\r\n        <div className=\"container-fluid login-bg-frame\">\r\n           <div className=\"row text-center\">\r\n\r\n<div className=\"col-sm\">\r\n    <div className=\"card logout_frame top-50 start-50 translate-middle shadow p-5 mt-5 bg-white rounded\">\r\n\r\n        <div className=\"card-body\">\r\n            <div className=\"row p-3\">\r\n                <div className=\"col-sm text-center m-5 p-2\">\r\n                    <h5 className=\"card-title fs-2 login-title\">Your session is logged out successfully!</h5>\r\n                    <h3 className=\"lead pt-5\">To login again <Link className=\"stretched-link\" to={\"/login\"}>click here</Link>.</h3>\r\n                    \r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Logout\r\n","D:\\workspace\\pms_latest\\frontend\\src\\components\\Common\\dashboard.js",["429","430","431","432"],"D:\\workspace\\pms_latest\\frontend\\src\\redux\\reducer\\CombineReducer.js",[],"D:\\workspace\\pms_latest\\frontend\\src\\components\\Common\\navbar.js",["433","434"],"import { React, useState } from 'react'\r\nimport { MdPersonOutline } from \"react-icons/md\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport Logout from '@material-ui/icons/ExitToApp';\r\nimport { useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { toBePartiallyChecked } from '@testing-library/jest-dom/dist/matchers';\r\nfunction Navbar() {\r\n    const user = useSelector(state => state.AuthReducer).user;\r\n    //const [iconName,setIconName] = useState(formIcon(user))\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const history = useHistory();\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    const formIcon = (user) => {\r\n        var firstName = user.firstName\r\n        var lastName = user.lastName\r\n\r\n        return firstName[0].toUpperCase() + lastName[0].toUpperCase()\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        menuDropDown: {\r\n            '& div': {\r\n                // this is just an example, you can use vw, etc.\r\n                width: '250px',\r\n                color: 'black',\r\n                background: '#f2f2f2',\r\n            }\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <nav className=\"navbar primary-navbar\">\r\n            <div className=\"container-fluid\">\r\n\r\n                <Link className='text-decoration-none' to={\"/dashboard\"}> <p className=\"navbar-brand fs-2\" >Pension Management Solution</p></Link>\r\n                <span className=\"d-flex\">\r\n\r\n                    {/* <div className=\"dropdown\">\r\n                                <a className=\"nav-link\" type=\"button\" id=\"dropdownMenuButton\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    <MdPersonOutline size={35} color={\"#ff1744\"}/>\r\n                                </a>\r\n                                <ul className=\"dropdown-menu dropdown-menu-light dropdown-menu-end \" aria-labelledby=\"dropdownMenuButton\">\r\n                                    <li><Link className=\"dropdown-item pl-5\" to={\"/dashboard\"}>Dashboard</Link></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"#\">Settings</a></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"#\">Adminstration</a></li>\r\n                                    <li><hr className=\"dropdown-divider\" /></li>\r\n                                    <li><Link className=\"dropdown-item\" to={\"/logout\"}>Logout</Link></li>\r\n                                </ul>\r\n                            </div> */}\r\n\r\n                    <IconButton\r\n                        onClick={handleClick}\r\n                        size=\"small\"\r\n                        sx={{ ml: 2 }}\r\n                        aria-controls={open ? 'account-menu' : undefined}\r\n                        aria-haspopup=\"true\"\r\n                        aria-expanded={open ? 'true' : undefined}\r\n                    >\r\n                        <Avatar sx={{ width: 32, height: 32 }}>{formIcon(user)}</Avatar>\r\n                    </IconButton>\r\n\r\n                    <Menu\r\n                        anchorEl={anchorEl}\r\n                        id=\"account-menu\"\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        onClick={handleClose}\r\n                        PaperProps={{\r\n                            elevation: 0,\r\n                            sx: {\r\n                                overflow: 'visible',\r\n                                filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                                mt: 1.5,\r\n                                '& .MuiAvatar-root': {\r\n                                    width: 32,\r\n                                    height: 32,\r\n                                    ml: -0.5,\r\n                                    mr: 1,\r\n                                },\r\n                                '&:before': {\r\n                                    content: '\"\"',\r\n                                    display: 'block',\r\n                                    position: 'absolute',\r\n                                    top: 0,\r\n                                    right: 14,\r\n                                    width: 20,\r\n                                    height: 10,\r\n                                    bgcolor: 'background.paper',\r\n                                    transform: 'translateY(-50%) rotate(45deg)',\r\n                                    zIndex: 0,\r\n                                },\r\n                            },\r\n                        }}\r\n                        className={classes.menuDropDown}\r\n                        getContentAnchorEl={null}\r\n                        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                        transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                    >\r\n                        <Typography component=\"div\">\r\n                            <MenuItem onClick={()=>{history.push('/dashboard')}}>\r\n                                Dashboard\r\n                            </MenuItem>\r\n                            <MenuItem>\r\n                                Adminstration\r\n                            </MenuItem>\r\n                           \r\n                            <MenuItem>\r\n\r\n                                Settings\r\n                            </MenuItem>\r\n                            <Divider sx={{ borderBottomWidth: 10 }}/>\r\n                            <MenuItem onClick={()=>{history.push('/logout')}}>\r\n\r\n                                <Box textAlign=\"left\" m={1}>\r\n                                    Logout\r\n                                </Box>\r\n                                <ListItemIcon>\r\n                                    <Logout />\r\n                                </ListItemIcon>\r\n                            </MenuItem>\r\n                        </Typography>\r\n                    </Menu>\r\n                </span>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","D:\\workspace\\pms_latest\\frontend\\src\\redux\\actions\\UserBehaviourAction.js",[],"D:\\workspace\\pms_latest\\frontend\\src\\redux\\actions\\AuthActions.js",[],"D:\\workspace\\pms_latest\\frontend\\src\\components\\Home\\home.js",["435","436","437","438"],"import { React, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { t_date } from '../../utils/commons'\r\nimport Service_request from './service_request'\r\nfunction Home() {\r\n\r\n  const { isLoggedIn } = useSelector(state => state.AuthReducer);\r\n  const [username, setUsername] = useState(\"demo\");\r\n  const user_data = useSelector(state => state.AuthReducer).user;\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    setUsername(user_data.firstName + ' ' + user_data.lastName)\r\n   \r\n\r\n  }, [username])\r\n\r\n  return (\r\n    <div className=\"container-fluid h-100 p-0\">\r\n      <div className=\"p-3\">\r\n      <div className=\"row p-3\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <span className=\"lead fs-2\"><h3 className=\"card-title\">Welcome, {username}</h3>\r\n            </span>\r\n            <small className=\" text-muted fs-5 lead\"> Today is {t_date().day + ', ' + t_date().date + ' ' + t_date().text_month + ' ' + t_date().year}</small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n     \r\n     <Service_request/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","D:\\workspace\\pms_latest\\frontend\\src\\components\\Service\\service.js",["439","440","441","442","443"],"D:\\workspace\\pms_latest\\frontend\\src\\components\\Employer\\employer.js",["444"],"import React from 'react'\r\nimport 'antd/dist/antd.css';\r\n\r\nimport { Tabs } from 'antd';\r\nimport Employer_registration from './employer_registeration'\r\nimport EmployerList from './employer_list';\r\nfunction Employer(props) {\r\nconst { TabPane } = Tabs;\r\n\r\nfunction callback(key){\r\n\r\n}\r\n\r\n    return (\r\n        <div className='p-3'> \r\n\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n          <Tabs onChange={callback} defaultActiveKey='1' type=\"card\">\r\n            <TabPane tab=\"Employer List\" key=\"1\">\r\n              <EmployerList/>\r\n            </TabPane>\r\n          </Tabs>\r\n          </div>\r\n        </div>\r\n                    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Employer","D:\\workspace\\pms_latest\\frontend\\src\\components\\Members\\members.js",["445"],"import React from 'react'\r\nimport 'antd/dist/antd.css';\r\n\r\nimport { Tabs } from 'antd';\r\nimport Member_registeration from './member_registration'\r\nfunction Members() {\r\nconst { TabPane } = Tabs;\r\n\r\nfunction callback(key){\r\n\r\n}\r\n\r\n    return (\r\n        <div className='p-3'> \r\n\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n          <Tabs onChange={callback} defaultActiveKey='2' type=\"card\">\r\n            <TabPane tab=\"Member List\" key=\"1\">\r\n            </TabPane>\r\n            <TabPane tab=\"Member Registration\" key=\"2\">\r\n             <Member_registeration/>\r\n            </TabPane>\r\n          </Tabs>\r\n          </div>\r\n        </div>\r\n                    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Members","D:\\workspace\\pms_latest\\frontend\\src\\components\\Returns\\return.js",["446","447","448","449"],"import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport axios, { post } from 'axios';\r\nimport { API_URL, formatDate } from '../../utils/commons'\r\nimport { MicNone } from \"@material-ui/icons\";\r\n\r\n\r\nclass Return extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      dataLoaded: false,\r\n      isFormInvalid: false,\r\n      rows: null,\r\n      cols: null,\r\n      value: '',\r\n      file: null,\r\n      returns: [],\r\n      returnItems: [],\r\n      bgColor: \"\",\r\n      returnItemId: \"\",\r\n      ValidatedItems: [],\r\n      isselected_retid:'',\r\n      validated:[]\r\n    }\r\n    this.returnItemTable = this.returnItemTable.bind(this);\r\n  }\r\n  openModal = () => this.setState({ isOpen: true });\r\n  closeModal = () => this.setState({ isOpen: false });\r\n  Validate = () => {\r\n\r\n    axios({\r\n      url: API_URL+'/validate/'+this.state.returnItemId,\r\n      method: 'GET',\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*'\r\n      },\r\n    }).then((res => {\r\n      const ValidatedItems = res.data.items;\r\n      this.setState({ returnItems: res.data.items });\r\n      console.log(res.data)\r\n      this.state.validated.push(this.state.returnItemId)\r\n    }))\r\n    this.forceUpdate();\r\n  }\r\n\r\n  returnItemTable = (event,key) => {\r\nthis.setState({isselected_retid:key})\r\n    this.setState({ bgColor: 'blue' });\r\n    this.setState({returnItemId : key})\r\n     axios({\r\n       url: API_URL+'/getItemsByReturnId/'+key,\r\n       method: 'GET',\r\n       headers: {\r\n         'Access-Control-Allow-Origin': '*'\r\n       },\r\n     }).then((res => {\r\n       const returnItems = res.data;\r\n       this.setState({ returnItems });\r\n       console.log(res.data)\r\n     }))\r\n  }\r\n\r\n\r\n  importFile = (e) => {\r\n    let file = this.state.file\r\n    let formdata = new FormData()\r\n    formdata.append('file', file)\r\n    formdata.append('msg', 'return .csv file passed to back-end')\r\n    axios({\r\n      url: API_URL+'/file-upload',\r\n      method: 'POST',\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      data: formdata\r\n    }).then((res => {\r\n      const returns = res.data;\r\n      this.setState({ returns });\r\n      if(res.data != null)\r\n                {\r\n                  this.closeModal()\r\n                }\r\n      console.log(res.data)\r\n    }))\r\n  }\r\n\r\n  handleFile = (e) => {\r\n    let file_att = e.target.files[0]\r\n    this.setState({ file: file_att })\r\n    console.log(e.target.files[0])\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n        <div className=\"card\" style={{ \"top\": \"12px\",\"left\":\"13px\",\"width\":\"98.5%\" }} >\r\n        <div className=\"card-body\">\r\n        <p className=\"card-title fs-3 mb-3\">Returns</p>\r\n        {this.state.returns.returns ? '' : <div class=\"btn-group\" role=\"group\" aria-label=\"Return\">\r\n          <button type=\"button\" className=\"btn btn-danger float-end rounded-pill\" onClick={this.openModal} style={{ \"top\": \"9px\", \"left\": \"7px\" }} >Import Return</button>\r\n        </div>}\r\n        <div class=\"modal-dialog modal-dialog-centered\">\r\n          <Modal show={this.state.isOpen} onHide={this.closeModal}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Import Returns</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Footer>\r\n              <input type=\"file\" id=\"myfile\" name=\"myfile\" onChange={(e) => this.handleFile(e)} style={{ \"padding\": \"20px\" }} />\r\n              <Button variant=\"primary\" className=\"btn btn-danger float-end rounded-pill\" onClick={(e) => this.importFile(e)} >\r\n                Import\r\n            </Button>\r\n\r\n              <Button variant=\"primary\" className=\"btn btn-danger float-end rounded-pill\" onClick={this.closeModal}>\r\n                Cancel\r\n            </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n        <div>\r\n          {this.state.returns.returns && <div class=\"btn-group\" role=\"group\" aria-label=\"Return\">\r\n            <button type=\"button\" className=\"btn btn-danger float-end rounded-pill\" style={{ \"top\": \"-6px\", \"left\": \"4px\" }} onClick={() => this.Validate()} >Validate</button>\r\n          </div>}\r\n          {this.state.returns.returns && <div class=\"btn-group\" role=\"group\" aria-label=\"Return\">\r\n            <button type=\"button\" className=\"btn btn-danger float-end rounded-pill\" style={{ \"top\": \"-6px\", \"left\": \"13px\" }} >Import Returns</button>\r\n          </div>}\r\n          {this.state.returns.returns && <div class=\"btn-group\" role=\"group\" aria-label=\"Return\">\r\n            <button type=\"button\" className=\"btn btn-danger float-end rounded-pill\" style={{ \"top\": \"-6px\", \"left\": \"21px\" }} >Cancel Returns</button>\r\n          </div>}\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Submission Number</th>\r\n                <th scope=\"col\">Month(MM)</th>\r\n                <th scope=\"col\">Year(YYYY)</th>\r\n                <th scope=\"col\">Employer No</th>\r\n                <th scope=\"col\">Date Received</th>\r\n                <th scope=\"col\">Financial Year</th>\r\n                <th scope=\"col\">Imported by</th>\r\n                <th scope=\"col\">Processing Centre</th>\r\n                <th scope=\"col\">Date Validated</th>\r\n                <th scope=\"col\">Return Total</th>\r\n                <th scope=\"col\">Members Count</th>\r\n                <th scope=\"col\">Date Cancel</th>\r\n                <th scope=\"col\">Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.returns.returns && this.state.returns.returns.map((key) => (\r\n                <tr key={key.id} onClick={(event) => {this.returnItemTable(event,key.id);this.forceUpdate()}}  style={this.state.isselected_retid==key.id? {backgroundColor:'#f2f2f2'}:{}}>\r\n                  <td>{key ? key.submissionNumber :''}</td>\r\n                  <td>{key ? key.month : ''}</td>\r\n                  <td>{key ? key.year : ''}</td>\r\n                  <td>{key ? key.companyId : ''}</td>\r\n                  <td>{key ? formatDate(key.created) :''}</td>\r\n                  <td></td>\r\n                  <td>{key ? key.id : ''}</td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td>{key ? key.totalReturnAmount : ''}</td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td>{key && !(this.state.validated.includes(key.id)) ? key.status : 'Validated'}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"return-footer\" style={{ \"padding-top\": \"327px\"}}>\r\n        <p className=\"card-title fs-3 mb-3\">Returns Items</p>\r\n         <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Provisional Check</th>\r\n                <th scope=\"col\">Social Security Number</th>\r\n                <th scope=\"col\">NRC Number</th>\r\n                <th scope=\"col\">FName</th>\r\n                <th scope=\"col\">Last Name</th>\r\n                <th scope=\"col\">Date of Birth</th>\r\n                <th scope=\"col\">Gross Wage</th>\r\n                <th scope=\"col\">Employer Share</th>\r\n                <th scope=\"col\">Employee Share</th>\r\n                <th scope=\"col\">Total Contribution</th>\r\n                <th scope=\"col\">Status</th>\r\n                <th scope=\"col\">Comments</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.state.returnItems && this.state.returnItems.map((key) => (\r\n              <tr key={key.id}>\r\n                <td></td>\r\n                <td></td>\r\n                  <td>{key ? key.memberNrc : ''}</td>\r\n                <td>{key ? key.memFirstName : ''}</td>\r\n                <td>{key ? key.memeLastName : ''}</td>\r\n                <td>{key ? formatDate(key.memberDob) : ''}</td>\r\n                <td></td>\r\n                <td>{key ? key.companyShare : ''}</td>\r\n                <td>{key ? key.memberShare : ''}</td>\r\n                <td></td>\r\n                <td>{key ? key.retur.status : ''}</td>\r\n                <td></td>\r\n              </tr>\r\n            ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Return;\r\n","D:\\workspace\\pms_latest\\frontend\\src\\components\\Collections\\collections.js",["450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468"],"import { React, useState, useEffect, useMemo } from 'react'\r\nimport { AiOutlineSearch } from 'react-icons/ai'\r\nimport { Tabs } from 'antd';\r\nimport { useFormik, Field, FormikProvider } from 'formik';\r\nimport axios from 'axios';\r\nimport { API_URL, formatDate } from '../../utils/commons';\r\nimport { useTable } from 'react-table'\r\nimport { Modal } from 'antd';\r\nimport { setsubmitpayment } from '../../utils/commons'\r\nimport { Redirect } from 'react-router';\r\nimport { Table } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\nconst { TabPane } = Tabs;\r\n\r\nfunction Collections() {\r\n    const _ = require(\"lodash\");\r\n    const [enableManRecep, setEnableManRecep] = useState(true)\r\n    const [trans_Type, settrans_Type] = useState('')\r\n    const [isnew, setisnew] = useState(true)\r\n    const [emp_no, setemp_no] = useState('')\r\n    const [emp_name, setemp_name] = useState('')\r\n    const [reg_date, setreg_date] = useState('')\r\n    const [address, setaddress] = useState('')\r\n    const [login_user, setlogin_user] = useState('')\r\n    const [subm, setsubm] = useState('')\r\n    const [status, setstatus] = useState('')\r\n    const [amt_paid, setamt_paid] = useState()\r\n    const [amt_due, setamt_due] = useState()\r\n    const [proc_cent, setproc_cent] = useState('')\r\n    const [ret_total, setret_total] = useState(0)\r\n    const [responseData, setresponseData] = useState([])\r\n    const [payments, setpayments] = useState([])\r\n    const [payment_trans, setpayment_trans] = useState([])\r\n    const [returns, setReturns] = useState([])\r\n    const [addpayment, setaddpayment] = useState(false)\r\n    const [addpayment_type, setaddpayment_type] = useState('')\r\n    const [addpayment_amt, setaddpayment_amt] = useState()\r\n    const [addpayment_cashcode, setaddpayment_cashcode] = useState('')\r\n    const [addpayment_sub_no, setaddpayment_sub_no] = useState('')\r\n    const [isEmployersearch, setisEmployersearch] = useState(false)\r\n    const userdata = useSelector(state => state.AuthReducer).user;\r\n    useEffect(() => {\r\n        if (!ret_total == 0) {\r\n            setamt_due(ret_total)\r\n            //setamt_paid(responseData.reduce((a, b) => a = a + parseInt(b.payments[0].amount), 0))\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }, [ret_total,payments])\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            trans_type: trans_Type,\r\n            emp_no: emp_no ? emp_no : '',\r\n            subm_no: subm ? subm : '',\r\n            date_received: reg_date,\r\n            status: status,\r\n            address: address,\r\n            login_user: login_user,\r\n            emp_name: emp_name,\r\n            amt_paid: amt_paid,\r\n            amt_due: amt_due,\r\n            proc_cent: proc_cent,\r\n            addpayment_type: addpayment_type,\r\n            addpayment_amt: addpayment_amt,\r\n            addpayment_cashcode: addpayment_cashcode,\r\n            addpayment_sub_no: addpayment_sub_no\r\n\r\n        },\r\n        enableReinitialize: true,\r\n        onSubmit: values => {\r\n            //dispatch(register_sr_employer(values))]\r\n\r\n        },\r\n        onChange: values => {\r\n\r\n            formik.setValues(values)\r\n\r\n\r\n        }\r\n    })\r\n\r\n\r\n\r\n    const searchbyemp = (e) => {\r\n        e.preventDefault();\r\n        axios.post(API_URL + \"/getByRetCompanyID/\" + formik.values.emp_no).then(\r\n            res => {\r\n                if(!res.data.length==0){\r\n                setisEmployersearch(true)\r\n                setresponseData(res.data)\r\n                setemp_name(res.data[0].returns.company.name)\r\n\r\n                setreg_date(formatDate(res.data[0].returns.collection.created))\r\n                setemp_no(res.data[0].returns.company.id)\r\n                setstatus(res.data[0].returns.collection.status)\r\n                setaddress(res.data[0].returns.company.address.adressLine1 + ' ' + res.data[0].returns.company.address.adressLine2)\r\n                setlogin_user(userdata.id)\r\n\r\n                setproc_cent('20')\r\n\r\n                //setpayments(res.data[0].payments),\r\n                console.log(res.data)\r\n                setReturns(res.data)\r\n                // res.data.map((pay) => (\r\n                //     console.log(pay.payments[0]),\r\n                //     add_payment_data(pay.payments[0])\r\n                //     //setpayments(payments.push(pay.payments)),\r\n                //     //setlist_subm_no(list_subm_no.concat(pay.returns.submissionNo))\r\n                // )),\r\n                //setpayments(payments.concat(res.data[0].payments)),\r\n               \r\n                }else{\r\n                    alert(\"No Payable Return Data!!\")\r\n                }\r\n             } )\r\n    }\r\n    const searchbysubm = (e) => {\r\n        e.preventDefault();\r\n        //setEmpNumb(formik.values.subm_no)\r\n        console.log(formik.values.subm_no)\r\n        axios.post(API_URL + '/getByRetSubmissionNo/' + formik.values.subm_no).then(\r\n            res => {\r\n                if(res.data[0]){\r\n                console.log(res.data)\r\n                setemp_name(res.data[0].returns.company.name)\r\n\r\n                setreg_date(formatDate(res.data[0].returns.collection.created))\r\n                setemp_no(res.data[0].returns.company.id)\r\n                setstatus(res.data[0].returns.collection.status)\r\n                setaddress(res.data[0].returns.company.address?res.data[0].returns.company.address.adressLine1 + ' ' + res.data[0].returns.company.address.adressLine2:'')\r\n                setlogin_user(userdata.id)\r\n                setsubm(res.data[0].returns.collection.submissionNo)\r\n                setproc_cent('20')\r\n                //setamt_due((res.data[0].returns.damount).toFixed(2))\r\n                //setpayments(res.data[0].payments),\r\n                //setReturns(returns.concat(res.data[0].returns))\r\n                setReturns(res.data)\r\n                console.log(returns)\r\n                //setamt_paid((res.data[0].returns.retPaidAMT + res.data[0].returns.penPaidAMT).toFixed(2))\r\n                setresponseData(res.data)\r\n                console.log(payments)\r\n                }\r\n                else{\r\n                    alert(\"No Payable Return Data!!\")\r\n                }\r\n\r\n            })\r\n        \r\n    }\r\n \r\n  \r\n    const handlenewentry = (e) => {\r\n        e.preventDefault()\r\n        setisnew(false)\r\n        settrans_Type('OTC')\r\n    }\r\n\r\n    const calcu_ret_total = (e) => {\r\n        e.preventDefault()\r\n\r\n        setret_total((responseData.reduce((a, v) => v.returns ? a = a + v.returns.treturnAmount + v.returns.pamount : '', 0)))\r\n\r\n        // responseData.map((ret)=>(\r\n        //         console.log(ret.returns.treturnAmount+ret.returns.pamount),\r\n        //         setret_total(ret_total+ret.returns.treturnAmount+ret.returns.pamount)\r\n        //         //setret_total((ret_total + ret.returns.treturnAmount + ret.returns.pamount))\r\n\r\n        // ))\r\n\r\n        //console.log(ret_total)\r\n\r\n    }\r\n    const handleaddpaymentOk = () => {\r\n        setaddpayment(false);\r\n        if(!(parseInt(formik.values.addpayment_amt)<amt_due)){\r\n        // setresponseData(responseData.concat([{\r\n        //     'returns': null,\r\n        //     'payments': [\r\n        //         {\r\n        //             'amount': formik.values.addpayment_amt,\r\n        //             'id': \"\",\r\n        //             'collection': { 'submissionNo': formik.values.addpayment_sub_no },\r\n        //             'payment_Type': formik.values.addpayment_type\r\n        //         }\r\n        //     ]\r\n            \r\n        // }]))\r\n        payment_trans.push(\r\n            {\r\n                \"payments_type\":formik.values.addpayment_type,\r\n                \"subm_no\":formik.values.addpayment_sub_no,\r\n                \"amt\":formik.values.addpayment_amt\r\n            }\r\n        )\r\n        // setpayment_trans(...payment_trans,{\r\n        //     \"payments_type\":formik.values.addpayment_type,\r\n        //     \"subm_no\":formik.values.addpayment_sub_no,\r\n        //     \"amt\":formik.values.addpayment_amt\r\n        // })\r\n    setaddpayment_sub_no(' ')\r\n    setaddpayment_type('')\r\n    setaddpayment_amt('')\r\n    setaddpayment_cashcode('')\r\n    }else{\r\n        setaddpayment_sub_no(' ')\r\n    setaddpayment_type('')\r\n    setaddpayment_amt('')\r\n    setaddpayment_cashcode('')\r\n        alert(\"The entered amount is less than Due amount!!\")\r\n    }\r\n    };\r\n\r\n    const handleaddpaymentCancel = () => {\r\n        setaddpayment(false);\r\n    };\r\n    const handleaddpayments = () => {\r\n        setaddpayment(true)\r\n\r\n\r\n    }\r\n\r\n    const handlepaymentreset = ()=>{\r\n        setpayment_trans([])\r\n    }\r\n\r\n    const handleSubmitPayment = () => {\r\n        var form_data = null\r\n        \r\n       form_data=setsubmitpayment(responseData,payment_trans)\r\n        console.log(form_data)\r\n        axios.post(API_URL + '/submitPayment/',form_data).then(\r\n            (res)=>(\r\n                console.log(res),\r\n                alert(\"Successfully paid!!\")\r\n            )\r\n        )\r\n    }\r\n\r\n\r\n\r\nconst collectionColumns = [\r\n    {\r\n        title: 'Submission No',\r\n        dataIndex: ['returns','submissionNo'],\r\n        key: 'submissionNo',\r\n    }, \r\n    {\r\n        title: 'Year',\r\n        dataIndex: ['returns','year'],\r\n        key: 'year',\r\n    }, \r\n    {\r\n        title: 'Month',\r\n        dataIndex: ['returns','month'],\r\n        key: 'month',\r\n    }, \r\n    {\r\n        title: 'Returns Total',\r\n        dataIndex: ['returns','treturnAmount'],\r\n        key: 'treturnAmount',\r\n    }, \r\n    {\r\n        title: 'Penalty',\r\n        dataIndex: ['returns','pamount'],\r\n        key: 'pamount',\r\n        render:(pen)=><p>{pen?pen:0}</p>\r\n    }, \r\n    {\r\n        title: 'Full/Partial Amount',\r\n        dataIndex: ['returns',''],\r\n        key: '',\r\n    }, \r\n    {\r\n        title: 'Balance',\r\n        dataIndex: ['returns','treturnAmount'],\r\n        key: 'treturnAmount',\r\n        render:(total,row)=><p>{row.returns.treturnAmount - row.returns.retPaidAMT}</p>\r\n    }, \r\n    {\r\n        title: 'Status',\r\n        dataIndex: ['returns','status'],\r\n        key: 'status',\r\n    }, \r\n    {\r\n        title: 'Payment Id',\r\n        dataIndex: ['payments','id'],\r\n        key: 'id',\r\n    }, \r\n    {\r\n        title: 'Return Paid',\r\n        dataIndex: ['returns','retPaidAMT'],\r\n        key: 'retPaidAMT',\r\n    }, \r\n]\r\n\r\nconst paymentsColumns = [\r\n    {\r\n        title: 'Payment Mode',\r\n        dataIndex: 'payments_type',\r\n        key: 'payments_type',\r\n    }, \r\n    {\r\n        title: 'Amount',\r\n        dataIndex: 'amt',\r\n        key: 'amt',\r\n    }, \r\n    {\r\n        title: 'Cash Code',\r\n        dataIndex: '',\r\n        key: '',\r\n        render: (text,row)=><p>{row.payments_type.toLowerCase() === 'cash'?'S999':''}</p>\r\n    }, \r\n    {\r\n        title: 'Cash Code',\r\n        dataIndex: ['returns','treturnAmount'],\r\n        key: 'treturnAmount',\r\n    }, \r\n    {\r\n        title: 'Bank Name',\r\n        dataIndex: ['returns','pamount'],\r\n        key: 'pamount',\r\n        render:(pen)=><p>{pen?pen:0}</p>\r\n    }, \r\n    {\r\n        title: 'Branch Name',\r\n        dataIndex: ['returns',''],\r\n        key: '',\r\n    }, \r\n    {\r\n        title: 'Cheque No',\r\n        dataIndex: ['returns','treturnAmount'],\r\n        key: 'treturnAmount',\r\n       \r\n    }, \r\n    {\r\n        title: 'Cheque Received',\r\n        dataIndex: ['returns','status'],\r\n        key: 'status',\r\n    }, \r\n    {\r\n        title: 'EFT Bank Code',\r\n        dataIndex: ['payments','id'],\r\n        key: 'id',\r\n    }, \r\n    {\r\n        title: 'EFT Bank Name',\r\n        dataIndex: ['returns','retPaidAMT'],\r\n        key: 'retPaidAMT',\r\n    }, \r\n]\r\n    return (\r\n        <div className=\"p-3\">\r\n        <div className=\"row px-3\">\r\n\r\n            <div className=\"card\" >\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-title fs-3 mb-3\">Collections</p>\r\n\r\n                    <button type=\"button\" className=\"btn btn-danger float-end rounded-pill mx-2\" onClick={handleSubmitPayment} disabled={payment_trans.length==0?true:false}>Submit Payment</button>\r\n                    <button type=\"button\" className=\"btn btn-danger float-end rounded-pill mx-2\" onClick={(e) => window.location.reload()}>Reset</button>\r\n                    <button type=\"button\" className=\"btn btn-danger float-end rounded-pill mx-2\" onClick={(e) => handlenewentry(e)}>+ Add</button>\r\n                </div>\r\n\r\n                <FormikProvider value={formik}>\r\n                    <Modal title=\"Add Payment\" visible={addpayment} onOk={handleaddpaymentOk} onCancel={handleaddpaymentCancel}>\r\n                        <table>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td> <label class=\"form-label float-end\">Payment Type : </label></td>\r\n                                    <td><Field component=\"select\" name=\"addpayment_type\" id=\"addpayment_type\" value={formik.values.addpayment_type} className={\"form-control float-start mx-2\"} style={{ width: '230px' }} onChange={formik.handleChange}>\r\n                                        <option value=\" \" display='none'></option>\r\n                                        <option value=\"Cash\">Cash</option>\r\n                                        <option value=\"Cheque\">Cheque</option>\r\n\r\n                                    </Field></td>\r\n                                </tr>\r\n                                {/* <tr>\r\n                                    <td> <label class=\"form-label float-end\">Submission No : </label></td>\r\n                                    <td><Field component=\"select\" name=\"addpayment_sub_no\" id=\"addpayment_sub_no\" value={formik.values.addpayment_sub_no} className={\"form-control float-start mx-2\"} style={{ width: '230px' }} onChange={formik.handleChange} disabled={isEmployersearch}>\r\n                                        <option value=\" \" display='none'></option>\r\n                                        {responseData && responseData.map((sub) => (sub.returns ?\r\n                                            <option value={sub.returns.submissionNo}>{sub.returns.submissionNo}</option> : null\r\n                                        ))}\r\n\r\n                                    </Field></td>\r\n                                </tr> */}\r\n                                <tr>\r\n                                    <td> <label class=\"form-label float-end\">Amount : </label></td>\r\n                                    <td><input type=\"text\"\r\n                                        className='form-control float-start mx-2'\r\n                                        id=\"addpayment_amt\"\r\n                                        name=\"addpayment_amt\"\r\n                                        style={{ width: '230px' }}\r\n                                        value={formik.values.addpayment_amt} onChange={formik.handleChange} /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td> <label class=\"form-label float-end\">Cash Code : </label></td>\r\n                                    <td><input type=\"text\"\r\n                                        className='form-control float-start mx-2'\r\n                                        id=\"addpayment_cashcode\"\r\n                                        name=\"addpayment_cashcode\"\r\n                                        style={{ width: '230px' }}\r\n                                        defaultValue={formik.values.addpayment_type == 'Cash' ? 'S999' : ''} onChange={formik.handleChange} /></td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </Modal>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <table>\r\n                            <tbody>\r\n                                <tr >\r\n                                    <td className='p-1'><label className='form-label float-end'>Transaction Type: </label></td>\r\n                                    <td className='p-1'>\r\n                                        <Field component=\"select\" id=\"trans_type\" value={formik.values.trans_type} className={\"form-control float-start\"} onChange={formik.handleChange} disabled={isnew} required>\r\n                                            <option value=\" \" display='none'></option>\r\n                                            <option value=\"OTC\">OTC</option>\r\n                                            <option value=\"Manual\">Manual</option>\r\n\r\n                                        </Field></td>\r\n                                    <td className='p-1'><label className='form-label float-end'>Employer No#: </label></td>\r\n                                    <td className='p-1'>\r\n                                        <input className=\"form-control float-start\" id='emp_no' placeholder=\"Search by employer no\" style={{ width: '230px' }} defaultValue={formik.values.emp_no} onChange={formik.handleChange} disabled={isnew}></input>\r\n                                        <a className=\"p-0 mx-1\" type=\"button\" onClick={searchbyemp}>\r\n                                            <AiOutlineSearch style={{ padding: '0px' }} size={30} color={'black'} />\r\n                                        </a>\r\n                                    </td>\r\n                                    <td className='p-1'><label className='form-label float-end'>Submission No#: </label></td>\r\n                                    <td className='p-1'> <input className=\"form-control float-start\" id='subm_no' name='subm_no' placeholder=\"Search by Sub. no\" style={{ width: '230px' }} defaultValue={formik.values.subm_no} onChange={formik.handleChange} disabled={isnew}></input>\r\n                                        <a className=\"p-0 mx-1\" type=\"button\" onClick={searchbysubm}>\r\n                                            <AiOutlineSearch style={{ padding: '0px' }} size={30} color={'black'} />\r\n                                        </a>\r\n                                    </td>\r\n                                    <td className='p-1'><label className='form-label float-end'>Login User: </label></td>\r\n                                    <td className='p-1'> <input className=\"form-control float-start\" style={{ width: '230px' }} defaultValue={formik.values.login_user} name='login_user' id='login_user' onChange={formik.handleChange} disabled></input></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='p-1'><label className='form-label float-end'>Date Received: </label></td>\r\n                                    <td className='p-1'> <input className=\"form-control float-start\" style={{ width: '230px' }} defaultValue={formik.values.date_received} name='date_received' id='date_received' onChange={formik.handleChange} disabled></input></td>\r\n                                    <td className='p-1'><label className='form-label float-end'>Employer Name: </label></td>\r\n                                    <td className='p-1'> <input className=\"form-control float-start\" style={{ width: '230px' }} defaultValue={formik.values.emp_name} name='emp_name' id='emp_name' onChange={formik.handleChange} disabled></input></td>\r\n                                    <td className='p-1'><label className='form-label float-end'>Amount Paid: </label></td>\r\n                                    <td className='p-1'> <input className=\"form-control float-start\" style={{ width: '230px' }} defaultValue={formik.values.amt_paid} name='amt_paid' id='amt_paid' onChange={formik.handleChange} disabled></input></td>\r\n                                    <td className='p-1'><label className='form-label float-end'>Manual Receipt: </label></td>\r\n                                    <td className='p-1'> <input className=\"form-control float-start\" style={{ width: '230px' }} defaultValue={formik.values.man_rec} name='man_rec' id='man_rec' onChange={formik.handleChange} disabled={formik.values.trans_type == 'Manual' ? false : true} ></input></td>\r\n                               \r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='p-1'><label className='form-label float-end'>Date Printed: </label></td>\r\n                                    <td className='p-1'> <input className=\"form-control float-start\" style={{ width: '230px' }} defaultValue={formik.values.date_received} name='date_received' id='date_received' onChange={formik.handleChange} disabled></input></td>\r\n                                    <td className='p-1'><label className='form-label float-end'>Employer Address: </label></td>\r\n                                    <td className='p-1'> <input className=\"form-control float-start\" style={{ width: '230px' }} defaultValue={formik.values.address} name='address' id='address' onChange={formik.handleChange} disabled/></td>\r\n                                    <td className='p-1'><label className='form-label float-end'>Amount Due: </label></td>\r\n                                    <td className='p-1'> <input className=\"form-control float-start\" style={{ width: '230px' }} defaultValue={formik.values.amt_due} name='amt_due' id='amt_due' onChange={formik.handleChange} disabled></input></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='p-1'><label className='form-label float-end'>Processing Center: </label></td>\r\n                                    <td className='p-1'> <input className=\"form-control float-start\" style={{ width: '230px' }} defaultValue={formik.values.proc_cent} disabled></input></td>\r\n                                    <td className='p-1'><label className='form-label float-end'>Status: </label></td>\r\n                                    <td className='p-1'> <input className=\"form-control float-start\" style={{ width: '230px' }} defaultValue={formik.values.status} name='status' id='status' onChange={formik.handleChange} disabled></input></td>\r\n\r\n                                </tr>\r\n                                {/* <tr>\r\n                                    <td className='p-1'><label className='form-label float-end'>Login User: </label></td>\r\n                                    <td className='p-1'> <input className=\"form-control float-start\" style={{ width: '230px' }} defaultValue={formik.values.login_user} name='login_user' id='login_user' onChange={formik.handleChange} disabled></input></td>\r\n\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='p-1'><label className='form-label float-end'>Manual Receipt: </label></td>\r\n                                    <td className='p-1'> <input className=\"form-control float-start\" style={{ width: '230px' }} defaultValue={formik.values.man_rec} name='man_rec' id='man_rec' onChange={formik.handleChange} disabled={formik.values.trans_type == 'Manual' ? false : true} ></input></td>\r\n                                </tr> */}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <div className='row p-2 mt-5'>\r\n                            <Tabs defaultActiveKey=\"1\" type=\"card\">\r\n                                <TabPane tab=\"Returns\" key=\"1\">\r\n                                    <div className=\"row\">\r\n                                        <p className=\"card-title fs-3 mb-3 d-inline\">Returns</p>\r\n\r\n\r\n\r\n\r\n\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <table>\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <button type=\"button\" className=\"btn btn-danger float-start rounded-pill mx-3\" style={{ width: '190px' }} disabled>Calculate Selected</button>\r\n\r\n                                                        <button type=\"button\" className=\"btn btn-danger float-start rounded-pill mx-3\" style={{ width: '190px' }} onClick={calcu_ret_total}>Calculate All</button>\r\n\r\n                                                        <button type=\"button\" className=\"btn btn-danger float-start rounded-pill mx-3\" style={{ width: '190px' }} disabled>Remove Return</button>\r\n                                                     \r\n                                                    </td>\r\n                                                    <td>\r\n                                                    <h1 className='display-4 mx-5 p-0 float-end' style={{ display: ret_total ? 'block' : 'none' }}>Returns Total : {amt_due ? amt_due : ret_total}</h1>\r\n                                                    </td>\r\n\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n\r\n\r\n\r\n                                    </div>\r\n                                    <div className='row m-3'>\r\n                                        <div style={{maxHeight:'200px',overflow:'auto'}}>\r\n\r\n                                                <Table onRow={(record, rowIndex) => {\r\n                                                    return {\r\n                                                        onClick: event => { }, // click row\r\n                                                        onDoubleClick: event => { }, // double click row\r\n                                                        onContextMenu: event => { }, // right button click row\r\n                                                        onMouseEnter: event => { }, // mouse enter row\r\n                                                        onMouseLeave: event => { }, // mouse leave row\r\n                                                    };\r\n\r\n                                                }} rowKey=\"submissionNo\"\r\n                                                    columns={collectionColumns} dataSource={returns}\r\n                                                    //loading={isLoadingReturnItems}\r\n                                                    pagination={{\r\n                                                        position: ['none', 'bottomCenter'],\r\n                                                        defaultPageSize: 5,\r\n                                                    }}\r\n\r\n                                                />\r\n\r\n\r\n                                        {/* <table class=\"table table-striped\">\r\n                                            <thead class=\"thead-dark\" style={{position: 'sticky', top: '0'}}>\r\n                                                <tr>\r\n                                                    <th scope=\"col\">Submission No</th>\r\n                                                    <th scope=\"col\">Year</th>\r\n                                                    <th scope=\"col\">Month</th>\r\n                                                    <th scope=\"col\">Returns Total</th>\r\n                                                    <th scope=\"col\">Penalty</th>\r\n\r\n                                                    <th scope=\"col\">Full/Partial Amount</th>\r\n                                                    <th scope=\"col\">Balance</th>\r\n                                                    <th scope=\"col\">Status</th>\r\n                                                    <th scope=\"col\">Payment Id</th>\r\n                                                    <th scope=\"col\">Return Paid</th>\r\n\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {responseData && responseData.map((key, i) => (key.returns ?\r\n                                                    \r\n                                                    <tr key={key}>\r\n                                                        <td>\r\n                                                            {key.returns.submissionNo}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {key.returns.year}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {key.returns.month}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {key.returns ? key.returns.treturnAmount : 0}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {key.returns ? key.returns.pamount : 0}\r\n                                                        </td>\r\n\r\n                                                        <td>\r\n                                                            { }\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            { }\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {key.returns.status == 'Completed' ? 'Ready to pay' : key.returns.status}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {key.payments.id}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            { }\r\n                                                        </td>\r\n\r\n\r\n\r\n                                                    </tr> : ''\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </table> */}\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                </TabPane>\r\n                                <TabPane tab=\"Payment Mode\" key=\"2\">\r\n                                    <div className=\"row p-3\">\r\n                                        <p className=\"card-title fs-3 mb-3\">Payments</p>\r\n                                        <button type=\"button\" className=\"btn btn-danger float-end rounded-pill mx-2\" style={{ width: '150px' }} onClick={handleaddpayments} disabled={amt_due?false:true}>+ Add</button>\r\n                                        <button type=\"button\" className=\"btn btn-danger float-end rounded-pill mx-2\" style={{ width: '150px' }} onClick={handlepaymentreset} disabled={isnew}>Reset</button>\r\n                                    </div>\r\n                                    <div className='row m-3'>\r\n\r\n                                            \r\n                                   {/* {<Table onRow={(record, rowIndex) => {\r\n                                                    return {\r\n                                                        onClick: event => { }, // click row\r\n                                                        onDoubleClick: event => { }, // double click row\r\n                                                        onContextMenu: event => { }, // right button click row\r\n                                                        onMouseEnter: event => { }, // mouse enter row\r\n                                                        onMouseLeave: event => { }, // mouse leave row\r\n                                                    };\r\n\r\n                                                }} \r\n                                                    columns={paymentsColumns} dataSource={payment_trans}\r\n                                                    //loading={isLoadingReturnItems}\r\n                                                    pagination={{\r\n                                                        position: ['none', 'bottomCenter'],\r\n                                                        defaultPageSize: 5,\r\n                                                    }}\r\n\r\n                                                />} */}\r\n\r\n\r\n\r\n                                        <table className='table table-striped'>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <td><b>Payment Mode</b></td>\r\n                                                    <td><b>Amount</b></td>\r\n                                                    <td><b>Cash Code</b></td>\r\n                                                    <td><b>Bank Code</b></td>\r\n                                                    <td><b>Bank Name</b></td>\r\n                                                    <td><b>Branch Name</b></td>\r\n                                                    <td><b>Cheque No</b></td>\r\n                                                    <td><b>Cheque Received</b></td>\r\n                                                    <td><b>EFT Bank Code</b></td>\r\n                                                    <td><b>EFT Bank Name</b></td>\r\n                                                   \r\n\r\n                                                </tr>\r\n\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {payment_trans && payment_trans.map((payt) => (\r\n                                                    <tr key={payt}>\r\n                                                        <td>\r\n                                                            {payt.payments_type}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <input className='form-control h-50 w-50' type='text' defaultValue={payt.amt} disabled={payt.amt ? true : false} />\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {payt.payments_type == 'Cash' ? 'S999' : ''}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            { }\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            { }\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            { }\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            { }\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            { }\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            { }\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            { }\r\n                                                        </td>\r\n                                                        \r\n                                                    </tr>\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </TabPane>\r\n                            </Tabs>\r\n                        </div>\r\n                    </form>\r\n                </FormikProvider>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Collections","D:\\workspace\\pms_latest\\frontend\\src\\redux\\reducer\\SRReducer.js",["469"],"import {\r\n    GET_SR_DATA_OWNERID,\r\n    REGISTER_SR_EMPLOYER,\r\n    REGISTER_SR_MEMBER,\r\n  } from \"../actions/types/SR_types\";\r\n\r\n\r\n \r\n\r\n  const initialState = {\r\n    \"SR_data\":\"\",\r\n    \"reg_sr_employer\":\"\"\r\n\r\n};\r\n\r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case GET_SR_DATA_OWNERID:\r\n        return {\r\n          ...state,\r\n          SR_data: payload.SR_data\r\n         \r\n        };\r\n        case REGISTER_SR_EMPLOYER:\r\n        return {\r\n          ...state,\r\n          reg_sr_employer: payload.reg_sr_employer\r\n        };\r\n        case REGISTER_SR_MEMBER:\r\n        return {\r\n          ...state,\r\n          reg_sr_member: payload.reg_sr_member\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  }","D:\\workspace\\pms_latest\\frontend\\src\\redux\\reducer\\AuthReducer.js",["470"],"import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGIN_INPROGRESS,\r\n    LOGOUT,\r\n  } from \"../actions/types/Authtypes\";\r\n\r\n\r\n  const user = JSON.parse(sessionStorage.getItem(\"cx_user\"));\r\n\r\n  const initialState = user ? { isLoggedIn: true, user ,isLoading:false} : { isLoggedIn: false, user: null, isLoading:false };\r\n\r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case LOGIN_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: true,\r\n          user: payload.user,\r\n          isLoading:false\r\n        };\r\n      case LOGIN_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n          isLoading:false\r\n        };\r\n      case LOGIN_INPROGRESS:\r\n        return{\r\n          ...state,\r\n          isLoading:true\r\n        };\r\n      case LOGOUT:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","D:\\workspace\\pms_latest\\frontend\\src\\redux\\reducer\\UserBehaviourReducer.js",["471"],"import {\r\n    TAB_ACTIVE,\r\n    \r\n  } from \"../actions/types/UserBehaviortypes\";\r\n\r\n\r\n  const ACTIVE_TAB= {};\r\n\r\n  const initialState = ACTIVE_TAB\r\n\r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case TAB_ACTIVE:\r\n        return {\r\n          ...state,\r\n          ACTIVE_TAB: payload.ACTIVE_TAB\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","D:\\workspace\\pms_latest\\frontend\\src\\components\\Service\\employer_register.js",["472","473","474","475","476","477","478","479","480","481","482","483","484","485"],"import { React, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport {  useHistory } from \"react-router-dom\";\r\n\r\nimport { API_URL, formatDate, setSrRegistration, set_employ_registration, t_date } from '../../utils/commons'\r\n\r\nimport Employer_registration from '../Employer/employer_registeration';\r\nimport '../../App.css';\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from 'yup'\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Alert } from 'antd';\r\n\r\nconst _ = require('lodash')\r\nfunction Employer_register(props) {\r\n\r\n    \r\n    const [srNum, setSrId] = useState(props.id?props.id:null)\r\n    const [isDisable, setIsDisable] = useState(true)\r\n    const [date_received, setDate_received] = useState('')\r\n    const [enableEmpRegForm, setEnableEmpRegForm] = useState(false)\r\n    const [employer_number,setEmployer_Number] = useState('')\r\n    const [srForm,setSrForm] = useState({})\r\n    const [lookUp,setLookUp] = useState(null)\r\n    // const [initialValues,setInitialValues] = useState()\r\n\r\n\r\n    const schema = yup.object().shape({\r\n        contact_no : yup.string().min(10),\r\n        contact_mail : yup.string().email()\r\n    })\r\n\r\n\r\n    let history = useHistory(); \r\n    const userdata = useSelector(state => state.AuthReducer).user;\r\n\r\n    const initialValues = {\r\n    \r\n\r\n        sr_num:'',\r\n        id:'',\r\n        sr_type:  'Employer Registration',\r\n        status: '',\r\n        owner_type: '',\r\n        date_received:'',\r\n        contact_name:'',\r\n        contact_mail:'',\r\n        contact_no:'',\r\n        employer_id: '',\r\n        employer_name:'',\r\n        employer_type:'',\r\n        nationality: '',\r\n        nrc: '',\r\n        prop_firstname:'',\r\n        prop_lastname:'',\r\n        location:'',\r\n        owner_name:'',\r\n        owner_id: userdata.id,\r\n        notes:'',\r\n    }\r\n\r\n    const { register, handleSubmit,getValues,watch, formState: { errors } ,setValue} = useForm(\r\n        { resolver: yupResolver(schema), defaultValues:initialValues }\r\n    );\r\n\r\n    const onSubmitSR = data =>{\r\n        console.log(data)\r\n        setIsDisable(true)\r\n        submitServiceRequest(data,userdata.id)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(props.id){\r\n            axios.get(API_URL + '/serviceRequestBySrNumber/'+srNum).then(\r\n            (res) => {\r\n                console.log(res.data)\r\n                setSrForm(res.data)\r\n                setEmployer_Number(res.data.companyVo.id)\r\n                setSRFormData(res.data)\r\n               \r\n            } \r\n        )\r\n    }\r\n\r\n    axios.get(API_URL + '/getLookUpForEmployer').then(\r\n        (res) => {\r\n            console.log(res.data)\r\n            setLookUp(res.data)\r\n           \r\n        })\r\n\r\n   \r\n    }, [])\r\n\r\n    console.log(errors)  ;\r\n    const setSRFormData = (data)=>{\r\n        setValue(\"id\",data.serviceRequestVo.id)\r\n        setValue(\"sr_num\",data.serviceRequestVo.srNumber)\r\n        setValue(\"sr_type\",data.serviceRequestVo.type)\r\n        setValue(\"status\",data.serviceRequestVo.status)\r\n       // setValue(\"owner_type\",data.serviceRequestVo.srNumber)\r\n        setValue(\"date_received\",formatDate(data.serviceRequestVo.created))\r\n        setValue(\"contact_name\",data.serviceRequestVo.contactName)\r\n        setValue(\"contact_no\",data.serviceRequestVo.contactNumber)\r\n        setValue(\"contact_mail\",data.serviceRequestVo.contactEmail)\r\n        setValue(\"employer_id\",data.companyVo.id)\r\n        setValue(\"employer_name\",data.companyVo.name)\r\n        setValue(\"employer_type\",data.companyVo.companyType)\r\n        setValue(\"nationality\",data.serviceRequestVo.propiterNationality)\r\n        setValue(\"location\",data.serviceRequestVo.location)\r\n        setValue(\"nrc\",data.serviceRequestVo.proprietorNRC)\r\n        setValue(\"prop_firstname\",data.serviceRequestVo.srPropiterFirstName)\r\n        setValue(\"prop_lastname\",data.serviceRequestVo.srPropiterLastName)\r\n        setValue(\"owner_name\",data.serviceRequestVo.user.position.name)\r\n        setValue(\"owner_type\",data.serviceRequestVo.user.position.positionType)\r\n        setValue(\"owner_id\",data.serviceRequestVo.user.id)\r\n        setValue(\"notes\",data.serviceRequestVo.comments)\r\n    }\r\n\r\n    \r\n     \r\n    const handlenewentry = (e) => {\r\n        e.preventDefault();\r\n        axios.get(API_URL + \"/getNewServiceRequest\").then(\r\n            (res) => (\r\n                //setSrId(res.data.srNumber),\r\n                setValue('sr_num', res.data.srNumber),\r\n                setValue('owner_name',userdata.lastName)\r\n            )\r\n        )\r\n\r\n\r\n        setValue(\"date_received\",t_date().month + '/' + t_date().date + '/' + t_date().year)\r\n        setValue(\"status\",\"Open\")\r\n\r\n        setIsDisable(false)\r\n    }\r\n\r\n    const submitServiceRequest = (sr_values,userId)=>{\r\n        axios.post(API_URL+'/newServiceRequest',setSrRegistration(sr_values,userId)).\r\n        then((res)=>{\r\n            setEmployer_Number(res.data.companyVo.id)\r\n            setValue(\"employer_id\",res.data.companyVo.id)\r\n            setSrForm(res.data.serviceRequestVo)\r\n            console.log(res.data)\r\n            alert(\"Service request created successfully!!\")\r\n        }).catch((err)=>{\r\n            alert(\"Failed to create Service Request!!\")\r\n        })\r\n}\r\n\r\n    const handleResetForm = () => {\r\n        history.push(\"/dashboard/service\");\r\n      }\r\n\r\n    return (\r\n        <div className=\"p-2\">\r\n          \r\n                <form className='form' onSubmit={handleSubmit(onSubmitSR)}>\r\n                    <div className='row p-1'>\r\n                        <div class=\"card py-3\">\r\n                            <div class=\"card-body\">\r\n                            {Object.keys(errors).map((key)=>(\r\n                                 <span className='p-1' key={key}><Alert message={errors[key].message} type=\"error\" showIcon />\r\n                                \r\n                                 </span>\r\n                                 \r\n                                ))}\r\n\r\n                                <table className=\"float-end\">\r\n\r\n                                    <td className=\"p-3\"> <button type=\"button\" className=\"btn btn-danger float-start rounded-pill\" onClick={(handlenewentry)}>+ Add</button></td>\r\n                                    <td className=\"p-3\"> <button type=\"reset\" className=\"btn btn-danger float-start rounded-pill\" onClick={(handleResetForm)}>Cancel</button></td>\r\n                                    <td className=\"p-3\">     <button type=\"submit\" className=\"btn btn-danger float-start rounded-pill\">Proceed</button></td>\r\n                                </table>\r\n\r\n                              \r\n\r\n\r\n                            </div>\r\n\r\n                   \r\n                            <div class=\"row\">\r\n                                <div className=\"font-weight-bolder col \">\r\n                                    <h4 className=\"lead text-center\"> Service Request Details </h4>\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <h4 className=\"lead  text-center\"> Employer and Properietor Details </h4>\r\n                                </div>\r\n                                <div class=\"col\">\r\n\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <h4 className=\"lead  text-center\"> Contact Details </h4>\r\n                                </div>\r\n                            </div>\r\n                           \r\n\r\n                            <table className=''>\r\n                                <tbody className='fs-6'>\r\n\r\n                                    <tr>\r\n                                        <td className='tcx-form-label'><label className='form-label float-end'>Sr #: </label></td>\r\n                                        <td className='p-1'>  <input type=\"text\"\r\n                                            className='form-control float-start '\r\n                                            id=\"sr_num\"\r\n                                            name=\"sr_num\"\r\n                                            style={{ width: '100%' }}\r\n                                            defaultValue={initialValues.sr_num} {...register(\"sr_num\")} disabled /></td>\r\n                                        <td className='tcx-form-label'><label className='form-label float-end'>Employer Name: </label></td>\r\n                                        <td className='' colSpan={3}>\r\n                                            <input type=\"text\"\r\n                                                className='form-control float-start '\r\n                                                name='employer_name'\r\n                                                id='employer_name'\r\n                                                style={{ width: '100%' }}\r\n                                                defaultValue={initialValues.employer_name.toUpperCase()} {...register(\"employer_name\")} onChange={(e)=> setValue(\"employer_name\",e.target.value.toUpperCase())} disabled={isDisable} required />\r\n                                        </td>\r\n                                     \r\n                                        <td className='p-1 tcx-form-label'><label className='form-label float-end'>Contact Name: </label></td>\r\n                                        <td className='p-1'> <input type=\"text\"\r\n                                            className='form-control float-start '\r\n                                            name='contact_name'\r\n                                            id='contact_name'\r\n                                            style={{ width: '100%' }}\r\n                                            defaultValue={initialValues.contact_name}  {...register(\"contact_name\")} disabled={isDisable} />\r\n                                        </td>\r\n\r\n\r\n                                    </tr>\r\n                                    <tr>\r\n                                                <td className='tcx-form-label'><label className='form-label float-end'>Status: </label></td>\r\n                                        <td className='p-1'> <select class=\"form-select\" id=\"status\" style={{ width: '100%' }} {...register(\"status\")} disabled>\r\n                                               \r\n                                                { lookUp ? lookUp.TCX_STATUS.map((item)=>(\r\n                                                   <option defaultValue={item} key={item} >{item}</option>  \r\n                                                )):null\r\n                                            }\r\n                                             \r\n\r\n\r\n                                        </select></td>\r\n\r\n                                        <td className='p-1 tcx-form-label'><label className='form-label float-end'>Employer Type: </label></td>\r\n                                        <td className='p-1'>\r\n                                            <select name='employer_type' id='employer_type' defaultValue={initialValues.sr_type} className={\"form-control float-start\"} style={{ width: '100%' }}  {...register(\"employer_type\")} disabled={isDisable}>\r\n\r\n                                                <option defaultValue=\"\"></option>\r\n                                                <option defaultValue=\"Domestic Employer\">Domestic Employer</option>\r\n                                                <option defaultValue=\"Business Name\">Business Name</option>\r\n                                                <option defaultValue=\"Limited Company\">Limited Company</option>\r\n                                                <option defaultValue=\"ROS employer\">ROS employer</option>\r\n                                                <option defaultValue=\"Statutory\">Statutory</option>\r\n\r\n\r\n                                            </select>\r\n                                        </td>\r\n                                        <td className='p-1 tcx-form-label'>\r\n                                            <label class=\"form-label float-end\">Properietor First Name: </label>\r\n\r\n                                        </td>\r\n                                        <td className='p-1'>\r\n                                            <input type=\"text\"\r\n                                                className='form-control float-start'\r\n                                                name='prop_firstname'\r\n                                                id='prop_firstname'\r\n                                                style={{ width: '100%' }}\r\n                                                defaultValue={initialValues.prop_firstname}  {...register(\"prop_firstname\")} disabled={isDisable} />\r\n                                        </td>\r\n                                        <td className='p-1 tcx-form-label'><label className='form-label float-end'>Contact Mobile #: </label></td>\r\n                                        <td className='p-1'>  <input type=\"number\"\r\n                                            className='form-control float-start '\r\n                                            name='contactNumber'\r\n                                            id='contact_no'\r\n                                            style={{ width: '100%' }}\r\n                                            defaultValue={initialValues.contact_no}  {...register(\"contact_no\")}  disabled={isDisable} /></td>\r\n\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td className='p-1 tcx-form-label'><label className='form-label float-end'>Date Received: </label></td>\r\n                                        <td className='p-1'> <input type=\"text\"\r\n                                            className='form-control float-start '\r\n                                            name='date_received'\r\n                                            style={{ width: '100%' }}\r\n                                            defaultValue={initialValues.date_received}  {...register(\"date_received\")}  disabled /></td>\r\n                                        <td className='p-1 tcx-form-label'><label className='form-label float-end'>Employer #: </label></td>\r\n                                        <td className='p-1'><input type=\"text\"\r\n                                            className='form-control float-start '\r\n                                            name='employer_id'\r\n                                            id=\"employer_id\"\r\n                                            style={{ width: '100%' }}\r\n                                            defaultValue={initialValues.employer_id}  {...register(\"employer_id\")}  disabled /></td>\r\n                                             \r\n                                             <td className='p-1 tcx-form-label'>\r\n                                            <label class=\"form-label float-end\">Properietor Last Name: </label>\r\n\r\n                                        </td >\r\n                                        <td className='p-1'>\r\n                                            <input type=\"text\"\r\n                                                className='form-control float-start'\r\n                                                name='prop_lastname'\r\n                                                id='prop_lastname'\r\n                                                style={{ width: '100%' }}\r\n                                                defaultValue={initialValues.prop_lastname}  {...register(\"prop_lastname\")}  disabled={isDisable} />\r\n                                        </td>\r\n                                       \r\n                                        <td className='p-1 tcx-form-label'><label className='form-label float-end'>Contact Email: </label></td>\r\n                                        <td className='p-1'> <input type=\"text\"\r\n                                            className='form-control float-start '\r\n                                            name='contactEmail'\r\n                                            id='contact_mail'\r\n                                            style={{ width: '100%' }}\r\n                                            defaultValue={initialValues.contact_mail}  {...register(\"contact_mail\")}  disabled={isDisable} />\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className='p-1 tcx-form-label'><label className='form-label float-end'>Owner Type: </label></td>\r\n                                        <td className='p-1'>\r\n\r\n                                            <select class=\"form-select float-start \" style={{ width: '100%' }} id=\"owner_type\" name=\"owner_type\" defaultChecked={initialValues.owner_type} {...register(\"owner_type\")}  disabled={isDisable}>\r\n                                            \r\n                                                { lookUp ? lookUp.TCX_OWNER_TYPE.map((item)=>(\r\n                                                   <option defaultValue={item} key={item}>{item}</option>  \r\n                                                )):null\r\n                                            }\r\n                                           \r\n\r\n                                            </select></td>\r\n                                            <td className='tcx-form-label'>\r\n                                            <label class=\"form-label float-end\">Location: </label>\r\n\r\n                                        </td>\r\n                                        <td className='p-1'>\r\n                                            <input type=\"text\"\r\n                                                className='form-control float-start'\r\n                                                name='location'\r\n                                                id='location'\r\n                                                style={{ width: '100%' }}\r\n                                                defaultValue={initialValues.location}  {...register(\"location\")}  disabled={isDisable} />\r\n                                        </td>\r\n                                        \r\n                                        <td className='p-1 tcx-form-label'> <label class=\"form-label float-end\">Nationality: </label></td>\r\n\r\n                                        <td className='p-1'>  \r\n                                         <select id=\"nationality\" name=\"nationality\"  {...register(\"nationality\")} defaultValue={initialValues.nationality} className={\"form-control float-start\"}  disabled={isDisable} >\r\n                                             \r\n                                                { lookUp ? lookUp.TCX_NATIOANLITY.map((item)=>(\r\n                                                   <option defaultValue={item} key={item} >{item}</option>  \r\n                                                )):null}\r\n\r\n                                            </select></td>\r\n                                      \r\n                                        <td className='p-1 tcx-form-label'><label className='form-label float-end'>Notes: </label></td>\r\n                                        <td className='p-1 align-top' rowSpan={2}>  <textarea class=\"form-control float-start h-100\" placeholder=\"Notes\" id=\"notes\" name=\"notes\" defaultValue={initialValues.notes}  {...register(\"notes\")}  disabled={isDisable}></textarea></td>\r\n                                  \r\n\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td className='p-1 tcx-form-label'><label className='form-label float-end'>Owner: </label></td>\r\n                                        <td className='p-1'>  <input type=\"text\"\r\n                                            className='form-control float-start '\r\n                                            name=\"owner_name\"\r\n                                            id=\"owner_name\"\r\n                                            style={{ width: '100%' }}\r\n                                            defaultValue={initialValues.owner_name} placeholder=\"Owner name\"  {...register(\"owner_name\")} disabled/>\r\n                                        </td>\r\n                                        <td className='p-1 tcx-form-label'></td>\r\n                                            <td className='p-1 tcx-form-label'></td>\r\n                                        <td className='p-1 tcx-form-label'>   <label class=\"form-label float-end\">NRC NO: </label></td>\r\n                                        <td className='p-1'>\r\n\r\n                                            <input type=\"text\"\r\n                                                className='form-control float-start '\r\n                                                name='nrc'\r\n                                                id='nrc'\r\n                                                style={{ width: '100%' }}\r\n                                                defaultValue={initialValues.nrc}  {...register(\"nrc\")}  disabled={isDisable} />\r\n                                        </td>\r\n                                   \r\n                                          </tr>\r\n                                   \r\n                                 \r\n                                </tbody>\r\n                            </table>\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    {employer_number ? <Employer_registration id={employer_number} srFormData={srForm} lookUp={lookUp}/> : null}\r\n                </form>\r\n            {/* </FormikProvider> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Employer_register\r\n","D:\\workspace\\pms_latest\\frontend\\src\\components\\Home\\service_request.js",["486","487","488","489","490","491","492","493"],"import { React, useEffect, useState } from 'react'\r\nimport {  useSelector } from 'react-redux'\r\nimport {API_URL, formatDate} from '../../utils/commons'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { Button, Input, Space, Table } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\n\r\nfunction Service_request() {\r\n   \r\n\r\n    const [srData, setSrData] = useState([])\r\n    const _ = require('lodash')\r\n   \r\n    const userdata = useSelector(state => state.AuthReducer).user;\r\n    useEffect(() => {\r\n        \r\n        axios.get(API_URL+'/serviceRequestByOwnerId/'+userdata.id).then(\r\n            (res)=>(\r\n              console.log(\"SRData =====>\"+res.data[0]),\r\n                setSrData(res.data),\r\n                console.log(srData)\r\n            )\r\n        ) \r\n       \r\n    }, [])\r\n\r\n    const columns = [\r\n        {\r\n          title: 'SR#',\r\n          dataIndex: 'srNumber',\r\n          key: 'srNumber',\r\n          render: text => <a className=\"stretched-link\" href={\"/dashboard/service/\"+text}>{text}</a>\r\n        },\r\n        {\r\n          title: 'SR Type',\r\n          dataIndex: 'type',\r\n          key: 'type',\r\n        },\r\n        {\r\n          title: 'Employer Name',\r\n          dataIndex: ['company','name'],\r\n          key: 'name',\r\n        },\r\n        {\r\n            title: 'Employer Number',\r\n            dataIndex: ['company','id'],\r\n            key: 'address',\r\n          },\r\n          {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n          },\r\n          {\r\n            title: 'Owner',\r\n            dataIndex: 'ownerId',\r\n            key: 'ownerId',\r\n          },\r\n          {\r\n            title: 'SSN',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n          },\r\n          {\r\n            title: 'Created On',\r\n            dataIndex: 'created',\r\n            key: 'created',\r\n            render: text => <p>{formatDate(text)}</p>\r\n          }\r\n      ]\r\n    \r\n\r\n    return (\r\n\r\n\r\n        <div className=\"p-3\">\r\n            <div className=\"row p-3\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-title fs-3 mb-3\">My Service Request</p>\r\n\r\n                        {/* <table class=\"table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">SR#</th>\r\n                                    <th scope=\"col\">SR Type</th>\r\n                                    <th scope=\"col\">Employer Name</th>\r\n                                    <th scope=\"col\">Employer Number</th>\r\n                                    <th scope=\"col\">Status</th>\r\n                                    <th scope=\"col\">Owner</th>\r\n                                    <th scope=\"col\">SSN</th>\r\n                                    <th scope=\"col\">Created On</th>\r\n                                </tr>\r\n                            </thead>\r\n                           \r\n                                <tbody>\r\n                                {srData && srData.map((key)=>(\r\n                                   <tr key={key.id}>\r\n                                       <td scope=\"row\">{key.id}</td>\r\n                                        <td scope=\"row\">{key.type}</td>\r\n                                        <td scope=\"row\">{key.company ? key.company.name : ''}</td>\r\n                                        <td scope=\"row\">{key.company?<a href={'/dashboard/employer/'+key.company.id}>{key.company.id}</a>:''}</td>\r\n                                        <td scope=\"row\">{key.status}</td>\r\n                                        <td scope=\"row\">{key.contactName}</td>\r\n                                        <td scope=\"row\">{}</td>\r\n                                        <td scope=\"row\">{formatDate(key.created)}</td>\r\n                                        \r\n                                   </tr>\r\n                                   \r\n                                  \r\n\r\n                               ))}\r\n\r\n                                </tbody>\r\n                                                  \r\n\r\n                        </table> */}\r\n\r\n                    <Table  onRow={(record, rowIndex) => {\r\n                            return {\r\n                                onClick: event => { }, // click row\r\n                                onDoubleClick: event => { }, // double click row\r\n                                onContextMenu: event => { }, // right button click row\r\n                                onMouseEnter: event => { }, // mouse enter row\r\n                                onMouseLeave: event => { }, // mouse leave row\r\n                            };\r\n                        }} columns={columns} dataSource={srData} \r\n                        loading={_.isNull(srData)?true:false} \r\n                        pagination={{\r\n                            position: ['none','bottomCenter'],\r\n                            defaultPageSize: 5,\r\n                          }}/>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Service_request\r\n","D:\\workspace\\pms_latest\\frontend\\src\\components\\Service\\member_register.js",["494","495","496"],"D:\\workspace\\pms_latest\\frontend\\src\\components\\Employer\\employer_registeration.js",["497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522"],"import { React, useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useFormik, Field, FormikProvider } from 'formik'\r\nimport { set_tab_active } from '../../redux/actions/UserBehaviourAction';\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport { Modal, Button } from 'antd';\r\nimport { t_date, set_employ_registration, API_URL, submitServiceRequestEmployerData, formatDatePicker } from '../../utils/commons'\r\nimport axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport { formatDate, set_employ_save } from '../../utils/commons'\r\nimport { Tabs } from 'antd';\r\nimport Activities from './activities';\r\nimport { _ } from 'lodash'\r\nimport ChecklistUpload from './checklistUpload';\r\n\r\n\r\nimport Contacts from './contacts';\r\nimport Address from './address';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from 'yup'\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Alert } from 'antd';\r\n\r\n\r\n\r\nfunction Employer_registration(props) {\r\n    const [emp_no, setemp_no] = useState(props.id)\r\n    const lookUp = props.lookUp\r\n    const reg_sr_values = useSelector(state => state.SRReducer).reg_sr_employer;\r\n\r\n    const [isdisabled, setisdisabled] = useState(reg_sr_values ? false : true)\r\n    const [companyData, setCompanyData] = useState({})\r\n\r\n    const { TabPane } = Tabs;\r\n    const [srForm, setSrForm] = useState(props.srFormData)\r\n    const _ = require(\"lodash\");\r\n    let history = useHistory(); \r\n\r\n    const schema = yup.object().shape({\r\n        contact_no : yup.string().min(10),\r\n        contact_mail : yup.string().email()\r\n    })\r\n\r\n    const userdata = useSelector(state => state.AuthReducer).user;\r\n\r\n    const { register, handleSubmit, watch, formState: { errors } ,setValue} = useForm(\r\n        { resolver: yupResolver(schema) }\r\n    );\r\n\r\n    const onSubmitSRE = data =>{\r\n        console.log(data)\r\n       submitServiceRequestEmployer(data,userdata.id,srForm.id)\r\n    }\r\n\r\n    const submitServiceRequestEmployer = (data,userId,srId)=>{\r\n        axios.post(API_URL+'/saveCompanyDetails',submitServiceRequestEmployerData(data,userId,srId,srForm)).\r\n        then((res)=>{\r\n            setCompanyData(res.data)\r\n           getCompanyDetails()\r\n            //setCompanyFormData(res.data)\r\n            // setValue(\"employer_id\",res.data.companyVo.id)\r\n            alert(\"Service request saved successfully!!\")\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n            alert(\"Failed to save Service Request!!\")\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (emp_no) {\r\n            setisdisabled(false)\r\n            getCompanyDetails()\r\n        }\r\n    }, [])\r\n\r\n\r\n    const sendForApprovalSR = (srId)=>{\r\n\r\n        axios.put(API_URL + \"/sendForApproval/\" + srId).then(\r\n            (res) => (\r\n                console.log(res.data),\r\n                alert(\"Sent for approval\"),\r\n                history.push(\"/dashboard/home\")\r\n              \r\n            ))\r\n    }\r\n\r\n    const sendForAccept = ()=>{\r\n        axios.put(API_URL + \"/approveSrRequest/\" + srForm.serviceRequestVo.id).then(\r\n            (res) => (\r\n                console.log(res.data),\r\n                alert(\"Service Request Accepted\"),\r\n                history.push(\"/dashboard/home\")\r\n            ))\r\n    }\r\n\r\n\r\n    const getCompanyDetails = () => {\r\n        axios.get(API_URL + \"/getCompanyById/\" + emp_no).then(\r\n            (res) => (\r\n                console.log(res.data),\r\n                setCompanyData(res.data),\r\n                setCompanyFormData(res.data)\r\n          \r\n                //setemp_name(res.data.name),\r\n                //setdate_rec(formatDate(res.data.companyRegDate)),\r\n                //setcity(res.data.address ? res.data.address.city : ''),\r\n                //setpostal_Code(res.data.address ? res.data.address.postal_Code : ''),\r\n                //setState(res.data.address ? res.data.address.state : 'NA'),\r\n                //setarea(res.data.address ? res.data.address.adressLine1 : '')\r\n\r\n            ))\r\n    }\r\n\r\nconst setCompanyFormData = (companyData)=>{\r\n    setValue('srId', srForm.id)\r\n    setValue('companyName', companyData.id ? companyData.name : '')\r\n    setValue('companyNumber', companyData.id ? companyData.id : '')\r\n    setValue('legalName', companyData.id ? companyData.legalName : '')\r\n    setValue('adressLine1', companyData.address ? companyData.address.adressLine1 + ', '+companyData.address.adressLine2+', '+companyData.address.city+', '+companyData.address.state+', '+companyData.address.country+ ', '+companyData.address.postalCode: '')\r\n    setValue('companyStatus', companyData.companyStatus ? companyData.companyStatus : '')\r\n    setValue('companySubStatus', companyData.companySubStatus ? companyData.companySubStatus : '')\r\n    setValue('postalCode', companyData.address ? companyData.address.postalCode : '')\r\n    setValue('legalName', companyData.legalName)\r\n    setValue('companyType', companyData.companyType)\r\n    setValue('pacraId', companyData.pacraId)\r\n    setValue('mainPhone', companyData.mainPhone)\r\n    setValue('mainEmail', companyData.mainEmail)\r\n    setValue('seasonFlag', companyData.seasonFlag == 0 ? false : true)\r\n    setValue('fax', companyData.mainFax)\r\n    setValue('province', companyData.province)\r\n    setValue('region', companyData.region)\r\n    setValue('station', companyData.station)\r\n    setValue('area', companyData.area)\r\n    setValue('zone', companyData.zone)\r\n    setValue('district', companyData.district)\r\n    setValue('sector', companyData.sector)\r\n    setValue('created',companyData.created)\r\n    setValue('dateIncorporated', formatDatePicker(companyData.dateIncopr))\r\n    setValue('holdingCompany', companyData.holdingCompany)\r\n    setValue('subsidaryCompany', companyData.subsidaryCompany)\r\n    setValue('dateRegistered', formatDatePicker(companyData.companyRegDate))\r\n    setValue('no_of_employees', companyData.compCxRef)\r\n    setValue('dateEmployed', formatDatePicker(companyData.stEmploy))\r\n    setValue('nrc', companyData.propNrc)\r\n    setValue('nationality', companyData.propNationality)\r\n    setValue('propFirstName', companyData.propFirstName)\r\n    setValue('propLastName', companyData.propLastName)\r\n    setValue('propPosition', companyData.propPosition)\r\n\r\n}\r\n\r\n\r\nconst initialValues = {\r\n    srId: srForm.id,\r\n    companyName: companyData.id ? companyData.name : '',\r\n    companyNumber: companyData.id ? companyData.id : '',\r\n    legalName: companyData.id ? companyData.legalName : '',\r\n    adressLine1: companyData.address ? companyData.address.adressLine1 : '',\r\n    companyStatus:  companyData.companyStatus ? companyData.companyStatus : '',\r\n    companySubStatus:  companyData.companySubStatus ? companyData.companySubStatus : '',\r\n    postalCode: companyData.address ? companyData.address.postalCode : '',\r\n    legalName: companyData.legalName,\r\n    companyType: companyData.companyType,\r\n    pacraId: companyData.pacraId,\r\n    mainEmail: companyData.mainEmail,\r\n    seasonFlag: companyData.seasonFlag == 0? false:true,\r\n    fax:companyData.mainFax,\r\n    province: companyData.province,\r\n    area:companyData.area,\r\n    region: companyData.region,\r\n    station: companyData.station,\r\n    zone: companyData.zone,\r\n    district: companyData.district,\r\n    mainPhone:companyData.mainPhone,\r\n    sector: companyData.sector,\r\n    created: companyData.created,\r\n    dateIncorporated:formatDatePicker(companyData.dateIncopr),\r\n    holdingCompany:companyData.holdingCompany,\r\n    subsidaryCompany:companyData.subsidaryCompany,\r\n    dateRegistered: companyData.companyRegDate,\r\n    no_of_employees: companyData.compCxRef,\r\n    dateEmployed: formatDatePicker(companyData.stEmploy),\r\n    nrc: companyData.vo?companyData.vo.nrc:'',\r\n    nationality: companyData.address ? companyData.address.country : '',\r\n    propFirstName: companyData.propFirstName,\r\n    propLastName: companyData.propLastName,\r\n    propPosition: companyData.propPosition\r\n}\r\n\r\n    function callback(key) {\r\n    }\r\n\r\n    return (\r\n        <div className=\"row p-1\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n\r\n\r\n                    {/* <FormikProvider value={formik}> */}\r\n                        <form className='form'>\r\n\r\n\r\n                            <div className='row'>\r\n                                <div className='col'>\r\n                                    <h1 className=\"display-5\">{initialValues.companyName}</h1>\r\n                                </div>\r\n                                <div className='col float-end'>\r\n                                    <p className='font-weight-bold font-italic fs-6 float-end '><i>Last Updated : {formatDate(companyData.lastUpdated)}</i></p>\r\n                                </div>\r\n\r\n\r\n\r\n                                <div class=\"px-2 m-2\">\r\n                                    <table className=\"float-end\">\r\n\r\n\r\n                                        <td className=\"px-3\"> <button type=\"button\" className=\"btn btn-danger float-end rounded-pill\" onClick={handleSubmit(onSubmitSRE)}>Save</button></td>\r\n                                        <td className=\"px-3\">  <button type=\"button\" className=\"btn btn-danger float-end rounded-pill\" style={{ width: \"200px\" }} onClick={()=>{sendForApprovalSR(props.srFormData.id)}} >Send for Approval</button></td>\r\n                                        <td className=\"px-3\">  <button type=\"button\" className=\"btn btn-danger float-end rounded-pill\" onClick={sendForAccept} >Accept</button></td>\r\n\r\n                                        <td className=\"px-3\">  <button type=\"button\" className=\"btn btn-danger float-end rounded-pill\" onClick={() => { }} >Reject</button></td>\r\n                                    </table>\r\n                                </div>\r\n                                <div className='col'>\r\n\r\n                                    <p className=\"card-title fs-3 mb-3\">Employer Details</p>\r\n\r\n                                    <hr />\r\n                                </div>\r\n                                <table style={{ width: \"100%\" }}>\r\n                                    <tbody className='fs-6'>\r\n\r\n                                        <tr className='p-1'>\r\n                                            <td className='p-1 tcx-form-label'><label className='form-label float-end'>Employer Name :  </label>\r\n                                            </td>\r\n                                            <td className='p-1' colSpan={3}>\r\n                                                <input type=\"text\" className='form-control float-start '\r\n                                                    id=\"companyName\"\r\n                                                    name=\"companyName\"\r\n                                                    style={{ width: '100%' }}\r\n                                                    defaultValue={initialValues.companyName.toUpperCase()} {...register(\"companyName\")} onChange={(e)=> setValue(\"companyName\",e.target.value.toUpperCase())} disabled={isdisabled} />\r\n                                            </td>\r\n\r\n\r\n\r\n                                            <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Legal Name :  </label>\r\n                                            </td>\r\n                                            <td className='p-1' colSpan={3}>\r\n                                                <input type=\"text\" className='form-control float-start '\r\n                                                    id=\"legalName\"\r\n                                                    name=\"legalName\"\r\n                                                    style={{ width: '100%' }}\r\n                                                    defaultValue={initialValues.legalName} {...register(\"legalName\")} onChange={(e)=> setValue(\"legalName\",e.target.value.toUpperCase())} disabled={isdisabled} />\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                        <tr className='p-1'>\r\n                                            <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Employer # : </label></td>\r\n                                            <td className='p-1'> <input type=\"text\"\r\n                                                className='form-control float-start '\r\n                                                name='companyNumber'\r\n                                                id='companyNumber'\r\n                                                style={{ width: '230px' }}\r\n                                                defaultValue={initialValues.companyNumber}  {...register(\"companyNumber\")} disabled /></td>\r\n                                            <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Employer Type :  </label></td>\r\n                                            <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                                                id=\"companyType\"\r\n                                                name=\"companyType\"\r\n                                                style={{ width: '100%' }}\r\n                                                value={companyData.companyType}  {...register(\"companyType\")} disabled={isdisabled} /></td>\r\n                                            <td className=' p-1 tcx-form-label'><label className='form-label float-end'>PACRA ID :  </label></td>\r\n                                            <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                                                id=\"pacraId\"\r\n                                                name=\"pacraId\"\r\n                                                style={{ width: '100%' }}\r\n                                                defaultValue={initialValues.pacraId} {...register(\"pacraId\")} disabled={isdisabled} /></td>\r\n                                            <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Seasonal/Regular Flag :  </label></td>\r\n                                            <td className='p-1'>\r\n                                                <input type=\"checkbox\" className='float-start '\r\n                                                    id=\"seasonFlag\"\r\n                                                    name=\"seasonFlag\"\r\n\r\n                                                    defaultChecked={initialValues.seasonFlag}  {...register(\"seasonFlag\")} disabled={isdisabled}/></td>\r\n                                        </tr>\r\n                                        <tr className='p-1'>\r\n                                            <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Main Phone # :  </label></td>\r\n                                            <td className='p-1'> <input type=\"number\"\r\n                                                className='form-control float-start '\r\n                                                name='mainPhone'\r\n                                                id='mainPhone'\r\n                                                style={{ width: '230px' }}\r\n                                                defaultValue={initialValues.mainPhone}\r\n                                                {...register(\"mainPhone\")} disabled={isdisabled} /></td>\r\n                                            <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Main Email ID :  </label></td>\r\n                                            <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                                                id=\"mainEmail\"\r\n                                                name=\"mainEmail\"\r\n                                                style={{ width: '100%' }}\r\n                                                defaultValue={initialValues.mainEmail}\r\n                                                {...register(\"mainEmail\")} disabled={isdisabled} /></td>\r\n                                            <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Main Fax :  </label></td>\r\n                                            <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                                                id=\"fax\"\r\n                                                name=\"fax\"\r\n                                                style={{ width: '100%' }}\r\n                                                defaultValue={initialValues.fax}    {...register(\"fax\")} disabled={isdisabled} /></td>\r\n\r\n                                        </tr>\r\n                                        <tr className='p-1'>\r\n                                            <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Residential Address:  </label></td>\r\n                                            <td className='p-1' colSpan={3}> <input type=\"text\"\r\n                                                className='form-control float-start '\r\n                                                name='adressLine1'\r\n                                                id='adressLine1'\r\n                                                style={{ width: '100%' }}\r\n                                                defaultValue={_.defaultTo(initialValues.adressLine1, '')} {...register(\"adressLine1\")} disabled={true} /></td>\r\n                                            <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Status :  </label></td>\r\n                                            <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                                                id=\"companyStatus\"\r\n                                                name=\"companyStatus\"\r\n                                                style={{ width: '100%' }}\r\n                                                defaultValue={initialValues.companyStatus} disabled={true} /></td>\r\n                                            <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Sub Status :  </label></td>\r\n                                            <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                                                id=\"companySubStatus\"\r\n                                                name=\"companySubStatus\"\r\n                                                style={{ width: '100%' }}\r\n                                                defaultValue={initialValues.companySubStatus}  {...register(\"companySubStatus\")} disabled={true} /></td>\r\n                                        </tr>\r\n\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='col pt-3'>\r\n\r\n                                <p className=\"card-title fs-3 mb-3\">Business Details</p>\r\n                                <hr />\r\n                            </div>\r\n                            <table style={{ width: \"100%\" }}>\r\n                                <tbody className='fs-6'>\r\n\r\n                                    <tr className='p-1'>\r\n                                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Holding Company :  </label></td>\r\n                                        <td className='p-1'> <input type=\"text\"\r\n                                            className='form-control float-start '\r\n                                            name='holdingCompany'\r\n                                            id='holdingCompany'\r\n                                            style={{ width: '230px' }}\r\n                                            defaultValue={_.defaultTo(initialValues.holdingCompany)}    {...register(\"holdingCompany\")} disabled={isdisabled} /></td>\r\n                                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Subsidiary Company :  </label></td>\r\n                                        <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                                            id=\"subsidaryCompany\"\r\n                                            name=\"subsidaryCompany\"\r\n                                            style={{ width: '100%' }}\r\n                                            defaultValue={initialValues.subsidaryCompany}  {...register(\"subsidaryCompany\")} disabled={isdisabled} /></td>\r\n                                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Sector Code :  </label></td>\r\n                                        <td className='p-1'>\r\n                                            \r\n                                            <select class=\"form-select float-start\" name='sector' id='sector' style={{ width: '230px' }} defaultValue={initialValues.sector}    {...register(\"sector\")} disabled={isdisabled}>\r\n                                                <option value=''></option>\r\n                                                { lookUp ? lookUp.TCX_SECTOR.map((item)=>(\r\n                                                   <option defaultValue={item} key={item}>{item}</option>  \r\n                                                )):null\r\n                                            }\r\n\r\n                                            </select>\r\n                                        </td>\r\n                                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Number of Employees :  </label></td>\r\n                                        <td className='p-1'> <input type=\"number\" className='form-control float-start '\r\n                                            id=\"no_of_employees\"\r\n                                            name=\"no_of_employees\"\r\n                                            style={{ width: '100%' }}\r\n                                            defaultValue={initialValues.no_of_employees}   {...register(\"no_of_employees\")} disabled={isdisabled} /></td>\r\n                                    </tr>\r\n                                    <tr className='p-1'>\r\n                                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Date Incorporated :  </label></td>\r\n                                        <td className='p-1'> <input type=\"date\"\r\n                                            className='form-control float-start '\r\n                                            name='dateIncorporated'\r\n                                            id='dateIncorporated'\r\n                                            style={{ width: '230px' }}\r\n                                            \r\n                                            defaultValue={formatDate(Date.parse(initialValues.dateIncorporated))}    {...register(\"dateIncorporated\")} \r\n                                           disabled={isdisabled} /></td>\r\n                                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Date Started Employing :  </label></td>\r\n                                        <td className='p-1'> <input type=\"date\" className='form-control float-start '\r\n                                            id=\"dateEmployed\"\r\n                                            name=\"dateEmployed\"\r\n                                            style={{ width: '100%' }}\r\n                                            defaultValue={formatDate(initialValues.dateEmployed)} {...register(\"dateEmployed\")} disabled={isdisabled} /></td>\r\n                                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Date Registered with NAPSA :  </label></td>\r\n                                        <td className='p-1'> <input type=\"date\" className='form-control float-start '\r\n                                            id=\"dateRegistered\"\r\n                                            name=\"dateRegistered\"\r\n                                            style={{ width: '100%' }}\r\n                                            defaultValue={formatDate(Date.parse(initialValues.dateRegistered))}    {...register(\"dateRegistered\")} disabled={isdisabled} /></td>\r\n\r\n                                    </tr>\r\n\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <div className='col pt-3'>\r\n                                <p className=\"card-title fs-3 mb-3\">Properietor Details</p>\r\n\r\n                                <hr />\r\n                            </div>\r\n                            <table style={{ width: \"100%\" }}>\r\n                                <tbody className='fs-6'>\r\n\r\n                                    <tr className='p-1'>\r\n                                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>First Name :  </label></td>\r\n                                        <td className='p-1'> <input type=\"text\"\r\n                                            className='form-control float-start '\r\n                                            name='propFirstName'\r\n                                            id='propFirstName'\r\n                                            style={{ width: '230px' }}\r\n                                            defaultValue={_.defaultTo(initialValues.propFirstName, '')}    {...register(\"propFirstName\")} disabled={isdisabled} /></td>\r\n                                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Last Name :  </label></td>\r\n                                        <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                                            id=\"propLastName\"\r\n                                            name=\"propLastName\"\r\n                                            style={{ width: '100%' }}\r\n                                            defaultValue={_.defaultTo(initialValues.propLastName, '')}  {...register(\"propLastName\")} disabled={isdisabled} /></td>\r\n                                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>NRC # :  </label></td>\r\n                                        <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                                            id=\"nrc\"\r\n                                            name=\"nrc\"\r\n                                            style={{ width: '100%' }}\r\n                                            defaultValue={_.defaultTo(initialValues.nrc, '')}    {...register(\"nrc\")} disabled={isdisabled} /></td>\r\n                                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Nationality :  </label></td>\r\n                                        <td className='p-1'>   <select id=\"nationality\" name=\"nationality\" defaultValue={_.defaultTo(initialValues.nationality, '')} className={\"form-control float-start\"} style={{ width: '230px' }}    {...register(\"nationality\")} disabled={isdisabled} >\r\n                                                <option value=' '></option>\r\n                                                { lookUp ? lookUp.TCX_NATIOANLITY.map((item)=>(\r\n                                                   <option defaultValue={item} key={item}>{item}</option>  \r\n                                                )):null}\r\n\r\n                                            </select></td>\r\n                                    </tr>\r\n                                    <tr className='p-1'>\r\n                                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Position :  </label></td>\r\n                                        <td className='p-1'> <input type=\"text\"\r\n                                            className='form-control float-start '\r\n                                            name='propPosition'\r\n                                            id='propPosition'\r\n                                            style={{ width: '230px' }}\r\n                                            defaultValue={_.defaultTo(initialValues.propPosition, '')}    {...register(\"propPosition\")} disabled={isdisabled} /></td>\r\n\r\n\r\n                                    </tr>\r\n\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <div className='col pt-3'>\r\n\r\n                                <p className=\"card-title fs-3 mb-3\">Location Details</p>\r\n\r\n\r\n                                <hr />\r\n                            </div>\r\n                            <table style={{ width: \"100%\" }}>\r\n                                <tbody className='fs-6'>\r\n\r\n\r\n                                    <tr className='p-1'>\r\n                                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Region :  </label></td>\r\n                                        <td className='p-1'>\r\n                                            <select id=\"region\" name=\"region\" defaultValue={_.defaultTo(initialValues.region, '')} className={\"form-control float-start\"} style={{ width: '230px' }}    {...register(\"region\")} disabled={isdisabled} >\r\n                                                <option value=' '></option>\r\n                                                { lookUp ? lookUp.TCX_NATIOANLITY.map((item)=>(\r\n                                                   <option defaultValue={item} key={item}>{item}</option>  \r\n                                                )):null}\r\n\r\n                                            </select>\r\n                                        </td>\r\n                                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Province :  </label></td>\r\n                                        <td className='p-1'>\r\n                                            <select id=\"province\" name=\"province\" defaultValue={_.defaultTo(initialValues.province, '')} className={\"form-control float-start\"} style={{ width: '230px' }}    {...register(\"province\")} disabled={isdisabled} >\r\n                                                <option value=' '></option>\r\n                                                { lookUp ? lookUp.TCX_PROVINCE.map((item)=>(\r\n                                                   <option defaultValue={item} key={item}>{item}</option>  \r\n                                                )):null}\r\n\r\n                                            </select>\r\n                                        </td>\r\n                                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Area :  </label></td>\r\n                                        <td className='p-1'>\r\n                                            <select id=\"area\" name=\"area\" defaultValue={_.defaultTo(initialValues.area, '')} className={\"form-control float-start\"} style={{ width: '230px' }}    {...register(\"area\")} disabled={isdisabled} >\r\n                                                <option value=' '></option>\r\n                                                { lookUp ? lookUp.TCX_AREA.map((item)=>(\r\n                                                   <option defaultValue={item} key={item}>{item}</option>  \r\n                                                )):null}\r\n\r\n                                            </select>\r\n                                        </td>\r\n                                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>District :  </label></td>\r\n                                        <td className='p-1'>\r\n                                            <select id=\"district\" name=\"district\" defaultValue={_.defaultTo(initialValues.district, '')} className={\"form-control float-start\"} style={{ width: '230px' }}    {...register(\"district\")} disabled={isdisabled} >\r\n                                                <option value=' '></option>\r\n                                                { lookUp ? lookUp.TCX_DISTRICT.map((item)=>(\r\n                                                   <option defaultValue={item} key={item}>{item}</option>  \r\n                                                )):null}\r\n\r\n\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr className='p-1'>\r\n                                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Station :  </label></td>\r\n                                        <td className='p-1'>\r\n                                            <select id=\"station\" name=\"station\" defaultValue={_.defaultTo(initialValues.station, '')} className={\"form-control float-start\"} style={{ width: '230px' }}    {...register(\"station\")} disabled={isdisabled} >\r\n                                                <option value=' '></option>\r\n                                                { lookUp ? lookUp.TCX_STATION.map((item)=>(\r\n                                                   <option defaultValue={item} key={item}>{item}</option>  \r\n                                                )):null}\r\n\r\n                                            </select>\r\n                                        </td>\r\n\r\n\r\n                                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Zone :  </label></td>\r\n                                        <td className='p-1'>\r\n                                            <select id=\"zone\" name=\"zone\" defaultValue={_.defaultTo(initialValues.zone, '')} className={\"form-control float-start\"} style={{ width: '230px' }}    {...register(\"zone\")} disabled={isdisabled} >\r\n                                                <option value=' '></option>\r\n                                                { lookUp ? lookUp.TCX_ZONE.map((item)=>(\r\n                                                   <option defaultValue={item} key={item}>{item}</option>  \r\n                                                )):null}\r\n\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                </tbody>\r\n                            </table>\r\n                            <div className='row mt-5'>\r\n                                <Tabs onChange={callback} defaultActiveKey='1' type=\"card\">\r\n                                    <TabPane tab=\"Checklist (Attachments)\" key=\"1\">\r\n                                        <div className='row'>\r\n\r\n                                            <div className='col px-5'>\r\n                                                {/* <Activities show={false} emp={emp_no} /> */}\r\n                                                <ChecklistUpload empNumber={emp_no} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Contacts\" key=\"2\">\r\n                                        <div className='row'>\r\n\r\n\r\n\r\n                                            <div className='col px-5'>\r\n                                                <Contacts empNumber={emp_no} />\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Addresses\" key=\"3\">\r\n                                        <div className='row'>\r\n\r\n\r\n                                            <div className='col px-5'>\r\n                                                <Address empNumber={emp_no}/>\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </TabPane>\r\n                                </Tabs>\r\n                            </div>\r\n\r\n                        </form>\r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Employer_registration\r\n","D:\\workspace\\pms_latest\\frontend\\src\\components\\Members\\member_registration.js",["523","524","525","526","527","528"],"import { React, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useFormik } from 'formik'\r\n\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport { Modal, Button } from 'antd';\r\nimport { t_date, set_member_registration,formatDate, API_URL } from '../../utils/commons'\r\nimport axios from 'axios';\r\nimport { set_tab_active } from '../../redux/actions/UserBehaviourAction';\r\n\r\nimport { Tabs } from 'antd';\r\nimport Activities from '../Employer/activities';\r\nfunction Member_registration() {\r\n    const reg_sr_values = useSelector(state => state.SRReducer).reg_sr_member;\r\n    const dispatch = useDispatch()\r\n    const [isdisabled, setisdisabled] = useState(reg_sr_values?false:true)\r\n    const [isAddbenf, setisAddbenf] = useState(false)\r\n\r\n    const [isAddressModalVisible, setisAddressModalVisible] = useState(false);\r\n\r\n    const [benf_row_data, setbenf_row_data] = useState([])\r\n    const [emp_no, setemp_no] = useState('')\r\n    function callback(key) {\r\n    }\r\n    const { TabPane } = Tabs;\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            nrc:reg_sr_values?reg_sr_values.nrc:'',\r\n            primary_type: false,\r\n            residency_area: '',\r\n            landmark: '',\r\n            street_name: '',\r\n            plot_no: '',\r\n            box_no: '',\r\n            postal_name: '',\r\n            town: '',\r\n            postal_code: '',\r\n           status:reg_sr_values?'In Progress':'',\r\n            contact_person: '',\r\n          \r\n            beneficiaries:benf_row_data,\r\n        \r\n            phone_no: '',\r\n            email: '',\r\n          \r\n            pros_center: 'HEAD OFFICE',\r\n            fax_no: '',\r\n            employer_no: emp_no,\r\n           \r\n            sector_code: '',\r\n            date_received:  t_date().year + '-' + t_date().month + '-' + t_date().date,\r\n            date_joined_napsa:'',\r\n            date_joined_employer:'',\r\n            date_incorporated: '',\r\n          \r\n        },\r\n        enableReinitialize: true,\r\n        // onSubmit: (reg_sr_values,values) => {\r\n        //     //dispatch(register_sr_employer(values))\r\n        //     console.log({...values,service_request_form:reg_sr_values})\r\n        //     // axios.post(API_URL+'/user/login',{...values,service_request_form:reg_sr_values}).then((response) => {\r\n        //     //            console.log(response)\r\n        //     //           });\r\n        //              }\r\n\r\n\r\n\r\n        onChange: values => {\r\n            formik.setValues(values)\r\n        }\r\n    })\r\n\r\n    const register_sr_employer = (e) => {\r\n        e.preventDefault();\r\n        console.log({ ...formik.values, service_request_form: reg_sr_values })\r\n\r\n         axios.post(API_URL+'/saveCompanyMember',set_member_registration({...formik.values,service_request_form:reg_sr_values})).then((response) => {\r\n              console.log(response)\r\n             });\r\n             \r\n    }\r\n\r\n    const showAddressModal = () => {\r\n        setisAddressModalVisible(true);\r\n    };\r\n    const handleRAOk = () => {\r\n        setisAddressModalVisible(false);\r\n    };\r\n\r\n    const handleRACancel = () => {\r\n        setisAddressModalVisible(false);\r\n    };\r\n\r\n    const AddBenfhandleOk = () => {\r\n        setbenf_row_data(benf_row_data.concat({\r\n            \"benf_status\":formik.values.benf_status,\r\n            \"benf_id\":formik.values.benf_id,\r\n            \"benf_nrc\":formik.values.benf_nrc,\r\n            \"benf_rel_code\":formik.values.benf_rel_code,\r\n            \"benf_rel_val\":formik.values.benf_rel_val,\r\n            \"benf_surname\":formik.values.benf_surname,\r\n            \"benf_othername\":formik.values.benf_othername,\r\n            \"benf_dob\":formik.values.benf_dob\r\n\r\n        }))\r\n        console.log(benf_row_data)\r\n        formik.setFieldValue(formik.values.benf_status,'')\r\n        formik.setFieldValue(formik.values.benf_id,'')\r\n        formik.setFieldValue(formik.values.benf_nrc,'')\r\n        formik.setFieldValue(formik.values.benf_rel_code,'')\r\n        formik.setFieldValue(formik.values.benf_rel_val,'')\r\n        formik.setFieldValue(formik.values.benf_surname,'')\r\n        formik.setFieldValue(formik.values.benf_othername,'')\r\n        formik.setFieldValue(formik.values.benf_dob,'')\r\n        \r\n        setisAddbenf(false)\r\n    }\r\n\r\n    const AddBenfhandleCancel = () => {\r\n        setisAddbenf(false)\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n\r\n\r\n            <form className='form' onSubmit={formik.handleSubmit}>\r\n\r\n            <Modal title=\"Residential Area\" style={{zIndex:10000}} visible={isAddressModalVisible} onOk={handleRAOk} onCancel={handleRACancel}>\r\n                   <table>\r\n                       <tbody className='fs-6'>\r\n                           <tr>\r\n                               <td className='p-1'> <label class=\"form-label float-end\">Primary Type: </label></td>\r\n                               <td className='p-1'><input class=\"form-check-input mx-5 float-start\"  type=\"checkbox\" defaultValue={formik.values.primary_type} id=\"primary_type\"\r\n                            name=\"primary_type\" disabled={isdisabled}></input></td>\r\n                           </tr>\r\n                           <tr>\r\n                               <td className='p-1'> <label class=\"form-label float-end\">Area: </label></td>\r\n                               <td className='p-1'><input type=\"text\"\r\n                            className='form-control float-start mx-2'\r\n                            id=\"residency_area\"\r\n                            name=\"residency_area\"\r\n                            style={{width:'230px'}}\r\n                            defaultValue={formik.values.residency_area} onChange={formik.handleChange} required disabled={isdisabled} /></td>\r\n                           </tr>\r\n                           <tr>\r\n                               <td className='p-1'> <label class=\"form-label float-end\">Landmark: </label></td>\r\n                               <td className='p-1'><input type=\"text\"\r\n                            className='form-control float-start mx-2'\r\n                            id=\"landmark\"\r\n                            name=\"landmark\"\r\n                            style={{width:'230px'}}\r\n                            defaultValue={formik.values.landmark} onChange={formik.handleChange} required disabled={isdisabled} /></td>\r\n                           </tr>\r\n                           <tr>\r\n                               <td className='p-1'><label class=\"form-label float-end\">Street Name: </label></td>\r\n                               <td className='p-1'> <input type=\"text\"\r\n                            className='form-control float-start mx-2'\r\n                            id=\"street_name\"\r\n                            name=\"street_name\"\r\n                            style={{width:'230px'}}\r\n                            defaultValue={formik.values.street_name} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                           </tr>\r\n                           <tr>\r\n                               <td className='p-1'> <label class=\"form-label float-end\">Plot no: </label></td>\r\n                               <td className='p-1'> <input type=\"text\"\r\n                            className='form-control float-start mx-2'\r\n                            id=\"plot_no\"\r\n                            name=\"plot_no\"\r\n                            style={{width:'230px'}}\r\n                            defaultValue={formik.values.plot_no} onChange={formik.handleChange} required disabled={isdisabled} /></td>\r\n                           </tr>\r\n                           <tr>\r\n                               <td className='p-1'>  <label class=\"form-label float-end\">Box no: </label></td>\r\n                               <td className='p-1'> <input type=\"text\"\r\n                            className='form-control float-start mx-2'\r\n                            id=\"box_no\"\r\n                            name=\"box_no\"\r\n                            style={{width:'230px'}}\r\n                            defaultValue={formik.values.box_no} onChange={formik.handleChange} required disabled={isdisabled} /></td>\r\n                           </tr>\r\n                           <tr>\r\n                               <td className='p-1'> <label class=\"form-label float-end\">Postal Name: </label></td>\r\n                               <td className='p-1'><input type=\"text\"\r\n                            className='form-control float-start mx-2'\r\n                            id=\"postal_name\"\r\n                            name=\"postal_name\"\r\n                            style={{width:'230px'}}\r\n                            defaultValue={formik.values.postal_name} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                           </tr>\r\n                           <tr>\r\n                               <td className='p-1'>  <label class=\"form-label float-end\">Town: </label></td>\r\n                               <td className='p-1'> <input type=\"text\"\r\n                            className='form-control float-start mx-2'\r\n                            id=\"town\"\r\n                            name=\"town\"\r\n                            style={{width:'230px'}}\r\n                            defaultValue={formik.values.town} onChange={formik.handleChange} required disabled={isdisabled} /></td>\r\n                           </tr>\r\n                           <tr>\r\n                               <td className='p-1'><label class=\"form-label float-end\">Postal Code: </label></td>\r\n                               <td className='p-1'>  <input type=\"text\"\r\n                            className='form-control float-start mx-2'\r\n                            id=\"postal_code\"\r\n                            name=\"postal_code\"\r\n                            style={{width:'230px'}}\r\n                            defaultValue={formik.values.postal_code} onChange={formik.handleChange} required disabled={isdisabled} /></td>\r\n                           </tr>\r\n                       </tbody>\r\n                   </table>\r\n                </Modal>\r\n                <div className='row'>\r\n\r\n                    <div class=\"px-5 m-2\">\r\n                        <button type=\"submit\" className=\"btn btn-danger float-end rounded-pill\" style={{ width: \"200px\" }} onClick={register_sr_employer}>Register</button>\r\n                    </div>\r\n                    <span>\r\n                        <p className='lead fs-6'>Member Information</p>\r\n\r\n                        <hr />\r\n                    </span>\r\n\r\n                  <table>\r\n                      <tbody className='fs-6'>\r\n                          <tr>\r\n                              <td className='p-1'> <label class=\"form-label float-end\">NRC NO: </label></td>\r\n                              <td className='p-1'> <input type=\"text\"\r\n                                className='form-control float-start'\r\n                                name='nrc'\r\n                                id='nrc'\r\n                                style={{width:'230px'}}\r\n                                defaultValue={formik.values.nrc} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                              <td className='p-1'> <label class=\"form-label float-end\">Social Security Number: </label></td>\r\n                              <td className='p-1'><input type=\"text\"\r\n                                className='form-control float-start h-50'\r\n                                id=\"ssn\"\r\n                                name=\"ssn\"\r\n                                style={{width:'230px'}}\r\n                                defaultValue={formik.values.ssn} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                              <td className='p-1'> <label class=\"form-label float-end\">Passport Number: </label></td>\r\n                              <td className='p-1'> <input type=\"text\"\r\n                                className='form-control float-start'\r\n                                id=\"passport_no\"\r\n                                name=\"passport_no\"\r\n                                style={{width:'230px'}}\r\n                                defaultValue={formik.values.passport_no} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                              <td className='p-1'>   <label class=\"form-label float-end\">Title: </label></td>\r\n                              <td className='p-1'>   <select class=\"form-select float-start\" name='employer_type' id='employer_type'  style={{width:'230px'}} defaultValue={formik.values.marital_status} onChange={formik.handleChange} disabled={isdisabled}>\r\n                                <option defaultValue=\"Mr\">Mr.</option>\r\n                                <option defaultValue=\"Ms\">Ms.</option>\r\n                                <option defaultValue=\"Mrs\">Mrs.</option>\r\n                            </select></td>\r\n                          </tr>\r\n                          <tr>\r\n                              <td className='p-1'>     <label class=\"form-label float-end\">Surname: </label></td>\r\n                              <td className='p-1'><input type=\"text\"\r\n                                className='form-control float-start'\r\n                                name='surname'\r\n                                id='surname'\r\n                                style={{width:'230px'}}\r\n                                defaultValue={formik.values.surname} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                              <td className='p-1'> <label class=\"form-label float-end\">Othernames: </label></td>\r\n                              <td className='p-1'> <input type=\"text\"\r\n                                className='form-control float-start'\r\n                                id=\"othernames\"\r\n                                name=\"othernames\"\r\n                                style={{width:'230px'}}\r\n                                defaultValue={formik.values.othernames} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                              <td className='p-1'>  <label class=\"form-label float-end\">Maiden Name: </label></td>\r\n                              <td className='p-1'> <input type=\"text\"\r\n                                className='form-control float-start'\r\n                                id=\"maiden_name\"\r\n                                name=\"maiden_name\"\r\n                                style={{width:'230px'}}\r\n                                defaultValue={formik.values.maiden_name} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                              <td className='p-1'>   <label class=\"form-label float-end\">Sex: </label></td>\r\n                              <td className='p-1'>   <select class=\"form-select float-start\" name='employer_type' id='employer_type' style={{width:'230px'}} defaultValue={formik.values.marital_status} onChange={formik.handleChange} disabled={isdisabled}>\r\n                                <option defaultValue=\"Male\">Male</option>\r\n                                <option defaultValue=\"Female\">Female</option>\r\n                                <option defaultValue=\"Others\">Others</option>\r\n                            </select></td>\r\n                          </tr>\r\n                          <tr>\r\n                              <td className='p-1'>  <label class=\"form-label float-end\">Date of Birth: </label></td>\r\n                              <td className='p-1'><input type=\"date\"\r\n                                    className='form-control float-start'\r\n                                    name='dob'\r\n                                    id='dob'\r\n                                    style={{width:'230px'}}\r\n                                    defaultValue={formik.values.dob} onChange={(e)=>formik.setFieldValue(formik.values.dob,e.target.value)} disabled={isdisabled} required /></td>\r\n                              <td className='p-1'> <label class=\"form-label float-end\">Marital Status: </label></td>\r\n                              <td className='p-1'><select class=\"form-select float-start\" name='employer_type' id='employer_type' style={{width:'230px'}} defaultValue={formik.values.marital_status} onChange={formik.handleChange} disabled={isdisabled}>\r\n                                <option defaultValue=\"Single\">Single</option>\r\n                                <option defaultValue=\"Divorced\">Divorced</option>\r\n                                <option defaultValue=\"Married\">Married</option>\r\n                                <option defaultValue=\"Partner\">Partner</option>\r\n                                <option defaultValue=\"Widow\">Widow</option>\r\n                                <option defaultValue=\"Seperated\">Seperated</option>\r\n                                <option defaultValue=\"Widowed\">Widowed</option>\r\n                                <option defaultValue=\"Widower\">Widower</option>\r\n                                <option defaultValue=\"Remarried\">Remarried</option>\r\n                                <option defaultValue=\"Spouse Expired\">Spouse Expired</option>\r\n\r\n                            </select></td>\r\n                              <td className='p-1'> <label class=\"form-label float-end\">Residential Area</label></td>\r\n                              <td className='p-1'><input type=\"text\"\r\n                                className='form-control float-start'\r\n                                id=\"trading_name\"\r\n                                name=\"trading_name\"\r\n                                style={{width:'230px'}}\r\n                                defaultValue={formik.values.residency_area} required disabled />\r\n                            <a className=\"p-0 mx-0\" type=\"button\" onClick={showAddressModal}>\r\n                                <AiOutlineSearch style={{ padding: '0px' }} size={30} color={'black'} />\r\n                            </a></td>\r\n                              <td className='p-1'></td>\r\n                              <td className='p-1'></td>\r\n                          </tr>\r\n                          <tr>\r\n                          <td className='p-1'><label class=\"form-label float-end\">Age: </label></td>\r\n                              <td className='p-1'> <input type=\"text\"\r\n                                    className='form-control float-start'\r\n                                    id=\"age\"\r\n                                    name=\"age\"\r\n                                    style={{width:'230px'}}\r\n                                    defaultValue={formik.values.age} onChange={formik.handleChange} disabled /></td>\r\n                              \r\n                              <td className='p-1'>  <label class=\"form-label float-end\">Phone Number: </label></td>\r\n                              <td className='p-1'> <input type=\"text\"\r\n                                className='form-control float-start'\r\n                                id=\"phone_no\"\r\n                                name=\"phone_no\"\r\n                                style={{width:'230px'}}\r\n                                defaultValue={formik.values.phone_no} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                              <td className='p-1'> <label class=\"form-label float-end\">Status: </label></td>\r\n                              <td className='p-1'> <input type=\"text\"\r\n                                className='form-control float-start'\r\n                                id=\"status\"\r\n                                name=\"status\"\r\n                                style={{width:'230px'}}\r\n                                defaultValue={formik.values.status} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                              <td className='p-1'></td>\r\n                              <td className='p-1'></td>\r\n                          </tr>\r\n                          <tr>\r\n                          <td className='p-1'> <label class=\"form-label float-end\">Contact Number: </label></td>\r\n                              <td className='p-1'> <input type=\"text\"\r\n                                    className='form-control float-start'\r\n                                    id=\"contact_no\"\r\n                                    name=\"contact_no\"\r\n                                    style={{width:'230px'}}\r\n                                    defaultValue={formik.values.contact_no} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                             \r\n                              <td className='p-1'> <label class=\"form-label float-end\">Email: </label></td>\r\n                              <td className='p-1'> <input type=\"text\"\r\n                                className='form-control float-start'\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                style={{width:'230px'}}\r\n                                defaultValue={formik.values.email} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                              <td className='p-1'></td>\r\n                              <td className='p-1'></td>\r\n                              <td className='p-1'></td>\r\n                              <td className='p-1'></td>\r\n                          </tr>\r\n                          <tr>\r\n                          <td className='p-1'> <label class=\"form-label float-end\">FAX Number: </label></td>\r\n                              <td className='p-1'><input type=\"text\"\r\n                                    className='form-control float-start'\r\n                                    id=\"fax_no\"\r\n                                    name=\"fax_no\"\r\n                                    style={{width:'230px'}}\r\n                                    defaultValue={formik.values.fax_no} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                             \r\n                              <td className='p-1'>  <label class=\"form-label float-end\">Date Joined NAPSA: </label></td>\r\n                              <td className='p-1'> <input type=\"text\"\r\n                                className='form-control float-start'\r\n                                name='date_joined_napsa'\r\n                                id='date_joined_napsa'\r\n                                style={{width:'230px'}}\r\n                                defaultValue={formik.values.date_joined_napsa} disabled={isdisabled} /></td>\r\n                              <td className='p-1'></td>\r\n                              <td className='p-1'></td>\r\n                              <td className='p-1'></td>\r\n                              <td className='p-1'></td>\r\n                          </tr>\r\n                          <tr>\r\n                          <td className='p-1'> <label class=\"form-label float-end\">Provisional SSN: </label></td>\r\n                              <td className='p-1'><input type=\"text\"\r\n                                    className='form-control float-start'\r\n                                    id=\"prov_ssn\"\r\n                                    name=\"prov_ssn\"\r\n                                    style={{width:'230px'}}\r\n                                    defaultValue={formik.values.prov_ssn} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                              <td className='p-1'>  <label class=\"form-label float-end\">Date Joined Employer: </label></td>\r\n                              <td className='p-1'>  <input type=\"text\"\r\n                                className='form-control float-start h-50'\r\n                                name='date_joined_employer'\r\n                                id='date_joined_employer'\r\n                                style={{width:'230px'}}\r\n                                defaultValue={formik.values.date_joined_employer} disabled={isdisabled} /></td>\r\n                              <td className='p-1'></td>\r\n                              <td className='p-1'></td>\r\n                              <td className='p-1'></td>\r\n                              <td className='p-1'></td>\r\n                          </tr>\r\n                      </tbody>\r\n                  </table>\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"row\">\r\n                    <span>\r\n                        <p className='lead fs-6'>Employer Details</p>\r\n\r\n                        <hr />\r\n                    </span>\r\n                   <table>\r\n                       <tbody className='fs-6'>\r\n                           <tr>\r\n                               <td className='p-1'> <label class=\"form-label float-end\">Province: </label></td>\r\n                               <td className='p-1'>  <select class=\"form-select float-start\" name='sector_code' id='sector_code'  style={{width:'230px'}} defaultValue={formik.values.sector_code} onChange={formik.handleChange} disabled={isdisabled}>\r\n                                <option defaultValue=\"LUKASA\">LUKASA</option>\r\n                                <option defaultValue=\"CENTRAL\">CENTRAL</option>\r\n                                <option defaultValue=\"COPPERBELT\">COPPERBELT</option>\r\n                                <option defaultValue=\"NORTHERN\">NORTHERN</option>\r\n                                <option defaultValue=\"EASTERN\">EASTERN</option>\r\n                                <option defaultValue=\"SOUTHERN\">SOUTHERN</option>\r\n\r\n\r\n                            </select></td>\r\n                               <td className='p-1'> <label class=\"form-label float-end\">Processing Center: </label></td>\r\n                               <td className='p-1'><input type=\"text\"\r\n                                className='form-control float-start'\r\n                                name='pros_center'\r\n                                id='pros_center'\r\n                                style={{width:'230px'}}\r\n                                defaultValue={isdisabled?'':formik.values.pros_center} disabled /></td>\r\n                               <td className='p-1'> <label class=\"form-label float-end\">Occupation: </label></td>\r\n                               <td className='p-1'><select class=\"form-select float-start\" name='occupation' id='sector_code'  style={{width:'230px'}} defaultValue={formik.values.occupation} onChange={formik.handleChange} disabled={isdisabled}>\r\n                                <option defaultValue=\"1111\">Legislators</option>\r\n                                <option defaultValue=\"1112\">Senior Govt Officials</option>\r\n                                <option defaultValue=\"1211\">Finance Managers</option>\r\n                                <option defaultValue=\"1212\">Human Resource Managers</option>\r\n                                <option defaultValue=\"1213\">Policy and Planning Managers</option>\r\n\r\n                            </select></td>\r\n                               <td className='p-1'></td>\r\n                               <td className='p-1'></td>\r\n                           </tr>\r\n                       </tbody>\r\n                   </table>\r\n\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <span>\r\n                        <p className='lead fs-6'>Parents Details</p>\r\n\r\n                        <hr />\r\n                    </span>\r\n                  <table>\r\n                      <tbody className='fs-6'>\r\n                          <tr>\r\n                              <td className='p-1'><label class=\"form-label float-end\">Fathers Surname: </label></td>\r\n                              <td className='p-1'> <input type=\"text\"\r\n                                className='form-control float-start'\r\n                                id=\"father_surname\"\r\n                                name=\"father_surname\"\r\n                                style={{width:'230px'}}\r\n                                defaultValue={formik.values.father_surname} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                              <td className='p-1'>  <label class=\"form-label float-end\">Fathers Othername: </label></td>\r\n                              <td className='p-1'> <input type=\"text\"\r\n                                className='form-control float-start'\r\n                                id=\"father_othername\"\r\n                                name=\"father_othername\"\r\n                                style={{width:'230px'}}\r\n                                defaultValue={formik.values.father_othername} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                              <td className='p-1'>  <label class=\"form-label float-end\">Mothers Surname: </label></td>\r\n                              <td className='p-1'><input type=\"text\"\r\n                                className='form-control float-start'\r\n                                id=\"mother_surname\"\r\n                                name=\"mother_surname\"\r\n                                style={{width:'230px'}}\r\n                                defaultValue={formik.values.mother_surname} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                              <td className='p-1'> <label class=\"form-label float-end\">Mothers Othername: </label></td>\r\n                              <td className='p-1'> <input type=\"text\"\r\n                                className='form-control float-start'\r\n                                id=\"mother_othername\"\r\n                                name=\"mother_othername\"\r\n                                style={{width:'230px'}}\r\n                                defaultValue={formik.values.mother_othername} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                          </tr>\r\n                      </tbody>\r\n                  </table>\r\n                </div>\r\n                <Modal title=\"Add Benficiary\" visible={isAddbenf} onOk={AddBenfhandleOk} onCancel={AddBenfhandleCancel}>\r\n                <table>\r\n                    <tbody className='fs-6'>\r\n                        <tr>\r\n                            <td className='p-1'> <label class=\"form-label float-end\">Status: </label></td>\r\n                            <td className='p-1'><input type=\"text\"\r\n                                className='form-control float-start'\r\n                                id=\"benf_status\"\r\n                                name=\"benf_status\"\r\n                                style={{width:'230px'}}\r\n                                defaultValue={\"Open\"} disabled/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className='p-1'> <label class=\"form-label float-end\">NRC No: </label></td>\r\n                            <td className='p-1'><input type=\"text\"\r\n                                className='form-control float-start'\r\n                                id=\"benf_nrc\"\r\n                                name=\"benf_nrc\"\r\n                                style={{width:'230px'}}\r\n                                defaultValue={formik.values.benf_nrc} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className='p-1'><label class=\"form-label float-end\">Relationship Code: </label></td>\r\n                            <td className='p-1'> <input type=\"text\"\r\n                                className='form-control float-start'\r\n                                id=\"benf_rel_code\"\r\n                                name=\"benf_rel_code\"\r\n                                style={{width:'230px'}}\r\n                                defaultValue={formik.values.benf_rel_code} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className='p-1'> <label class=\"form-label float-end\">Relationship Value: </label></td>\r\n                            <td className='p-1'> <input type=\"text\"\r\n                                className='form-control float-start'\r\n                                id=\"benf_rel_val\"\r\n                                name=\"benf_rel_val\"\r\n                                style={{width:'230px'}}\r\n                                defaultValue={formik.values.benf_rel_val} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className='p-1'> <label class=\"form-label float-end\">Surname: </label></td>\r\n                            <td className='p-1'> <input type=\"text\"\r\n                                className='form-control float-start'\r\n                                id=\"benf_surname\"\r\n                                name=\"benf_surname\"\r\n                                style={{width:'230px'}}\r\n                                defaultValue={formik.values.benf_surname} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className='p-1'><label class=\"form-label float-end\">Othername: </label></td>\r\n                            <td className='p-1'> <input type=\"text\"\r\n                                className='form-control float-start'\r\n                                id=\"benf_othername\"\r\n                                name=\"benf_othername\"\r\n                                style={{width:'230px'}}\r\n                                defaultValue={formik.values.benf_othername} onChange={formik.handleChange} disabled={isdisabled} /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className='p-1'>  <label class=\"form-label float-end\">Date of Birth: </label></td>\r\n                            <td> <input class='form-control' type='date' name='benf_dob' id='benf_dob' defaultValue={new Date()} onChange={(e) => formik.setFieldValue(\"benf_dob\",formatDate(e.target.valueAsDate.toUTCString()))} /></td>\r\n                        </tr>\r\n                        \r\n                    </tbody>\r\n                </table>\r\n                </Modal>\r\n                <div className=\"row mt-5 pb-5\">\r\n                    <span>\r\n                        <p className='lead fs-6'>Beneficiaries   <button type=\"button\" className=\"btn btn-danger float-end rounded-pill mx-3 mb-3\" onClick={() => { setisAddbenf(true) }}>+ Add</button></p>\r\n\r\n                        <hr />\r\n                    </span>\r\n                    <div className=\"col p-3\">\r\n                        <table class=\"table p-3\">\r\n                            <thead className='fs-6'>\r\n                                <tr>\r\n                                    <th scope=\"col\">Status</th>\r\n                                    <th scope=\"col\">NRC NO</th>\r\n                                    <th scope=\"col\">Relationship code</th>\r\n                                    <th scope=\"col\">Relationship Value</th>\r\n                                    <th scope=\"col\">Surname</th>\r\n                                    <th scope=\"col\">Othername</th>\r\n                                    <th scope=\"col\">Date Of Birth</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className='fs-6'>\r\n                                {\r\n                                    benf_row_data && benf_row_data.map((key,i)=>(\r\n                                    <tr key={key}>\r\n                                        <td className='p-1'>{\"Open\"}</td>\r\n                                        <td className='p-1'>{key.benf_nrc} </td>\r\n                                        <td className='p-1'>{key.benf_rel_code}</td>\r\n                                        <td className='p-1'>{key.benf_rel_val}</td>\r\n                                        <td className='p-1'>{key.benf_surname}</td>\r\n                                        <td className='p-1'>{key.benf_othername}</td>\r\n                                        <td className='p-1'>{key.benf_dob}</td>\r\n                                    </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                </div>\r\n                <Tabs onChange={callback} defaultActiveKey='1' type=\"card\">\r\n                    <TabPane tab=\"Actions/Attachments\" key=\"1\">\r\n                        <div className='row'>\r\n                            <span>\r\n                                <p className='lead fs-6'>Activities</p>\r\n\r\n                                <hr />\r\n                            </span>\r\n                            <div className='col px-5'>\r\n                                <Activities emp={reg_sr_values?reg_sr_values.employer_id:''}/>\r\n                            </div>\r\n                        </div>\r\n                    </TabPane>\r\n                    <TabPane tab=\"Documents\" key=\"2\">\r\n\r\n                    </TabPane>\r\n                    <TabPane tab=\"Collections\" key=\"3\">\r\n\r\n                    </TabPane>\r\n                </Tabs>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Member_registration\r\n","D:\\workspace\\pms_latest\\frontend\\src\\redux\\actions\\types\\UserBehaviortypes.js",[],"D:\\workspace\\pms_latest\\frontend\\src\\redux\\actions\\types\\Authtypes.js",[],"D:\\workspace\\pms_latest\\frontend\\src\\redux\\actions\\types\\SR_types.js",[],"D:\\workspace\\pms_latest\\frontend\\src\\services\\AuthService.js",["529"],"import axios from 'axios';\r\nimport { API_URL } from '../utils/commons';\r\n\r\n\r\nconst payload = {\r\n    \"name\":\"\",\r\n    \"pass\":\"\"\r\n}\r\n\r\nconst login = (username,password)=>{\r\n\r\npayload.name = username;\r\npayload.pass = password;\r\n\r\nconsole.log(payload);\r\nconsole.log(process.env.NODE_ENV);\r\nconsole.log(API_URL);\r\nreturn axios.post(API_URL+'/user/login',payload).then((response) => {\r\n            if (response.data) {\r\n              //localStorage.setItem(\"cx_user\", JSON.stringify(response.data));\r\n              sessionStorage.setItem(\"cx_user\", JSON.stringify(response.data));\r\n            }\r\n    \r\n            return response.data;\r\n          });\r\n        }\r\n\r\n const logout = ()=>{\r\n  sessionStorage.removeItem(\"cx_user\")\r\n}\r\n\r\n\r\nexport default {\r\n    login,\r\n    logout\r\n}\r\n","D:\\workspace\\pms_latest\\frontend\\src\\utils\\commons.js",["530","531","532","533","534"],"D:\\workspace\\pms_latest\\frontend\\src\\redux\\actions\\SRAction.js",["535","536"],"import {\r\n    GET_SR_DATA_OWNERID,\r\n    REGISTER_SR_EMPLOYER,\r\n    REGISTER_SR_MEMBER,\r\n  } from \"./types/SR_types\";\r\n  import SRService from \"../../services/SRService\"\r\n  import {set_tab_active} from '../actions/UserBehaviourAction'\r\n\r\n\r\n  export const get_sr_data_action = (ownerid) => (dispatch) => {\r\n   \r\n    return SRService.getSrDataByOwnerId(ownerid).then(\r\n      (data) => {\r\n        if(data){\r\n          dispatch({\r\n            type: GET_SR_DATA_OWNERID,\r\n            payload: { SR_data: data },\r\n          });\r\n        }\r\n       \r\n      },\r\n      (error) => {\r\n        const msg =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n      }\r\n    );\r\n        \r\n  }\r\n\r\n\r\n  export const register_sr_employer = (sr_values) => (dispatch) => {\r\n   // dispatch(set_tab_active(2))\r\n    SRService.register_sr_employer(sr_values)\r\n    console.log(sr_values)\r\n    dispatch({\r\n              type: REGISTER_SR_EMPLOYER,\r\n              payload: { reg_sr_employer: sr_values },\r\n           });\r\n  }\r\n  export const register_sr_member = (sr_values) => (dispatch) => {\r\n   // dispatch(set_tab_active(4))\r\n    SRService.register_sr_member(sr_values)\r\n    console.log(sr_values)\r\n    dispatch({\r\n              type: REGISTER_SR_MEMBER,\r\n              payload: { reg_sr_member: sr_values },\r\n           });\r\n  }","D:\\workspace\\pms_latest\\frontend\\src\\components\\Employer\\activities.js",["537","538","539","540"],"import { React, useState,useEffect } from 'react'\r\nimport { Collapse } from 'antd'\r\nimport axios from 'axios'\r\nimport { useFormik } from 'formik';\r\nimport { API_URL } from '../../utils/commons';\r\nconst { Panel } = Collapse;\r\n\r\n\r\n\r\n\r\nfunction Activities(props) {\r\n  const [file1, setfile1] = useState([])\r\n  const formik = useFormik({\r\n    initialValues:{\r\n      file1:null,\r\n      file2:null\r\n    }\r\n  })\r\nconst [isdisabled, setisdisabled] = useState(false)\r\n\r\n  const handleFile1 = (e) => {\r\n\r\n    e.preventDefault()\r\n\r\n    const fd =new FormData();\r\n    fd.append('file',formik.values.file1)\r\n    fd.append('companyId',props.emp)\r\n   axios.post(API_URL+'/activityFileupload',fd).then((res)=>{\r\n\r\n    console.log(res)\r\n    alert(\"File was uploaded successfully!!\")\r\n   })\r\n    \r\n  }\r\n  const handleFile2 = (e) => {\r\n\r\n    e.preventDefault()\r\n\r\n    const fd =new FormData();\r\n    fd.append('file',formik.values.file2)\r\n    fd.append('companyId',props.emp)\r\n   axios.post(API_URL+'/activityFileupload',fd).then((res)=>{\r\n\r\n    console.log(res)\r\n    alert(\"File was uploaded successfully!!\")\r\n   })\r\n    \r\n  }\r\n  return (\r\n    <div>\r\n      <Collapse accordion>\r\n        <Panel header=\"Upload Identification Document\" key=\"1\">\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"custom-file\">\r\n              <input type=\"file\" class=\"custom-file-input\" onChange={(e) => {\r\n                    formik.setFieldValue(\"file1\", e.target.files[0])}} disabled={isdisabled}/>\r\n\r\n              <button type=\"button\" class=\"btn btn-outline-danger\" onClick={(e)=>{handleFile1(e)}}>Upload</button>\r\n            </div>\r\n\r\n          </div>\r\n        </Panel>\r\n        <Panel header=\"Upload Additional Attachments\" key=\"2\">\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"custom-file\">\r\n              <input type=\"file\" class=\"custom-file-input\" onChange={(e) => {\r\n                    formik.setFieldValue(\"file2\", e.target.files[0])}} disabled={isdisabled}/>\r\n\r\n              <button type=\"button\" class=\"btn btn-outline-danger\" onClick={(e)=>{handleFile2(e)}}>Upload</button>\r\n            </div>\r\n\r\n          </div>\r\n        </Panel>\r\n      </Collapse>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Activities","D:\\workspace\\pms_latest\\frontend\\src\\services\\SRService.js",["541","542","543","544","545"],"import axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { get_sr_data_action } from \"../redux/actions/SRAction\"\r\nimport { API_URL } from '../utils/commons';\r\n\r\n\r\n\r\nconst reg_payload = {\r\n\"sr_id\": \"\",\r\n\"status\": \"\",\r\n\"sr_type\": \"\",\r\n\"owner_type\":\"\",\r\n\"date_received\":\"\",\r\n\"contact_name\":\"\",\r\n\"contact_mobile\":\"\",\r\n\"employer_type\":\"\",\r\n\"emplyer_name\":\"\",\r\n\"emplyer_id\":\"\",\r\n\"nationality\":\"\",\r\n\"nrc\":\"\",\r\n\"prop_firstname\":\"\",\r\n\"prop_lastname\":\"\",\r\n\"prop_position\":\"\",\r\n\"owner_name\":\"\",\r\n\"owner_id\":'',\r\n\"notes\":\"\"\r\n}\r\nconst getSrDataByOwnerId = (ownerid)=>{\r\n\r\nreturn axios.post(API_URL+'/serviceRequestByOwnerId/'+ownerid)\r\n\r\n.then((response) => {\r\n        console.log(response.data)\r\n   \r\n            return response.data;\r\n          });\r\n        }\r\n\r\n        \r\nconst register_sr_employer = (sr_values)=>{\r\n\r\n  \r\n  console.log(sr_values)\r\n  return sr_values;\r\n          }\r\n          \r\nconst register_sr_member = (sr_values)=>{\r\n\r\n\r\n  console.log(sr_values)\r\n  return sr_values;\r\n          }\r\n\r\nexport default {\r\n  getSrDataByOwnerId,\r\n  register_sr_employer,\r\n  register_sr_member\r\n\r\n}\r\n","D:\\workspace\\pms_latest\\frontend\\src\\components\\Employer\\employer_list.js",[],"D:\\workspace\\pms_latest\\frontend\\src\\components\\Employer\\employerFormView.js",["546","547","548"],"\r\nimport { Tabs } from 'antd';\r\nimport { useFormik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { formatDate } from '../../utils/commons';\r\nimport Address from './address';\r\nimport Contacts from './contacts';\r\nimport ChecklistUpload from './checklistUpload';\r\n\r\nfunction EmployerFormView(props) {\r\n    const [formData, setFormData] = useState(props.employer)\r\n    const _ = require('lodash')\r\n    const { TabPane } = Tabs;\r\n    useEffect(() => {\r\n        console.log(formData)\r\n    }, [])\r\n\r\n    function callback(key) {\r\n    }\r\n\r\n    return (\r\n        <div className='container-fluid p-0'>\r\n\r\n        <div className='row'>\r\n            <div className='col'>\r\n            <h1 className=\"display-6 mx-3 py-3 float-start\">{formData.name ? formData.name.toUpperCase() : \"{Employer_Name}\"}</h1>\r\n            </div>\r\n            <div className='col'>\r\n           \r\n      \r\n            </div>\r\n        </div>\r\n\r\n         \r\n\r\n\r\n\r\n            <div className='col'>\r\n\r\n            <p className=\"card-title fs-3 mb-3\">Employer Details</p>\r\n\r\n                <hr />\r\n            </div>\r\n            <table style={{ width: \"100%\" }}>\r\n                <tbody className='fs-6'>\r\n\r\n                    <tr className='p-1'>\r\n                        <td className='p-1 tcx-form-label'><label className='form-label float-end'>Employer Name :  </label>\r\n                        </td>\r\n                        <td className='p-1' colSpan={3}>\r\n                            <input type=\"text\" className='form-control float-start '\r\n                                id=\"tradingName\"\r\n                                name=\"tradingName\"\r\n                                style={{ width: '100%' }}\r\n                                value={_.defaultTo(formData.name,'')} disabled />\r\n                        </td>\r\n\r\n\r\n\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Legal Name :  </label>\r\n                        </td>\r\n                        <td className='p-1' colSpan={3}>\r\n                            <input type=\"text\" className='form-control float-start '\r\n                                id=\"legalName\"\r\n                                name=\"legalName\"\r\n                                style={{ width: '100%' }}\r\n                                value={_.defaultTo(formData.legalName,'')} disabled />\r\n                        </td>\r\n\r\n                    </tr>\r\n                    <tr className='p-1'>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Employer # :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\"\r\n                            className='form-control float-start '\r\n                            name='id'\r\n                            id='id'\r\n                            style={{ width: '230px' }}\r\n                            value={_.defaultTo(formData.id,'')} disabled /></td>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Employer Type :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                            id=\"companyType\"\r\n                            name=\"companyType\"\r\n                            style={{ width: '100%' }}\r\n                            value={formData.companyType} disabled /></td>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>PACRA ID :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                            id=\"pacraId\"\r\n                            name=\"pacraId\"\r\n                            style={{ width: '100%' }}\r\n                            value={_.defaultTo(formData.pacraId,'')} disabled /></td>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Seasonal/Regular Flag :  </label></td>\r\n                        <td className='p-1'> <input type=\"checkbox\" className='float-start '\r\n                            id=\"seasonFlag\"\r\n                            name=\"seasonFlag\"\r\n                            style={{ width: '100%' }}\r\n                            checked={_.defaultTo(formData.seasonFlag,false)} disabled /></td>\r\n                    </tr>\r\n                    <tr className='p-1'>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Main Phone # :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\"\r\n                            className='form-control float-start '\r\n                            name='mainPhone'\r\n                            id='mainPhone'\r\n                            style={{ width: '230px' }}\r\n                            value={formData.mainPhone} disabled /></td>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Main Email ID :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                            id=\"mainEmail\"\r\n                            name=\"mainEmail\"\r\n                            style={{ width: '100%' }}\r\n                            value={formData.mainEmail} disabled /></td>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Main Fax :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                            id=\"pacraId\"\r\n                            name=\"pacraId\"\r\n                            style={{ width: '100%' }}\r\n                            value={_.defaultTo(formData.mainFax,'')} disabled /></td>\r\n\r\n                    </tr>\r\n                    <tr className='p-1'>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Residential Address:  </label></td>\r\n                        <td className='p-1' colSpan={3}> <input type=\"text\"\r\n                            className='form-control float-start '\r\n                            name='id'\r\n                            id='id'\r\n                            style={{ width: '100%' }}\r\n                            value={formData.address?_.defaultTo(formData.address.adressLine1,''):''} disabled /></td>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Status :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                            id=\"companyStatus\"\r\n                            name=\"companyStatus\"\r\n                            style={{ width: '100%' }}\r\n                            value={formData.companyStatus} disabled /></td>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Sub Status :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                            id=\"companySubStatus\"\r\n                            name=\"companySubStatus\"\r\n                            style={{ width: '100%' }}\r\n                            value={formData.companySubStatus} disabled /></td>\r\n                    </tr>\r\n\r\n                </tbody>\r\n            </table>\r\n\r\n            <div className='col pt-3'>\r\n\r\n            <p className=\"card-title fs-3 mb-3\">Business Details</p>\r\n\r\n                <hr />\r\n            </div>\r\n            <table style={{ width: \"100%\" }}>\r\n                <tbody className='fs-6'>\r\n\r\n                    <tr className='p-1'>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Holding Company :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\"\r\n                            className='form-control float-start '\r\n                            name='holdingCompany'\r\n                            id='holdingCompany'\r\n                            style={{ width: '230px' }}\r\n                            value={_.defaultTo(formData.holdingCompany,'')} disabled /></td>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Subsidiary Company :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                            id=\"type\"\r\n                            name=\"type\"\r\n                            style={{ width: '100%' }}\r\n                            value={_.defaultTo(formData.subsidaryCompany,'')} disabled /></td>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Sector Code :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                            id=\"sector\"\r\n                            name=\"sector\"\r\n                            style={{ width: '100%' }}\r\n                            value={formData.sector} disabled /></td>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Number of Employees :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                            id=\"noOfEmployee\"\r\n                            name=\"noOfEmployee\"\r\n                            style={{ width: '100%' }}\r\n                            value={formData.compCxRef} disabled /></td>\r\n                    </tr>\r\n                    <tr className='p-1'>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Date Incorporated :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\"\r\n                            className='form-control float-start '\r\n                            name='dateIncopr'\r\n                            id='dateIncopr'\r\n                            style={{ width: '230px' }}\r\n                            value={formatDate(Date.parse(_.defaultTo(formData.dateIncopr,'')))} disabled /></td>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Date Started Employing :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                            id=\"type\"\r\n                            name=\"type\"\r\n                            style={{ width: '100%' }}\r\n                            value={formatDate(Date.parse(_.defaultTo(formData.stEmploy,'')))}disabled /></td>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Date Registered with NAPSA :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                            id=\"pacraId\"\r\n                            name=\"pacraId\"\r\n                            style={{ width: '100%' }}\r\n                            value={formatDate(Date.parse(_.defaultTo(formData.created,'')))} disabled /></td>\r\n\r\n                    </tr>\r\n                \r\n                </tbody>\r\n            </table>\r\n\r\n            <div className='col pt-3'>\r\n\r\n            <p className=\"card-title fs-3 mb-3\">Properietor Details</p>\r\n\r\n                <hr />\r\n            </div>\r\n            <table style={{ width: \"100%\" }}>\r\n                <tbody className='fs-6'>\r\n\r\n                    <tr className='p-1'>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>First Name :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\"\r\n                            className='form-control float-start '\r\n                            name='holdingCompany'\r\n                            id='holdingCompany'\r\n                            style={{ width: '230px' }}\r\n                            value={_.defaultTo(formData.propFirstName,'')} disabled /></td>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Last Name :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                            id=\"type\"\r\n                            name=\"type\"\r\n                            style={{ width: '100%' }}\r\n                            value={_.defaultTo(formData.propLastName,'')} disabled /></td>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>NRC # :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                            id=\"propNrc\"\r\n                            name=\"propNrc\"\r\n                            style={{ width: '100%' }}\r\n                            value={formData.propNrc} disabled /></td>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Nationality :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                            id=\"seasonFlag\"\r\n                            name=\"seasonFlag\"\r\n                            style={{ width: '100%' }}\r\n                            value={formData.address?_.defaultTo(formData.address.country,''):''} disabled /></td>\r\n                    </tr>\r\n                    <tr className='p-1'>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Position :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\"\r\n                            className='form-control float-start '\r\n                            name='dateIncorporated'\r\n                            id='dateIncorporated'\r\n                            style={{ width: '230px' }}\r\n                            value={_.defaultTo(formData.propPosition,'')} disabled /></td>\r\n                       \r\n\r\n                    </tr>\r\n                \r\n                </tbody>\r\n            </table>\r\n\r\n            <div className='col pt-3'>\r\n\r\n            <p className=\"card-title fs-3 mb-3\">Location Details</p>\r\n\r\n                <hr />\r\n            </div>\r\n            <table style={{ width: \"100%\" }}>\r\n                <tbody className='fs-6'>\r\n\r\n                    <tr className='p-1'>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Region :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\"\r\n                            className='form-control float-start '\r\n                            name='region'\r\n                            id='region'\r\n                            style={{ width: '230px' }}\r\n                            value={_.defaultTo(formData.region,'')} disabled /></td>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Province :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                            id=\"province\"\r\n                            name=\"province\"\r\n                            style={{ width: '100%' }}\r\n                            value={_.defaultTo(formData.province,'')} disabled /></td>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Area :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                            id=\"state\"\r\n                            name=\"state\"\r\n                            style={{ width: '100%' }}\r\n                            value={formData.address?_.defaultTo(formData.address.state,''):''} disabled /></td>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>District :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\" className='form-control float-start '\r\n                            id=\"district\"\r\n                            name=\"district\"\r\n                            style={{ width: '100%' }}\r\n                            value={_.defaultTo(formData.district,'')} disabled /></td>\r\n                    </tr>\r\n                    <tr className='p-1'>\r\n                        <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Station :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\"\r\n                            className='form-control float-start '\r\n                            name='station'\r\n                            id='station'\r\n                            style={{ width: '230px' }}\r\n                            value={_.defaultTo(formData.station,'')} disabled /></td>\r\n                       \r\n                       <td className=' p-1 tcx-form-label'><label className='form-label float-end'>Zone :  </label></td>\r\n                        <td className='p-1'> <input type=\"text\"\r\n                            className='form-control float-start '\r\n                            name='zone'\r\n                            id='zone'\r\n                            style={{ width: '230px' }}\r\n                            value={_.defaultTo(formData.zone,'')} disabled /></td>\r\n                    </tr>\r\n                \r\n                </tbody>\r\n                </table>\r\n                <div className='row mt-5'>\r\n                                <Tabs onChange={callback} defaultActiveKey='1' type=\"card\">\r\n                                    <TabPane tab=\"Checklist (Attachments)\" key=\"1\">\r\n                                        <div className='row'>\r\n\r\n                                            <div className='col px-5'>\r\n                                                {/* <Activities show={false} emp={emp_no} /> */}\r\n                                                <ChecklistUpload empNumber={formData.id} hide={true}/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Contacts\" key=\"2\">\r\n                                        <div className='row'>\r\n\r\n\r\n                                            <div className='col px-5'>\r\n                                                <Contacts empNumber={formData.id} hide={true}/>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Addresses\" key=\"3\">\r\n                                        <div className='row'>\r\n\r\n                                            <div className='col px-5'>\r\n                                                <Address empNumber={formData.id} hide={true}/>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </TabPane>\r\n                                </Tabs>\r\n                            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmployerFormView;","D:\\workspace\\pms_latest\\frontend\\src\\components\\Employer\\checklistUpload.js",["549","550","551","552","553","554","555"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { Avatar, List } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\n\r\nimport { API_URL } from '../../utils/commons';\r\nimport axios from 'axios';\r\n\r\nfunction ChecklistUpload(props) {\r\n    const [empNumber, setEmpNumber] = useState(props.empNumber)\r\n    const [uploadFile, setUploadFile] = useState(null)\r\n    const [files, setFiles] = useState([])\r\n    const [isDisable,setIsDisable] = useState(!props.hide)\r\n    useEffect(() => {\r\n        axios.get(API_URL + '/filesByCompanyId/' + empNumber).then(\r\n            (res) => {\r\n                setFiles(res.data)\r\n            }\r\n        )\r\n    }, [])\r\n\r\nconst handleFileUpload = (e)=>{\r\n    console.log(uploadFile)\r\n    var formData = new FormData()\r\n    formData.append(\"file\", uploadFile)\r\n    axios({\r\n        method: \"post\",\r\n        url: API_URL+\"/uploadFile/\"+empNumber,\r\n        data: formData,\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      }).then(\r\n        (res) => {\r\n            setFiles(prevArray => [...prevArray, res.data])\r\n        },\r\nalert(\"uploaded successfully!!!\")\r\n    ).catch(\r\n        (error)=>(\r\nalert(\"Failed to upload!!\")\r\n        )\r\n    )\r\n  \r\n\r\n}\r\n\r\n    return (\r\n        <div>\r\n              <div className='row py-5'>\r\n             \r\n            <div class=\"custom-file\">\r\n            { isDisable &&    <input type=\"file\" id=\"uploadFile\"class=\"custom-file-input\" onChange={(e) => {\r\n                    setUploadFile(e.target.files[0])\r\n                    }} />}\r\n\r\n             { isDisable && <button type=\"button\" class=\"btn btn-outline-danger\" onClick={(e)=>{handleFileUpload(e)}}>Upload</button>}\r\n            </div>\r\n\r\n       \r\n              </div>\r\n            <div className='row'>\r\n\r\n\r\n                <ul class=\"list-group\">\r\n                    {files.length>0 ? files.map((item) => (\r\n\r\n                        <li class=\"list-group-item\"><p className='lead'>{item.fileName}</p> - <a type=\"button\" href={item.fileDownloadUri}>Download</a>\r\n\r\n                        </li>\r\n\r\n\r\n                    )) : <h1 className='display-6 mx-5 pb-5'>No Attachments</h1>}\r\n                </ul>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChecklistUpload;","D:\\workspace\\pms_latest\\frontend\\src\\components\\Employer\\contacts.js",["556","557","558","559","560","561","562","563","564"],"import { Table } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { API_URL, submitNewContact } from '../../utils/commons';\r\nimport { Modal } from 'antd';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nfunction Contacts(props) {\r\n\r\n    const _ = require('lodash')\r\n\r\n    const [empNumber, setEmpNumber] = useState(props.empNumber)\r\n    const [contactData, setContactData] = useState([])\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isDisable,setIsDisable] = useState(!props.hide)\r\n    const userdata = useSelector(state => state.AuthReducer).user;\r\n    const { register, handleSubmit , setValue, reset, watch, formState: { errors } } = useForm();\r\n    const watchAllFields = watch();\r\n\r\n    const onSubmit = data =>{ \r\n        console.log(data)\r\n        submitNewContactData(data)\r\n        reset(initialValues)\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n\r\n    const submitNewContactData= (data)=>{\r\n        axios.post(API_URL+'/addNewCompanyContact',  submitNewContact(data,empNumber,userdata.id)).\r\n        then((res)=>{\r\n           \r\n        setContactData(prevArray => [...prevArray, res.data])\r\n        }).catch((err)=>{\r\n            alert(err)\r\n        })\r\n}\r\n\r\n\r\n    useEffect(() => {\r\n    console.log(\"invoked\")\r\n        axios.get(API_URL + '/getContactByCompanyId/' + empNumber).then(\r\n\r\n            (res) => {\r\n                console.log(res.data)\r\n                setContactData(res.data)\r\n            }\r\n        )\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Firstname',\r\n            dataIndex: 'firstName',\r\n            key: 'firstName',\r\n        },\r\n        {\r\n            title: 'Lastname',\r\n            dataIndex: 'lastName',\r\n            key: 'lastName',\r\n        },\r\n        {\r\n            title: 'Contact Type',\r\n            dataIndex: 'contactType',\r\n            key: 'contactType',\r\n        },\r\n        {\r\n            title: 'Mobile Number',\r\n            dataIndex: 'mobileNo',\r\n            key: 'mobileNo',\r\n        }, {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        }\r\n    ]\r\n\r\n\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    \r\n\r\n    const handleCancel = () => {\r\n        reset(initialValues)\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const initialValues = {\r\n        companyId: \"\",\r\n        contactType: false,\r\n        contactTypeId: '',\r\n        craeatedBy: '',\r\n        created: '',\r\n        dob: '',\r\n        documentNo: '',\r\n        documentType: '',\r\n        email: '',\r\n        firstName: '',\r\n        id: '',\r\n        lastName: '',\r\n        lastUpdBy: '',\r\n        last_Updated: '',\r\n        loginId: \"\",\r\n        memberId: '',\r\n        middleName: '',\r\n        mobileNo: 0\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal title=\"Contacts\" visible={isModalVisible} onOk={handleSubmit(onSubmit)} onCancel={handleCancel}>\r\n                <form>\r\n                   <div className='row'>\r\n                    <div className='mx-5'>\r\n                    <table>\r\n                        <tbody className=''>\r\n                        <tr>  <td className='tcx-form-label'><label className='form-label float-end'>First name :</label></td>\r\n                            <td className='p-1'>  <input type=\"text\"\r\n                                className='form-control float-start '\r\n                                id=\"firstName\"\r\n                                name=\"firstName\"\r\n                                style={{ width: '100%' }}\r\n                                defaultValue={initialValues.firstName} {...register(\"firstName\")}/>\r\n                                </td>\r\n                        </tr>\r\n                        <tr>  <td className='tcx-form-label'><label className='form-label float-end'>Last name :</label></td>\r\n                            <td className='p-1'>  <input type=\"text\"\r\n                                className='form-control float-start '\r\n                                id=\"lastName\"\r\n                                name=\"lastName\"\r\n                                style={{ width: '100%' }}\r\n                                defaultValue={initialValues.lastName} {...register(\"lastName\")}/>\r\n\r\n                                </td>\r\n                        </tr>\r\n                        <tr>  <td className='tcx-form-label'><label className='form-label float-end'>Contact Type :</label></td>\r\n                            <td className='p-1'>  <input type=\"checkbox\"\r\n                                className='float-start'\r\n                                id=\"contactType\"\r\n                                name=\"contactType\"\r\n                                style={{ width: '100%' }}\r\n                                defaultChecked={initialValues.contactType} {...register(\"contactType\")}/>\r\n                                </td>\r\n                        </tr>\r\n                        <tr>  <td className='tcx-form-label'><label className='form-label float-end'>Date of Birth:</label></td>\r\n                            <td className='p-1'>  <input type=\"date\"\r\n                                className='form-control float-start'\r\n                                id=\"dob\"\r\n                                name=\"dob\"\r\n                                style={{ width: '100%' }}\r\n                                defaultValue={initialValues.dob} {...register(\"dob\")}/>\r\n                                </td>\r\n                        </tr>\r\n                        <tr>  <td className='tcx-form-label'><label className='form-label float-end'>Contact Number:</label></td>\r\n                            <td className='p-1'>  <input type=\"number\"\r\n                                className=' form-control float-start'\r\n                                id=\"mobileNo\"\r\n                                name=\"mobileNo\"\r\n                                style={{ width: '100%' }}\r\n                                defaultValue={initialValues.mobileNo} {...register(\"mobileNo\")}/>\r\n                                </td>\r\n                        </tr>\r\n                        <tr>  <td className='tcx-form-label'><label className='form-label float-end'>Contact Email:</label></td>\r\n                            <td className='p-1'>  <input type=\"text\"\r\n                                className='form-control  float-start'\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                style={{ width: '100%' }}\r\n                                defaultValue={initialValues.email} {...register(\"email\")}/>\r\n                                </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    </div>\r\n                    </div> \r\n                </form>\r\n            </Modal>\r\n\r\n\r\n            <table className=\"float-end\">\r\n\r\n              { isDisable && <td className=\"p-3\"> <button type=\"button\" className=\"btn btn-danger float-start rounded-pill\" onClick={showModal}>+ Add</button></td>}\r\n\r\n            </table>\r\n            <Table onRow={(record, rowIndex) => {\r\n                return {\r\n                    onClick: event => { }, // click row\r\n                    onDoubleClick: event => { }, // double click row\r\n                    onContextMenu: event => { }, // right button click row\r\n                    onMouseEnter: event => { }, // mouse enter row\r\n                    onMouseLeave: event => { }, // mouse leave row\r\n                };\r\n            }} columns={columns} dataSource={contactData}\r\n                loading={_.isNull(contactData) ? true : false}\r\n                pagination={{\r\n                    position: ['none', 'bottomCenter'],\r\n                    defaultPageSize: 5,\r\n                }} />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Contacts;","D:\\workspace\\pms_latest\\frontend\\src\\components\\Employer\\address.js",["565","566","567","568","569","570","571"],"import { Table } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { API_URL, submitNewAddress } from '../../utils/commons';\r\nimport { Modal } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\n\r\nfunction Address(props) {\r\n\r\n    const[empNumber,setEmpNumber] = useState(props.empNumber)\r\n\r\n    const[addressData,setAddressData] = useState([])\r\n    const [isDisable,setIsDisable] = useState(!props.hide)\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const _ = require('lodash')\r\n    const userdata = useSelector(state => state.AuthReducer).user;\r\n    const { register, handleSubmit , setValue, reset, watch, formState: { errors } } = useForm()\r\n    const watchAllFields = watch();\r\n\r\n    const onSubmit = data =>{ \r\n        console.log(data)\r\n        submitNewAddressData(data)\r\n        reset(initialValues)\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const submitNewAddressData= (data)=>{\r\n        if(checkIfPrimaryExists(data)){\r\n        axios.post(API_URL+'/addCompanyAdress',  submitNewAddress(data,empNumber,userdata.id)).\r\n        then((res)=>{\r\n           \r\n            setAddressData(prevArray => [...prevArray, res.data])\r\n        }).catch((err)=>{\r\n            alert(err)\r\n        })\r\n    }\r\n}\r\n\r\nconst checkIfPrimaryExists = (data)=>{\r\n    // if(data.isPrimary){\r\n    //     addressData.\r\n    // }\r\n    return true;\r\n}\r\n\r\n    useEffect(()=>{\r\n        \r\n        axios.get(API_URL+'/getAdressByCompanyId/'+empNumber).then(\r\n            (res) => {\r\n                console.log(res.data)\r\n                setAddressData(res.data)\r\n            }\r\n        )\r\n\r\n    },[])\r\n\r\n    const columns = [\r\n        {\r\n\r\n            title: 'Address Line 1',\r\n            dataIndex: 'adressLine1',\r\n            key: 'adressLine1',\r\n        },\r\n        {\r\n            title: 'Address Line 2',\r\n            dataIndex: 'adressLine2',\r\n            key: 'adressLine2',\r\n        },\r\n        {\r\n\r\n            title: 'Country',\r\n            dataIndex: 'country',\r\n            key: 'country',\r\n        },\r\n        {\r\n            title: 'Address Type',\r\n            dataIndex: 'adressType',\r\n            key: 'adressType',\r\n        },\r\n        {\r\n            title: 'City',\r\n            dataIndex: 'city',\r\n            key: 'city',\r\n        }, {\r\n            title: 'Province/State',\r\n            dataIndex: 'state',\r\n            key: 'state',\r\n        },\r\n        {\r\n            title: 'Postal Code',\r\n            dataIndex: 'postalCode',\r\n            key: 'postalCode',\r\n        },\r\n    ]\r\n\r\n\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    \r\n\r\n    const handleCancel = () => {\r\n        reset(initialValues)\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n\r\n    const initialValues = {\r\n        adressLine1: '',\r\n        adressLine2: '',\r\n        adressLine3: '',\r\n        adressLine4: '',\r\n        adressType: '',\r\n        isPrimary:false,\r\n        city: '',\r\n        companyId: '',\r\n        country: '',\r\n        craeatedBy: '',\r\n        created: '',\r\n        districtProvience: '',\r\n        id: '',\r\n        lastUpdBy: '',\r\n        last_Updated: '',\r\n        loginId: '',\r\n        memberId: '',\r\n        postalCode: '',\r\n        state: '',\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n         <table className=\"float-end\">\r\n\r\n\r\n         { isDisable && <td className=\"p-3\"> <button type=\"button\" className=\"btn btn-danger float-start rounded-pill\" onClick={showModal}>+ Add</button></td>}\r\n\r\n</table>\r\n\r\n <Modal title=\"Contacts\" visible={isModalVisible} onOk={handleSubmit(onSubmit)} onCancel={handleCancel}>\r\n                <form>\r\n                   <div className='row'>\r\n                    <div className='mx-5'>\r\n                    <table>\r\n                        <tbody className=''>\r\n                        <tr>  <td className='tcx-form-label'><label className='form-label float-end'>Address Line 1:</label></td>\r\n                            <td className='p-1'>  <input type=\"text\"\r\n                                className='form-control float-start '\r\n                                id=\"adressLine1\"\r\n                                name=\"adressLine1\"\r\n                                style={{ width: '100%' }}\r\n                                defaultValue={initialValues.adressLine1} {...register(\"adressLine1\")} required/>\r\n                                </td>\r\n                        </tr>\r\n                        <tr>  <td className='tcx-form-label'><label className='form-label float-end'>Address Line 2:</label></td>\r\n                            <td className='p-1'>  <input type=\"text\"\r\n                                className='form-control float-start '\r\n                                id=\"adressLine2\"\r\n                                name=\"adressLine2\"\r\n                                style={{ width: '100%' }}\r\n                                defaultValue={initialValues.adressLine2} {...register(\"adressLine2\")} required/>\r\n                                </td>\r\n                        </tr>\r\n                      \r\n                        <tr>  <td className='tcx-form-label'><label className='form-label float-end'>Is Primary ? :</label></td>\r\n                            <td className='p-1'>  <input type=\"checkbox\"\r\n                                className='float-start'\r\n                                id=\"isPrimary\"\r\n                                name=\"isPrimary\"\r\n                                style={{ width: '100%' }}\r\n                                defaultChecked={initialValues.isPrimary} {...register(\"isPrimary\")}/>\r\n                                </td>\r\n                        </tr>\r\n                        <tr>  <td className='tcx-form-label'><label className='form-label float-end'>Address Type :</label></td>\r\n                        <td className='p-1'>\r\n                                            \r\n                                            <select class=\"form-select float-start\" name='adressType' id='adressType' style={{ width: '230px' }} defaultValue={initialValues.adressType}    {...register(\"adressType\")}>\r\n                                                <option value=''></option>\r\n                                                <option value='Home'>Home</option>\r\n                                                <option value='Work'>Work</option>\r\n                                                \r\n                                            </select>\r\n                                        </td>\r\n                        </tr>\r\n                        <tr>  <td className='tcx-form-label'><label className='form-label float-end'>City :</label></td>\r\n                            <td className='p-1'>  <input type=\"text\"\r\n                                className='form-control float-start'\r\n                                id=\"city\"\r\n                                name=\"city\"\r\n                                style={{ width: '100%' }}\r\n                                defaultValue={initialValues.city} {...register(\"city\")}/>\r\n                                </td>\r\n                        </tr>\r\n                        <tr>  <td className='tcx-form-label'><label className='form-label float-end'>Country :</label></td>\r\n                            <td className='p-1'>  <input type=\"text\"\r\n                                className=' form-control float-start'\r\n                                id=\"country\"\r\n                                name=\"country\"\r\n                                style={{ width: '100%' }}\r\n                                defaultValue={initialValues.country} {...register(\"country\")}/>\r\n                                </td>\r\n                        </tr>\r\n                        <tr>  <td className='tcx-form-label'><label className='form-label float-end'>Province/State :</label></td>\r\n                            <td className='p-1'>  <input type=\"text\"\r\n                                className='form-control  float-start'\r\n                                id=\"districtProvience\"\r\n                                name=\"districtProvience\"\r\n                                style={{ width: '100%' }}\r\n                                defaultValue={initialValues.districtProvience} {...register(\"districtProvience\")}/>\r\n                                </td>\r\n                        </tr>\r\n                        <tr>  <td className='tcx-form-label'><label className='form-label float-end'>Postal Code :</label></td>\r\n                            <td className='p-1'>  <input type=\"number\"\r\n                                className='form-control  float-start'\r\n                                id=\"postalCode\"\r\n                                name=\"postalCode\"\r\n                                style={{ width: '100%' }}\r\n                                defaultValue={initialValues.postalCode} {...register(\"postalCode\")} required/>\r\n                                </td>\r\n                        </tr>\r\n                        \r\n                        </tbody>\r\n                    </table>\r\n\r\n                    </div>\r\n                    </div> \r\n                </form>\r\n            </Modal>\r\n\r\n\r\n\r\n            <Table onRow={(record, rowIndex) => {\r\n                            return {\r\n                                onClick: event => {  }, // click row\r\n                                onDoubleClick: event => { }, // double click row\r\n                                onContextMenu: event => { }, // right button click row\r\n                                onMouseEnter: event => { }, // mouse enter row\r\n                                onMouseLeave: event => { }, // mouse leave row\r\n                            };\r\n                        }} columns={columns} dataSource={addressData} \r\n                        loading={_.isNull(addressData)?true:false}\r\n                        pagination={{\r\n                            position: ['none','bottomCenter'],\r\n                            defaultPageSize: 5,\r\n                          }} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Address;","D:\\workspace\\pms_latest\\frontend\\src\\components\\Service\\serviceRegistration.js",["572","573","574","575","576","577","578"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { API_URL } from '../../utils/commons';\r\nimport { serviceRegistrationForm } from './formData/serviceRegistrationForm';\r\nfunction ServiceRegistration(props) {\r\n    const [srNum, setSrId] = useState(props.id?props.id:'')\r\n    const [srFormData, setSRFormData] = useState(serviceRegistrationForm.formData)\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n    const onSubmit = data => console.log(data);\r\n    const [lookup,setLookUp] = useState()\r\n    const [srFormDataValue,setSRFormDataValue] = useState()\r\n    const [employerNumber,setEmployerNumber] = useState()\r\n\r\n    useEffect(() => {\r\n        axios.get(API_URL + '/getLookUpForEmployer').then((res) => (\r\n            setLookUp(res.data)\r\n        )\r\n        )\r\n        if (props.id) {\r\n            axios.get(API_URL + '/serviceRequestBySrNumber/' + srNum).then(\r\n                (res) => {\r\n                    console.log(res.data)\r\n                    setSRFormDataValue(res.data)\r\n                    setEmployerNumber(res.data.company.id)\r\n                }\r\n            )\r\n        }\r\n    }, [])\r\n    \r\n\r\n    const handleDropDownLookup = (field)=>{\r\n        console.log(\"invoked\")\r\n          return (<>\r\n         {lookup && lookup[field].map((key)=>(\r\n            <option key={key} value={key}>{key}</option>\r\n         ))}\r\n          </>)\r\n}\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='col'>\r\n                    <p className=\"card-title fs-4 mb-3\">Service Request Details</p>\r\n\r\n                </div>\r\n                <div className='col'>\r\n\r\n                    <p className=\"card-title fs-4 mb-3\">Employer and Properietor Details</p>\r\n\r\n\r\n                </div>\r\n                <div className='col'>\r\n\r\n                    <p className=\"card-title fs-4 mb-3\">Contact Details</p>\r\n\r\n                </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className='row p-4'>\r\n\r\n               \r\n                <table>\r\n                <tbody className='fs-6'>\r\n\r\n                    {\r\n                        srFormData.map((row,index) => (\r\n                            <tr className='p-1' key={index}>\r\n                                {row[0].id ? <> <td className='p-1 tcx-form-label'><label className='form-label float-end'>{row[0].label} :</label></td>\r\n                                    <td className='p-1' colSpan={row[0].colSpan}>\r\n                                        <input type={row[0].inputType} className='form-control float-start '\r\n                                            id={row[0].id}\r\n                                            name={row[0].id}\r\n                                            style={{ width: '100%' }}\r\n                                            disabled={row[0].isDisable} {...register(row[0].id)}/>\r\n                                    </td> </>:null}\r\n                                {row[1].id ? <> <td className='p-1 tcx-form-label'><label className='form-label float-end'>{row[1].label} :</label></td>\r\n                                    <td className='p-1' colSpan={row[1].colSpan}>\r\n                                       {row[1].inputType ==='select'? \r\n                                       <select id={row[1].id} className={\"form-control float-start\"}  name={row[1].id}\r\n                                       style={{ width: '100%' }}\r\n                                       disabled={row[1].isDisable} {...register(row[1].id)}>\r\n                                            {\r\n                                                handleDropDownLookup(row[1].optionKey)\r\n                                            }\r\n                                       </select>\r\n                                       : <input type={row[1].inputType} className='form-control float-start '\r\n                                            id={row[1].id}\r\n                                            name={row[1].id}\r\n                                            style={{ width: '100%' }}\r\n                                            disabled={row[1].isDisable} {...register(row[1].id)}/>}\r\n                                    </td> </>:null}\r\n                                {row[2].id ? <><td className='p-1 tcx-form-label'><label className='form-label float-end'>{row[2].label} :</label></td>\r\n                                    <td className='p-1' colSpan={row[2].colSpan}>\r\n                                        <input type={row[2].inputType} className='form-control float-start '\r\n                                            id={row[2].id}\r\n                                            name={row[2].id}\r\n                                            style={{ width: '100%' }}\r\n                                            disabled={row[2].isDisable} {...register(row[2].id)}/>\r\n                                    </td>\r\n                                </>:null}\r\n                                {row[3].id ? <>  <td className='p-1 tcx-form-label'><label className='form-label float-end'>{row[3].label} :</label></td>\r\n                                    <td className='p-1' colSpan={row[3].colSpan}>\r\n                                        <input type={row[3].inputType} className='form-control float-start '\r\n                                            id={row[3].id}\r\n                                            name={row[3].id}\r\n                                            style={{ width: '100%' }}\r\n                                            disabled={row[3].isDisable} {...register(row[3].id)}/>\r\n                                    </td></>:null}\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n                <input type=\"submit\" />\r\n                </div>\r\n               \r\n            </form>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ServiceRegistration;","D:\\workspace\\pms_latest\\frontend\\src\\components\\Service\\formData\\serviceRegistrationForm.js",[],"D:\\workspace\\pms_latest\\frontend\\src\\components\\Returns\\returns.js",["579","580","581","582","583"],"D:\\workspace\\pms_latest\\frontend\\src\\components\\Members\\MemberRegistration.js",["584","585","586","587","588","589","590","591","592","593","594","595"],"D:\\workspace\\pms_latest\\frontend\\src\\components\\Service\\serviceMemberRegistration.js",["596","597","598","599","600","601","602","603","604","605","606","607","608"],{"ruleId":"609","severity":1,"message":"610","line":3,"column":35,"nodeType":"611","messageId":"612","endLine":3,"endColumn":39},{"ruleId":"613","severity":1,"message":"614","line":21,"column":8,"nodeType":"615","endLine":21,"endColumn":10,"suggestions":"616"},{"ruleId":"609","severity":1,"message":"617","line":8,"column":10,"nodeType":"611","messageId":"612","endLine":8,"endColumn":20},{"ruleId":"609","severity":1,"message":"618","line":95,"column":16,"nodeType":"611","messageId":"612","endLine":95,"endColumn":25},{"ruleId":"619","severity":1,"message":"620","line":14,"column":33,"nodeType":"621","endLine":14,"endColumn":143},{"ruleId":"619","severity":1,"message":"622","line":19,"column":41,"nodeType":"621","endLine":19,"endColumn":79},{"ruleId":"619","severity":1,"message":"622","line":20,"column":41,"nodeType":"621","endLine":20,"endColumn":79},{"ruleId":"623","severity":1,"message":"624","line":22,"column":7,"nodeType":"621","endLine":22,"endColumn":27},{"ruleId":"623","severity":1,"message":"625","line":25,"column":7,"nodeType":"621","endLine":25,"endColumn":25},{"ruleId":"609","severity":1,"message":"626","line":2,"column":10,"nodeType":"611","messageId":"612","endLine":2,"endColumn":21},{"ruleId":"609","severity":1,"message":"627","line":8,"column":11,"nodeType":"611","messageId":"612","endLine":8,"endColumn":21},{"ruleId":"613","severity":1,"message":"628","line":19,"column":6,"nodeType":"615","endLine":19,"endColumn":16,"suggestions":"629"},{"ruleId":"623","severity":1,"message":"630","line":35,"column":6,"nodeType":"621","endLine":35,"endColumn":24},{"ruleId":"609","severity":1,"message":"631","line":1,"column":38,"nodeType":"611","messageId":"612","endLine":1,"endColumn":45},{"ruleId":"609","severity":1,"message":"632","line":7,"column":10,"nodeType":"611","messageId":"612","endLine":7,"endColumn":18},{"ruleId":"609","severity":1,"message":"633","line":10,"column":10,"nodeType":"611","messageId":"612","endLine":10,"endColumn":18},{"ruleId":"609","severity":1,"message":"634","line":14,"column":12,"nodeType":"611","messageId":"612","endLine":14,"endColumn":26},{"ruleId":"609","severity":1,"message":"635","line":14,"column":28,"nodeType":"611","messageId":"612","endLine":14,"endColumn":45},{"ruleId":"609","severity":1,"message":"636","line":25,"column":22,"nodeType":"611","messageId":"612","endLine":25,"endColumn":33},{"ruleId":"609","severity":1,"message":"637","line":30,"column":22,"nodeType":"611","messageId":"612","endLine":30,"endColumn":33},{"ruleId":"609","severity":1,"message":"638","line":38,"column":12,"nodeType":"611","messageId":"612","endLine":38,"endColumn":28},{"ruleId":"639","severity":1,"message":"640","line":40,"column":24,"nodeType":"641","messageId":"642","endLine":40,"endColumn":26},{"ruleId":"639","severity":1,"message":"640","line":90,"column":36,"nodeType":"641","messageId":"642","endLine":90,"endColumn":38},{"ruleId":"643","severity":1,"message":"644","line":228,"column":33,"nodeType":"645","messageId":"646","endLine":228,"endColumn":34},{"ruleId":"639","severity":1,"message":"640","line":241,"column":158,"nodeType":"641","messageId":"642","endLine":241,"endColumn":160},{"ruleId":"639","severity":1,"message":"640","line":285,"column":85,"nodeType":"641","messageId":"642","endLine":285,"endColumn":87},{"ruleId":"647","severity":1,"message":"648","line":297,"column":83,"nodeType":"649","endLine":297,"endColumn":98},{"ruleId":"647","severity":1,"message":"648","line":305,"column":97,"nodeType":"649","endLine":305,"endColumn":108},{"ruleId":"619","severity":1,"message":"620","line":306,"column":41,"nodeType":"621","endLine":306,"endColumn":101},{"ruleId":"619","severity":1,"message":"620","line":312,"column":41,"nodeType":"621","endLine":312,"endColumn":102},{"ruleId":"647","severity":1,"message":"648","line":348,"column":225,"nodeType":"649","endLine":348,"endColumn":255},{"ruleId":"639","severity":1,"message":"640","line":348,"column":291,"nodeType":"641","messageId":"642","endLine":348,"endColumn":293},{"ruleId":"639","severity":1,"message":"640","line":431,"column":81,"nodeType":"641","messageId":"642","endLine":431,"endColumn":83},{"ruleId":"639","severity":1,"message":"640","line":487,"column":81,"nodeType":"641","messageId":"642","endLine":487,"endColumn":83},{"ruleId":"623","severity":1,"message":"650","line":22,"column":14,"nodeType":"621","endLine":22,"endColumn":37},{"ruleId":"623","severity":1,"message":"651","line":22,"column":13,"nodeType":"621","endLine":22,"endColumn":51},{"ruleId":"609","severity":1,"message":"652","line":3,"column":17,"nodeType":"611","messageId":"612","endLine":3,"endColumn":21},{"ruleId":"609","severity":1,"message":"653","line":5,"column":10,"nodeType":"611","messageId":"612","endLine":5,"endColumn":17},{"ruleId":"609","severity":1,"message":"654","line":40,"column":13,"nodeType":"611","messageId":"612","endLine":40,"endColumn":27},{"ruleId":"639","severity":1,"message":"640","line":152,"column":146,"nodeType":"641","messageId":"642","endLine":152,"endColumn":148},{"ruleId":"655","severity":1,"message":"656","line":12,"column":3,"nodeType":"657","endLine":37,"endColumn":4},{"ruleId":"655","severity":1,"message":"656","line":16,"column":3,"nodeType":"657","endLine":39,"endColumn":4},{"ruleId":"655","severity":1,"message":"656","line":11,"column":3,"nodeType":"657","endLine":23,"endColumn":4},{"ruleId":"609","severity":1,"message":"658","line":15,"column":12,"nodeType":"611","messageId":"612","endLine":15,"endColumn":25},{"ruleId":"609","severity":1,"message":"659","line":15,"column":27,"nodeType":"611","messageId":"612","endLine":15,"endColumn":43},{"ruleId":"619","severity":1,"message":"620","line":136,"column":45,"nodeType":"621","endLine":136,"endColumn":108},{"ruleId":"609","severity":1,"message":"658","line":16,"column":12,"nodeType":"611","messageId":"612","endLine":16,"endColumn":25},{"ruleId":"609","severity":1,"message":"659","line":16,"column":27,"nodeType":"611","messageId":"612","endLine":16,"endColumn":43},{"ruleId":"609","severity":1,"message":"610","line":4,"column":9,"nodeType":"611","messageId":"612","endLine":4,"endColumn":13},{"ruleId":"660","severity":1,"message":"661","line":14,"column":47,"nodeType":"641","messageId":"662","endLine":14,"endColumn":48},{"ruleId":"613","severity":1,"message":"663","line":21,"column":8,"nodeType":"615","endLine":21,"endColumn":10,"suggestions":"664"},{"ruleId":"665","severity":1,"message":"666","line":50,"column":45,"nodeType":"649","endLine":50,"endColumn":56},{"ruleId":"619","severity":1,"message":"622","line":50,"column":57,"nodeType":"621","endLine":50,"endColumn":69},{"ruleId":"665","severity":1,"message":"666","line":51,"column":45,"nodeType":"649","endLine":51,"endColumn":56},{"ruleId":"665","severity":1,"message":"666","line":52,"column":45,"nodeType":"649","endLine":52,"endColumn":56},{"ruleId":"665","severity":1,"message":"666","line":53,"column":45,"nodeType":"649","endLine":53,"endColumn":56},{"ruleId":"665","severity":1,"message":"666","line":54,"column":45,"nodeType":"649","endLine":54,"endColumn":56},{"ruleId":"665","severity":1,"message":"666","line":55,"column":45,"nodeType":"649","endLine":55,"endColumn":56},{"ruleId":"665","severity":1,"message":"666","line":56,"column":45,"nodeType":"649","endLine":56,"endColumn":56},{"ruleId":"665","severity":1,"message":"666","line":57,"column":45,"nodeType":"649","endLine":57,"endColumn":56},{"ruleId":"609","severity":1,"message":"667","line":4,"column":10,"nodeType":"611","messageId":"612","endLine":4,"endColumn":24},{"ruleId":"609","severity":1,"message":"668","line":6,"column":17,"nodeType":"611","messageId":"612","endLine":6,"endColumn":23},{"ruleId":"609","severity":1,"message":"669","line":7,"column":10,"nodeType":"611","messageId":"612","endLine":7,"endColumn":16},{"ruleId":"609","severity":1,"message":"670","line":15,"column":20,"nodeType":"611","messageId":"612","endLine":15,"endColumn":29},{"ruleId":"609","severity":1,"message":"671","line":25,"column":12,"nodeType":"611","messageId":"612","endLine":25,"endColumn":16},{"ruleId":"609","severity":1,"message":"672","line":27,"column":12,"nodeType":"611","messageId":"612","endLine":27,"endColumn":17},{"ruleId":"643","severity":1,"message":"644","line":36,"column":42,"nodeType":"645","messageId":"646","endLine":36,"endColumn":43},{"ruleId":"673","severity":1,"message":"674","line":80,"column":13,"nodeType":"675","messageId":"642","endLine":80,"endColumn":30},{"ruleId":"619","severity":1,"message":"620","line":292,"column":37,"nodeType":"621","endLine":292,"endColumn":102},{"ruleId":"609","severity":1,"message":"668","line":6,"column":17,"nodeType":"611","messageId":"612","endLine":6,"endColumn":23},{"ruleId":"609","severity":1,"message":"667","line":9,"column":10,"nodeType":"611","messageId":"612","endLine":9,"endColumn":24},{"ruleId":"609","severity":1,"message":"676","line":15,"column":11,"nodeType":"611","messageId":"612","endLine":15,"endColumn":19},{"ruleId":"609","severity":1,"message":"677","line":16,"column":24,"nodeType":"611","messageId":"612","endLine":16,"endColumn":37},{"ruleId":"609","severity":1,"message":"670","line":22,"column":20,"nodeType":"611","messageId":"612","endLine":22,"endColumn":29},{"ruleId":"619","severity":1,"message":"620","line":314,"column":29,"nodeType":"621","endLine":314,"endColumn":94},{"ruleId":"655","severity":1,"message":"678","line":34,"column":1,"nodeType":"657","endLine":37,"endColumn":2},{"ruleId":"609","severity":1,"message":"679","line":1,"column":10,"nodeType":"611","messageId":"612","endLine":1,"endColumn":23},{"ruleId":"609","severity":1,"message":"680","line":23,"column":15,"nodeType":"611","messageId":"612","endLine":23,"endColumn":18},{"ruleId":"609","severity":1,"message":"681","line":1,"column":26,"nodeType":"611","messageId":"612","endLine":1,"endColumn":35},{"ruleId":"609","severity":1,"message":"682","line":11,"column":10,"nodeType":"611","messageId":"612","endLine":11,"endColumn":15},{"ruleId":"609","severity":1,"message":"683","line":11,"column":17,"nodeType":"611","messageId":"612","endLine":11,"endColumn":25},{"ruleId":"609","severity":1,"message":"677","line":19,"column":20,"nodeType":"611","messageId":"612","endLine":19,"endColumn":33},{"ruleId":"609","severity":1,"message":"626","line":2,"column":10,"nodeType":"611","messageId":"612","endLine":2,"endColumn":21},{"ruleId":"609","severity":1,"message":"684","line":2,"column":23,"nodeType":"611","messageId":"612","endLine":2,"endColumn":34},{"ruleId":"609","severity":1,"message":"685","line":3,"column":10,"nodeType":"611","messageId":"612","endLine":3,"endColumn":28},{"ruleId":"609","severity":1,"message":"686","line":7,"column":7,"nodeType":"611","messageId":"612","endLine":7,"endColumn":18},{"ruleId":"655","severity":1,"message":"678","line":53,"column":1,"nodeType":"657","endLine":58,"endColumn":2},{"ruleId":"687","replacedBy":"688"},{"ruleId":"689","replacedBy":"690"},{"ruleId":"609","severity":1,"message":"610","line":3,"column":35,"nodeType":"611","messageId":"612","endLine":3,"endColumn":39},{"ruleId":"609","severity":1,"message":"681","line":2,"column":17,"nodeType":"611","messageId":"612","endLine":2,"endColumn":26},{"ruleId":"609","severity":1,"message":"691","line":3,"column":36,"nodeType":"611","messageId":"612","endLine":3,"endColumn":44},{"ruleId":"609","severity":1,"message":"692","line":17,"column":12,"nodeType":"611","messageId":"612","endLine":17,"endColumn":19},{"ruleId":"609","severity":1,"message":"693","line":17,"column":21,"nodeType":"611","messageId":"612","endLine":17,"endColumn":31},{"ruleId":"609","severity":1,"message":"694","line":20,"column":13,"nodeType":"611","messageId":"612","endLine":20,"endColumn":22},{"ruleId":"613","severity":1,"message":"614","line":21,"column":8,"nodeType":"615","endLine":21,"endColumn":10,"suggestions":"695"},{"ruleId":"609","severity":1,"message":"617","line":8,"column":10,"nodeType":"611","messageId":"612","endLine":8,"endColumn":20},{"ruleId":"609","severity":1,"message":"696","line":16,"column":8,"nodeType":"611","messageId":"612","endLine":16,"endColumn":14},{"ruleId":"609","severity":1,"message":"697","line":17,"column":8,"nodeType":"611","messageId":"612","endLine":17,"endColumn":16},{"ruleId":"609","severity":1,"message":"618","line":98,"column":16,"nodeType":"611","messageId":"612","endLine":98,"endColumn":25},{"ruleId":"609","severity":1,"message":"698","line":2,"column":10,"nodeType":"611","messageId":"612","endLine":2,"endColumn":25},{"ruleId":"609","severity":1,"message":"699","line":18,"column":10,"nodeType":"611","messageId":"612","endLine":18,"endColumn":30},{"ruleId":"609","severity":1,"message":"626","line":2,"column":10,"nodeType":"611","messageId":"612","endLine":2,"endColumn":21},{"ruleId":"609","severity":1,"message":"627","line":8,"column":11,"nodeType":"611","messageId":"612","endLine":8,"endColumn":21},{"ruleId":"613","severity":1,"message":"628","line":19,"column":6,"nodeType":"615","endLine":19,"endColumn":16,"suggestions":"700"},{"ruleId":"623","severity":1,"message":"630","line":35,"column":6,"nodeType":"621","endLine":35,"endColumn":24},{"ruleId":"609","severity":1,"message":"701","line":6,"column":8,"nodeType":"611","messageId":"612","endLine":6,"endColumn":23},{"ruleId":"609","severity":1,"message":"702","line":8,"column":8,"nodeType":"611","messageId":"612","endLine":8,"endColumn":27},{"ruleId":"613","severity":1,"message":"703","line":31,"column":5,"nodeType":"615","endLine":31,"endColumn":7,"suggestions":"704"},{"ruleId":"639","severity":1,"message":"640","line":35,"column":62,"nodeType":"641","messageId":"642","endLine":35,"endColumn":64},{"ruleId":"623","severity":1,"message":"624","line":44,"column":7,"nodeType":"621","endLine":44,"endColumn":41},{"ruleId":"609","severity":1,"message":"705","line":5,"column":8,"nodeType":"611","messageId":"612","endLine":5,"endColumn":29},{"ruleId":"623","severity":1,"message":"650","line":22,"column":14,"nodeType":"621","endLine":22,"endColumn":37},{"ruleId":"609","severity":1,"message":"652","line":3,"column":17,"nodeType":"611","messageId":"612","endLine":3,"endColumn":21},{"ruleId":"609","severity":1,"message":"653","line":5,"column":10,"nodeType":"611","messageId":"612","endLine":5,"endColumn":17},{"ruleId":"609","severity":1,"message":"654","line":40,"column":13,"nodeType":"611","messageId":"612","endLine":40,"endColumn":27},{"ruleId":"639","severity":1,"message":"640","line":152,"column":146,"nodeType":"641","messageId":"642","endLine":152,"endColumn":148},{"ruleId":"609","severity":1,"message":"631","line":1,"column":38,"nodeType":"611","messageId":"612","endLine":1,"endColumn":45},{"ruleId":"609","severity":1,"message":"632","line":7,"column":10,"nodeType":"611","messageId":"612","endLine":7,"endColumn":18},{"ruleId":"609","severity":1,"message":"633","line":10,"column":10,"nodeType":"611","messageId":"612","endLine":10,"endColumn":18},{"ruleId":"609","severity":1,"message":"706","line":16,"column":11,"nodeType":"611","messageId":"612","endLine":16,"endColumn":12},{"ruleId":"609","severity":1,"message":"634","line":17,"column":12,"nodeType":"611","messageId":"612","endLine":17,"endColumn":26},{"ruleId":"609","severity":1,"message":"635","line":17,"column":28,"nodeType":"611","messageId":"612","endLine":17,"endColumn":45},{"ruleId":"609","severity":1,"message":"636","line":27,"column":22,"nodeType":"611","messageId":"612","endLine":27,"endColumn":33},{"ruleId":"609","severity":1,"message":"637","line":32,"column":22,"nodeType":"611","messageId":"612","endLine":32,"endColumn":33},{"ruleId":"609","severity":1,"message":"638","line":40,"column":12,"nodeType":"611","messageId":"612","endLine":40,"endColumn":28},{"ruleId":"639","severity":1,"message":"640","line":43,"column":24,"nodeType":"641","messageId":"642","endLine":43,"endColumn":26},{"ruleId":"639","severity":1,"message":"640","line":93,"column":36,"nodeType":"641","messageId":"642","endLine":93,"endColumn":38},{"ruleId":"643","severity":1,"message":"644","line":238,"column":33,"nodeType":"645","messageId":"646","endLine":238,"endColumn":34},{"ruleId":"609","severity":1,"message":"707","line":301,"column":7,"nodeType":"611","messageId":"612","endLine":301,"endColumn":22},{"ruleId":"639","severity":1,"message":"640","line":364,"column":158,"nodeType":"641","messageId":"642","endLine":364,"endColumn":160},{"ruleId":"639","severity":1,"message":"640","line":408,"column":85,"nodeType":"641","messageId":"642","endLine":408,"endColumn":87},{"ruleId":"619","severity":1,"message":"620","line":429,"column":41,"nodeType":"621","endLine":429,"endColumn":101},{"ruleId":"619","severity":1,"message":"620","line":435,"column":41,"nodeType":"621","endLine":435,"endColumn":102},{"ruleId":"639","severity":1,"message":"640","line":450,"column":260,"nodeType":"641","messageId":"642","endLine":450,"endColumn":262},{"ruleId":"639","severity":1,"message":"640","line":660,"column":81,"nodeType":"641","messageId":"642","endLine":660,"endColumn":83},{"ruleId":"655","severity":1,"message":"656","line":16,"column":3,"nodeType":"657","endLine":39,"endColumn":4},{"ruleId":"655","severity":1,"message":"656","line":13,"column":3,"nodeType":"657","endLine":45,"endColumn":4},{"ruleId":"655","severity":1,"message":"656","line":11,"column":3,"nodeType":"657","endLine":23,"endColumn":4},{"ruleId":"609","severity":1,"message":"626","line":2,"column":10,"nodeType":"611","messageId":"612","endLine":2,"endColumn":21},{"ruleId":"609","severity":1,"message":"708","line":6,"column":50,"nodeType":"611","messageId":"612","endLine":6,"endColumn":73},{"ruleId":"609","severity":1,"message":"706","line":16,"column":7,"nodeType":"611","messageId":"612","endLine":16,"endColumn":8},{"ruleId":"609","severity":1,"message":"709","line":20,"column":19,"nodeType":"611","messageId":"612","endLine":20,"endColumn":26},{"ruleId":"609","severity":1,"message":"658","line":22,"column":12,"nodeType":"611","messageId":"612","endLine":22,"endColumn":25},{"ruleId":"609","severity":1,"message":"659","line":22,"column":27,"nodeType":"611","messageId":"612","endLine":22,"endColumn":43},{"ruleId":"609","severity":1,"message":"710","line":23,"column":12,"nodeType":"611","messageId":"612","endLine":23,"endColumn":28},{"ruleId":"609","severity":1,"message":"711","line":23,"column":30,"nodeType":"611","messageId":"612","endLine":23,"endColumn":49},{"ruleId":"609","severity":1,"message":"712","line":64,"column":36,"nodeType":"611","messageId":"612","endLine":64,"endColumn":45},{"ruleId":"609","severity":1,"message":"713","line":64,"column":46,"nodeType":"611","messageId":"612","endLine":64,"endColumn":51},{"ruleId":"613","severity":1,"message":"714","line":96,"column":8,"nodeType":"615","endLine":96,"endColumn":10,"suggestions":"715"},{"ruleId":"643","severity":1,"message":"644","line":130,"column":54,"nodeType":"645","messageId":"646","endLine":130,"endColumn":55},{"ruleId":"716","severity":1,"message":"717","line":143,"column":85,"nodeType":"718","messageId":"719","endLine":143,"endColumn":86,"fix":"720"},{"ruleId":"623","severity":1,"message":"651","line":396,"column":40,"nodeType":"621","endLine":396,"endColumn":121},{"ruleId":"609","severity":1,"message":"610","line":4,"column":9,"nodeType":"611","messageId":"612","endLine":4,"endColumn":13},{"ruleId":"609","severity":1,"message":"721","line":7,"column":10,"nodeType":"611","messageId":"612","endLine":7,"endColumn":24},{"ruleId":"609","severity":1,"message":"668","line":8,"column":10,"nodeType":"611","messageId":"612","endLine":8,"endColumn":16},{"ruleId":"609","severity":1,"message":"722","line":8,"column":18,"nodeType":"611","messageId":"612","endLine":8,"endColumn":23},{"ruleId":"609","severity":1,"message":"723","line":8,"column":25,"nodeType":"611","messageId":"612","endLine":8,"endColumn":30},{"ruleId":"609","severity":1,"message":"724","line":9,"column":8,"nodeType":"611","messageId":"612","endLine":9,"endColumn":19},{"ruleId":"643","severity":1,"message":"644","line":22,"column":55,"nodeType":"645","messageId":"646","endLine":22,"endColumn":56},{"ruleId":"613","severity":1,"message":"725","line":28,"column":8,"nodeType":"615","endLine":28,"endColumn":10,"suggestions":"726"},{"ruleId":"609","severity":1,"message":"658","line":15,"column":12,"nodeType":"611","messageId":"612","endLine":15,"endColumn":25},{"ruleId":"609","severity":1,"message":"659","line":15,"column":27,"nodeType":"611","messageId":"612","endLine":15,"endColumn":43},{"ruleId":"619","severity":1,"message":"620","line":137,"column":45,"nodeType":"621","endLine":137,"endColumn":108},{"ruleId":"609","severity":1,"message":"626","line":2,"column":23,"nodeType":"611","messageId":"612","endLine":2,"endColumn":34},{"ruleId":"609","severity":1,"message":"727","line":3,"column":10,"nodeType":"611","messageId":"612","endLine":3,"endColumn":19},{"ruleId":"609","severity":1,"message":"728","line":3,"column":21,"nodeType":"611","messageId":"612","endLine":3,"endColumn":26},{"ruleId":"609","severity":1,"message":"729","line":3,"column":28,"nodeType":"611","messageId":"612","endLine":3,"endColumn":42},{"ruleId":"609","severity":1,"message":"667","line":4,"column":10,"nodeType":"611","messageId":"612","endLine":4,"endColumn":24},{"ruleId":"609","severity":1,"message":"730","line":5,"column":10,"nodeType":"611","messageId":"612","endLine":5,"endColumn":25},{"ruleId":"609","severity":1,"message":"731","line":6,"column":10,"nodeType":"611","messageId":"612","endLine":6,"endColumn":15},{"ruleId":"609","severity":1,"message":"668","line":6,"column":17,"nodeType":"611","messageId":"612","endLine":6,"endColumn":23},{"ruleId":"609","severity":1,"message":"669","line":7,"column":10,"nodeType":"611","messageId":"612","endLine":7,"endColumn":16},{"ruleId":"609","severity":1,"message":"708","line":7,"column":18,"nodeType":"611","messageId":"612","endLine":7,"endColumn":41},{"ruleId":"609","severity":1,"message":"732","line":10,"column":22,"nodeType":"611","messageId":"612","endLine":10,"endColumn":37},{"ruleId":"609","severity":1,"message":"733","line":12,"column":8,"nodeType":"611","messageId":"612","endLine":12,"endColumn":18},{"ruleId":"609","severity":1,"message":"734","line":13,"column":10,"nodeType":"611","messageId":"612","endLine":13,"endColumn":11},{"ruleId":"609","severity":1,"message":"735","line":23,"column":10,"nodeType":"611","messageId":"612","endLine":23,"endColumn":15},{"ruleId":"609","severity":1,"message":"670","line":28,"column":20,"nodeType":"611","messageId":"612","endLine":28,"endColumn":29},{"ruleId":"609","severity":1,"message":"736","line":36,"column":20,"nodeType":"611","messageId":"612","endLine":36,"endColumn":29},{"ruleId":"609","severity":1,"message":"713","line":47,"column":37,"nodeType":"611","messageId":"612","endLine":47,"endColumn":42},{"ruleId":"609","severity":1,"message":"737","line":47,"column":57,"nodeType":"611","messageId":"612","endLine":47,"endColumn":63},{"ruleId":"716","severity":1,"message":"717","line":57,"column":108,"nodeType":"718","messageId":"719","endLine":57,"endColumn":109,"fix":"738"},{"ruleId":"613","severity":1,"message":"739","line":75,"column":8,"nodeType":"615","endLine":75,"endColumn":10,"suggestions":"740"},{"ruleId":"643","severity":1,"message":"644","line":82,"column":38,"nodeType":"645","messageId":"646","endLine":82,"endColumn":39},{"ruleId":"643","severity":1,"message":"644","line":92,"column":38,"nodeType":"645","messageId":"646","endLine":92,"endColumn":39},{"ruleId":"643","severity":1,"message":"644","line":102,"column":38,"nodeType":"645","messageId":"646","endLine":102,"endColumn":39},{"ruleId":"639","severity":1,"message":"640","line":130,"column":51,"nodeType":"641","messageId":"642","endLine":130,"endColumn":53},{"ruleId":"673","severity":1,"message":"741","line":164,"column":5,"nodeType":"675","messageId":"642","endLine":164,"endColumn":14},{"ruleId":"639","severity":1,"message":"640","line":168,"column":40,"nodeType":"641","messageId":"642","endLine":168,"endColumn":42},{"ruleId":"609","severity":1,"message":"668","line":6,"column":17,"nodeType":"611","messageId":"612","endLine":6,"endColumn":23},{"ruleId":"609","severity":1,"message":"667","line":9,"column":10,"nodeType":"611","messageId":"612","endLine":9,"endColumn":24},{"ruleId":"609","severity":1,"message":"676","line":15,"column":11,"nodeType":"611","messageId":"612","endLine":15,"endColumn":19},{"ruleId":"609","severity":1,"message":"677","line":16,"column":24,"nodeType":"611","messageId":"612","endLine":16,"endColumn":37},{"ruleId":"609","severity":1,"message":"670","line":22,"column":20,"nodeType":"611","messageId":"612","endLine":22,"endColumn":29},{"ruleId":"619","severity":1,"message":"620","line":314,"column":29,"nodeType":"621","endLine":314,"endColumn":94},{"ruleId":"655","severity":1,"message":"678","line":33,"column":1,"nodeType":"657","endLine":36,"endColumn":2},{"ruleId":"609","severity":1,"message":"679","line":1,"column":10,"nodeType":"611","messageId":"612","endLine":1,"endColumn":23},{"ruleId":"609","severity":1,"message":"742","line":437,"column":9,"nodeType":"611","messageId":"612","endLine":437,"endColumn":13},{"ruleId":"609","severity":1,"message":"743","line":438,"column":9,"nodeType":"611","messageId":"612","endLine":438,"endColumn":16},{"ruleId":"609","severity":1,"message":"744","line":439,"column":9,"nodeType":"611","messageId":"612","endLine":439,"endColumn":16},{"ruleId":"745","severity":1,"message":"746","line":558,"column":22,"nodeType":"747","messageId":"748","endLine":558,"endColumn":24},{"ruleId":"609","severity":1,"message":"667","line":7,"column":11,"nodeType":"611","messageId":"612","endLine":7,"endColumn":25},{"ruleId":"609","severity":1,"message":"680","line":23,"column":15,"nodeType":"611","messageId":"612","endLine":23,"endColumn":18},{"ruleId":"609","severity":1,"message":"681","line":1,"column":26,"nodeType":"611","messageId":"612","endLine":1,"endColumn":35},{"ruleId":"609","severity":1,"message":"682","line":12,"column":10,"nodeType":"611","messageId":"612","endLine":12,"endColumn":15},{"ruleId":"609","severity":1,"message":"683","line":12,"column":17,"nodeType":"611","messageId":"612","endLine":12,"endColumn":25},{"ruleId":"609","severity":1,"message":"677","line":19,"column":20,"nodeType":"611","messageId":"612","endLine":19,"endColumn":33},{"ruleId":"609","severity":1,"message":"626","line":2,"column":10,"nodeType":"611","messageId":"612","endLine":2,"endColumn":21},{"ruleId":"609","severity":1,"message":"684","line":2,"column":23,"nodeType":"611","messageId":"612","endLine":2,"endColumn":34},{"ruleId":"609","severity":1,"message":"685","line":3,"column":10,"nodeType":"611","messageId":"612","endLine":3,"endColumn":28},{"ruleId":"609","severity":1,"message":"686","line":8,"column":7,"nodeType":"611","messageId":"612","endLine":8,"endColumn":18},{"ruleId":"655","severity":1,"message":"678","line":54,"column":1,"nodeType":"657","endLine":59,"endColumn":2},{"ruleId":"609","severity":1,"message":"727","line":3,"column":10,"nodeType":"611","messageId":"612","endLine":3,"endColumn":19},{"ruleId":"609","severity":1,"message":"749","line":12,"column":22,"nodeType":"611","messageId":"612","endLine":12,"endColumn":33},{"ruleId":"613","severity":1,"message":"750","line":17,"column":8,"nodeType":"615","endLine":17,"endColumn":10,"suggestions":"751"},{"ruleId":"609","severity":1,"message":"721","line":3,"column":10,"nodeType":"611","messageId":"612","endLine":3,"endColumn":24},{"ruleId":"609","severity":1,"message":"752","line":4,"column":10,"nodeType":"611","messageId":"612","endLine":4,"endColumn":16},{"ruleId":"609","severity":1,"message":"753","line":4,"column":18,"nodeType":"611","messageId":"612","endLine":4,"endColumn":22},{"ruleId":"609","severity":1,"message":"724","line":5,"column":8,"nodeType":"611","messageId":"612","endLine":5,"endColumn":19},{"ruleId":"609","severity":1,"message":"754","line":11,"column":23,"nodeType":"611","messageId":"612","endLine":11,"endColumn":35},{"ruleId":"609","severity":1,"message":"755","line":14,"column":22,"nodeType":"611","messageId":"612","endLine":14,"endColumn":34},{"ruleId":"613","severity":1,"message":"756","line":21,"column":8,"nodeType":"615","endLine":21,"endColumn":10,"suggestions":"757"},{"ruleId":"609","severity":1,"message":"758","line":9,"column":10,"nodeType":"611","messageId":"612","endLine":9,"endColumn":21},{"ruleId":"609","severity":1,"message":"759","line":10,"column":13,"nodeType":"611","messageId":"612","endLine":10,"endColumn":16},{"ruleId":"609","severity":1,"message":"754","line":18,"column":23,"nodeType":"611","messageId":"612","endLine":18,"endColumn":35},{"ruleId":"609","severity":1,"message":"755","line":21,"column":22,"nodeType":"611","messageId":"612","endLine":21,"endColumn":34},{"ruleId":"609","severity":1,"message":"760","line":23,"column":38,"nodeType":"611","messageId":"612","endLine":23,"endColumn":46},{"ruleId":"609","severity":1,"message":"737","line":23,"column":75,"nodeType":"611","messageId":"612","endLine":23,"endColumn":81},{"ruleId":"609","severity":1,"message":"761","line":24,"column":11,"nodeType":"611","messageId":"612","endLine":24,"endColumn":25},{"ruleId":"716","severity":1,"message":"717","line":35,"column":99,"nodeType":"718","messageId":"719","endLine":35,"endColumn":100,"fix":"762"},{"ruleId":"613","severity":1,"message":"756","line":56,"column":8,"nodeType":"615","endLine":56,"endColumn":10,"suggestions":"763"},{"ruleId":"609","severity":1,"message":"754","line":14,"column":21,"nodeType":"611","messageId":"612","endLine":14,"endColumn":33},{"ruleId":"609","severity":1,"message":"755","line":17,"column":22,"nodeType":"611","messageId":"612","endLine":17,"endColumn":34},{"ruleId":"609","severity":1,"message":"760","line":21,"column":38,"nodeType":"611","messageId":"612","endLine":21,"endColumn":46},{"ruleId":"609","severity":1,"message":"737","line":21,"column":75,"nodeType":"611","messageId":"612","endLine":21,"endColumn":81},{"ruleId":"609","severity":1,"message":"761","line":22,"column":11,"nodeType":"611","messageId":"612","endLine":22,"endColumn":25},{"ruleId":"716","severity":1,"message":"717","line":33,"column":95,"nodeType":"718","messageId":"719","endLine":33,"endColumn":96,"fix":"764"},{"ruleId":"613","severity":1,"message":"756","line":59,"column":7,"nodeType":"615","endLine":59,"endColumn":9,"suggestions":"765"},{"ruleId":"609","severity":1,"message":"709","line":7,"column":19,"nodeType":"611","messageId":"612","endLine":7,"endColumn":26},{"ruleId":"609","severity":1,"message":"766","line":8,"column":24,"nodeType":"611","messageId":"612","endLine":8,"endColumn":37},{"ruleId":"609","severity":1,"message":"713","line":9,"column":37,"nodeType":"611","messageId":"612","endLine":9,"endColumn":42},{"ruleId":"609","severity":1,"message":"737","line":9,"column":57,"nodeType":"611","messageId":"612","endLine":9,"endColumn":63},{"ruleId":"609","severity":1,"message":"767","line":12,"column":12,"nodeType":"611","messageId":"612","endLine":12,"endColumn":27},{"ruleId":"609","severity":1,"message":"768","line":13,"column":12,"nodeType":"611","messageId":"612","endLine":13,"endColumn":26},{"ruleId":"613","severity":1,"message":"769","line":29,"column":8,"nodeType":"615","endLine":29,"endColumn":10,"suggestions":"770"},{"ruleId":"609","severity":1,"message":"771","line":2,"column":23,"nodeType":"611","messageId":"612","endLine":2,"endColumn":28},{"ruleId":"609","severity":1,"message":"772","line":4,"column":30,"nodeType":"611","messageId":"612","endLine":4,"endColumn":56},{"ruleId":"609","severity":1,"message":"706","line":9,"column":11,"nodeType":"611","messageId":"612","endLine":9,"endColumn":12},{"ruleId":"613","severity":1,"message":"663","line":31,"column":11,"nodeType":"615","endLine":31,"endColumn":13,"suggestions":"773"},{"ruleId":"643","severity":1,"message":"644","line":57,"column":43,"nodeType":"645","messageId":"646","endLine":57,"endColumn":44},{"ruleId":"609","severity":1,"message":"668","line":2,"column":10,"nodeType":"611","messageId":"612","endLine":2,"endColumn":16},{"ruleId":"609","severity":1,"message":"722","line":2,"column":25,"nodeType":"611","messageId":"612","endLine":2,"endColumn":30},{"ruleId":"609","severity":1,"message":"723","line":2,"column":32,"nodeType":"611","messageId":"612","endLine":2,"endColumn":37},{"ruleId":"609","severity":1,"message":"774","line":2,"column":46,"nodeType":"611","messageId":"612","endLine":2,"endColumn":58},{"ruleId":"609","severity":1,"message":"775","line":17,"column":12,"nodeType":"611","messageId":"612","endLine":17,"endColumn":22},{"ruleId":"609","severity":1,"message":"776","line":25,"column":11,"nodeType":"611","messageId":"612","endLine":25,"endColumn":19},{"ruleId":"609","severity":1,"message":"777","line":30,"column":23,"nodeType":"611","messageId":"612","endLine":30,"endColumn":35},{"ruleId":"609","severity":1,"message":"713","line":30,"column":37,"nodeType":"611","messageId":"612","endLine":30,"endColumn":42},{"ruleId":"609","severity":1,"message":"737","line":30,"column":63,"nodeType":"611","messageId":"612","endLine":30,"endColumn":69},{"ruleId":"609","severity":1,"message":"760","line":30,"column":73,"nodeType":"611","messageId":"612","endLine":30,"endColumn":81},{"ruleId":"609","severity":1,"message":"778","line":54,"column":11,"nodeType":"611","messageId":"612","endLine":54,"endColumn":19},{"ruleId":"613","severity":1,"message":"779","line":87,"column":8,"nodeType":"615","endLine":87,"endColumn":10,"suggestions":"780"},{"ruleId":"609","severity":1,"message":"681","line":1,"column":17,"nodeType":"611","messageId":"612","endLine":1,"endColumn":26},{"ruleId":"609","severity":1,"message":"626","line":2,"column":10,"nodeType":"611","messageId":"612","endLine":2,"endColumn":21},{"ruleId":"609","severity":1,"message":"781","line":6,"column":31,"nodeType":"611","messageId":"612","endLine":6,"endColumn":48},{"ruleId":"609","severity":1,"message":"708","line":6,"column":50,"nodeType":"611","messageId":"612","endLine":6,"endColumn":73},{"ruleId":"609","severity":1,"message":"669","line":6,"column":103,"nodeType":"611","messageId":"612","endLine":6,"endColumn":109},{"ruleId":"609","severity":1,"message":"705","line":8,"column":8,"nodeType":"611","messageId":"612","endLine":8,"endColumn":29},{"ruleId":"609","severity":1,"message":"706","line":17,"column":7,"nodeType":"611","messageId":"612","endLine":17,"endColumn":8},{"ruleId":"609","severity":1,"message":"782","line":23,"column":19,"nodeType":"611","messageId":"612","endLine":23,"endColumn":28},{"ruleId":"716","severity":1,"message":"717","line":36,"column":108,"nodeType":"718","messageId":"719","endLine":36,"endColumn":109,"fix":"783"},{"ruleId":"673","severity":1,"message":"784","line":58,"column":9,"nodeType":"675","messageId":"642","endLine":58,"endColumn":16},{"ruleId":"609","severity":1,"message":"713","line":76,"column":46,"nodeType":"611","messageId":"612","endLine":76,"endColumn":51},{"ruleId":"643","severity":1,"message":"644","line":92,"column":54,"nodeType":"645","messageId":"646","endLine":92,"endColumn":55},{"ruleId":"619","severity":1,"message":"620","line":214,"column":38,"nodeType":"621","endLine":214,"endColumn":95},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'isLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["785"],"'makeStyles' is defined but never used.","'setreq_id' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-pascal-case","Imported JSX component Employer_register must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Member_register must be in PascalCase or SCREAMING_SNAKE_CASE","'useDispatch' is defined but never used.","'isLoggedIn' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'user_data.firstName' and 'user_data.lastName'. Either include them or remove the dependency array.",["786"],"Imported JSX component Service_request must be in PascalCase or SCREAMING_SNAKE_CASE","'useMemo' is defined but never used.","'useTable' is defined but never used.","'Redirect' is defined but never used.","'enableManRecep' is assigned a value but never used.","'setEnableManRecep' is assigned a value but never used.","'setamt_paid' is assigned a value but never used.","'setpayments' is assigned a value but never used.","'isEmployersearch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Imported JSX component Member_registeration must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Employer_registration must be in PascalCase or SCREAMING_SNAKE_CASE","'post' is defined but never used.","'MicNone' is defined but never used.","'ValidatedItems' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'date_received' is assigned a value but never used.","'setDate_received' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has a missing dependency: 'userdata.id'. Either include it or remove the dependency array.",["787"],"jsx-a11y/scope","The scope prop can only be used on <th> elements.","'set_tab_active' is defined but never used.","'Button' is defined but never used.","'t_date' is defined but never used.","'setemp_no' is assigned a value but never used.","'city' is assigned a value but never used.","'State' is assigned a value but never used.","no-dupe-keys","Duplicate key 'date_incorporated'.","ObjectExpression","'dispatch' is assigned a value but never used.","'setisdisabled' is assigned a value but never used.","Assign object to a variable before exporting as module default","'SdCardTwoTone' is defined but never used.","'msg' is assigned a value but never used.","'useEffect' is defined but never used.","'file1' is assigned a value but never used.","'setfile1' is assigned a value but never used.","'useSelector' is defined but never used.","'get_sr_data_action' is defined but never used.","'reg_payload' is assigned a value but never used.","no-native-reassign",["788"],"no-negated-in-lhs",["789"],"'useStore' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'isLoading' is assigned a value but never used.",["790"],"'Return' is defined but never used.","'Employer' is defined but never used.","'MdPersonOutline' is defined but never used.","'toBePartiallyChecked' is defined but never used.",["791"],"'Member_register' is defined but never used.","'ServiceRegistration' is defined but never used.","React Hook useEffect has a missing dependency: 'term'. Either include it or remove the dependency array.",["792"],"'Employer_registration' is defined but never used.","'_' is assigned a value but never used.","'paymentsColumns' is assigned a value but never used.","'set_employ_registration' is defined but never used.","'setSrId' is assigned a value but never used.","'enableEmpRegForm' is assigned a value but never used.","'setEnableEmpRegForm' is assigned a value but never used.","'getValues' is assigned a value but never used.","'watch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.id', 'setSRFormData', and 'srNum'. Either include them or remove the dependency array.",["793"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"794","text":"795"},"'SearchOutlined' is defined but never used.","'Input' is defined but never used.","'Space' is defined but never used.","'Highlighter' is defined but never used.","React Hook useEffect has missing dependencies: 'srData' and 'userdata.id'. Either include them or remove the dependency array.",["796"],"'useFormik' is defined but never used.","'Field' is defined but never used.","'FormikProvider' is defined but never used.","'AiOutlineSearch' is defined but never used.","'Modal' is defined but never used.","'set_employ_save' is defined but never used.","'Activities' is defined but never used.","'_' is defined but never used.","'Alert' is defined but never used.","'setSrForm' is assigned a value but never used.","'errors' is assigned a value but never used.",{"range":"797","text":"795"},"React Hook useEffect has missing dependencies: 'emp_no' and 'getCompanyDetails'. Either include them or remove the dependency array.",["798"],"Duplicate key 'legalName'.","'hour' is assigned a value but never used.","'minutes' is assigned a value but never used.","'seconds' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setFormData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array.",["799"],"'Avatar' is defined but never used.","'List' is defined but never used.","'setEmpNumber' is assigned a value but never used.","'setIsDisable' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'empNumber'. Either include it or remove the dependency array.",["800"],"'yupResolver' is defined but never used.","'yup' is defined but never used.","'setValue' is assigned a value but never used.","'watchAllFields' is assigned a value but never used.",{"range":"801","text":"795"},["802"],{"range":"803","text":"795"},["804"],"'setSRFormData' is assigned a value but never used.","'srFormDataValue' is assigned a value but never used.","'employerNumber' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.id' and 'srNum'. Either include them or remove the dependency array.",["805"],"'Radio' is defined but never used.","'formatDateWithoutTimestamp' is defined but never used.",["806"],"'AutoComplete' is defined but never used.","'uploadFile' is assigned a value but never used.","'userdata' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'empNumber' and 'srFormData'. Either include them or remove the dependency array.",["807"],"'setSrRegistration' is defined but never used.","'setLookUp' is assigned a value but never used.",{"range":"808","text":"795"},"Duplicate key 'sr_type'.",{"desc":"809","fix":"810"},{"desc":"811","fix":"812"},{"desc":"813","fix":"814"},"no-global-assign","no-unsafe-negation",{"desc":"809","fix":"815"},{"desc":"811","fix":"816"},{"desc":"817","fix":"818"},{"desc":"819","fix":"820"},[4883,4894],"\r\n        .",{"desc":"821","fix":"822"},[2190,2201],{"desc":"823","fix":"824"},{"desc":"825","fix":"826"},{"desc":"827","fix":"828"},[1221,1232],{"desc":"827","fix":"829"},[1165,1176],{"desc":"827","fix":"830"},{"desc":"831","fix":"832"},{"desc":"813","fix":"833"},{"desc":"834","fix":"835"},[1522,1533],"Update the dependencies array to be: [dispatch, isLoggedIn]",{"range":"836","text":"837"},"Update the dependencies array to be: [user_data.firstName, user_data.lastName, username]",{"range":"838","text":"839"},"Update the dependencies array to be: [userdata.id]",{"range":"840","text":"841"},{"range":"842","text":"837"},{"range":"843","text":"839"},"Update the dependencies array to be: [term]",{"range":"844","text":"845"},"Update the dependencies array to be: [props.id, setSRFormData, srNum]",{"range":"846","text":"847"},"Update the dependencies array to be: [srData, userdata.id]",{"range":"848","text":"849"},"Update the dependencies array to be: [emp_no, getCompanyDetails]",{"range":"850","text":"851"},"Update the dependencies array to be: [formData]",{"range":"852","text":"853"},"Update the dependencies array to be: [empNumber]",{"range":"854","text":"855"},{"range":"856","text":"855"},{"range":"857","text":"855"},"Update the dependencies array to be: [props.id, srNum]",{"range":"858","text":"859"},{"range":"860","text":"841"},"Update the dependencies array to be: [empNumber, srFormData]",{"range":"861","text":"862"},[571,573],"[dispatch, isLoggedIn]",[519,529],"[user_data.firstName, user_data.lastName, username]",[600,602],"[userdata.id]",[571,573],[519,529],[833,835],"[term]",[2780,2782],"[props.id, setSRFormData, srNum]",[872,874],"[srData, userdata.id]",[2715,2717],"[emp_no, getCompanyDetails]",[520,522],"[formData]",[721,723],"[empNumber]",[1662,1664],[1711,1713],[1214,1216],"[props.id, srNum]",[1289,1291],[2538,2540],"[empNumber, srFormData]"]